{
	"name": "Dedupe",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "TestBlob",
						"type": "DatasetReference"
					},
					"name": "BLOBDS"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SQLTableQ",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Rowhash"
				},
				{
					"name": "Distinct"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as short,",
				"          lastname as string,",
				"          firstname as string,",
				"          title as string,",
				"          titleofcourtesy as string,",
				"          birthdate as string,",
				"          hiredate as string,",
				"          address as string,",
				"          city as string,",
				"          region as string,",
				"          postalcode as short,",
				"          country as string,",
				"          phone as string,",
				"          mgrid as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> BLOBDS",
				"BLOBDS derive(rowhash = sha2(256, columns())) ~> Rowhash",
				"Rowhash aggregate(groupBy(rowhash),",
				"     each(match(name!='rowhash'), $$ = first($$))) ~> Distinct",
				"Distinct sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          empid,",
				"          lastname,",
				"          firstname,",
				"          title,",
				"          titleofcourtesy,",
				"          birthdate,",
				"          hiredate,",
				"          address,",
				"          city,",
				"          region,",
				"          postalcode,",
				"          country,",
				"          phone,",
				"          mgrid",
				"     )) ~> sink1"
			]
		}
	}
}