{
	"name": "Continuing Monthly",
	"properties": {
		"activities": [
			{
				"name": "Copy Continuing Members",
				"description": "",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Set end of the month as Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "\nWITH CTE AS (\n    SELECT \n\tcategory='Continuing', \n\tB.AccountID  , \n\tEOMONTH(GETDATE()) as MonthDate, \n\n     CASE \n\t WHEN A.MemberGrade__c  IS NULL \n\t  Then B.Grade__c\n\t  Else A.MemberGrade__c \n\t END \n\t AS [MemberGrade],\n\n\tCASE \n\t  WHEN A.BillingGrade__c  IS NULL \n\t\tTHEN  B.MemberBillingGrade__c \n\t\tWHEN A.BillingGrade__c IN ( '14 - Student - PYear' ,  '14 – Student – PYear' , '16 - Student - PYear',  '17 - Student - PYear' , '18 - Student - PYear' ) \n\t\tThen  '14 - Student - PYear'         \n\t  ELSE  A.BillingGrade__c \n\t\tEND \n\t\tAS [BillingGrade], \n\n       --We create BranchGroup from Branch Infromation avaialble in Account table  \n\t\tCASE            \n\t\twhen A.branch__c ='Canberra'  then  'CANB'          \n\t\twhen A.branch__c ='New South Wales'  then  'NSW'          \n\t\twhen A.branch__c ='Northern Territory' then  'NT'          \n\t\twhen A.branch__c ='Overseas' then  'os'          \n\t\twhen A.branch__c IN  ('Queensland' , 'South Pacific Overseas')  then  'QLD'          \n\t\twhen A.branch__c ='South Australia' then  'SA'          \n\t\twhen A.branch__c ='Tasmania' then  'TAS'          \n\t\twhen A.branch__c ='Victoria' then  'VIC'          \n\t\twhen A.branch__c ='Western Australia' then  'WA'          \n\t\twhen A.branch__C is NULL and HiddenUserLocationState__c ='Overseas' then 'os'          \n\t\tELSE null          \n       END as [BranchGroup]  , \n\t\t\n\n\t\t-- Codifying the gender from Account table & assessment Table where ever Present \n\t\tCASE           \n\t\tWhen A.Gender__c in ('F', 'Female' )  or  A.Title__c  in ('Miss', 'Mrs', 'Ms')  Then 'Female'          \n\t\tWhen A.Gender__c in ('MALE', 'M')  or  A.Title__c  in ('Mr.', 'Sir', 'Ms')   then 'Male'          \n\t\tWhen A.Gender__c is NULL then (select DISTINCT(c.Applicant_Title__c) from  [dbo].[assessment] c  where B.accountid = c.applicantname__C  )          \n\t\telse A.Gender__c          \n\t\tend as [Gender]    , \n\n\t\t\n\t\t\n\t\t--Codifying certification level into [certificationGroup] from Account object \n\t\tCASE          \n\t\twhen  CertificationLevel__c in ('CP','CP Lapsed') then 'CP'          \n\t\twhen CertificationLevel__c in ('CT','CT Lapsed') then 'CT'          \n\t\twhen CertificationLevel__c in ('Not Certified') then 'Not Certified'          \n\t\telse NULL          \n\t\tend as [certificationGroup],\n\t\t\n\t\t---Fetching Attributes from Account table \n\n\t\tCertificationLevel__c as  [CertificationLevel] ,           \n\t\t A.PPP__c as PPP ,              \n\t\t A.id as [AccountObjID],           \n\t\t A.email__c as [Email],           \n\t\t A.type as [AccountType],          \n\t\t A.MembershipNumber__c as [MembershipNumber],    \n\t\t A.DateOfBirth__c, \n\t\tA.Days_since_Current_Membership_Expiry__c, \n\t\tA.HiddenFullName__c as [PersonFullName],          \n\t\tA.CurrentMembershipExpiry__c as [CurrentMembershipExpiry],          \n\t\tA.PersonAccountJoinedDate__c as [JoinedDate],  \n\t\tA.branch__c as [Branch],           \n\t\tA.Geography__c as [Geography],           \n\t\tA.[ShippingCountry] as [WorkCountry],           \n\t\tA.[BillingCountry] as [HomeCountry],       \n\t\tA.Former_Billing_Grade1__c  ,    \n\t\t\n\t\tA.Membership_Status__c as AccountStatus,\n\t\tB.status as contractStatus, \n\n\t  CASE \n\t   WHEN A.Membership_Status__c  IS NULL \n\t   Then B.Status \n\t   ELSE A.Membership_Status__c\n\t   END as Membership_Status,       \n\t\t\n\t\t\n\n\t--Concanating Billing Grade & Former Billing Grades into BillingGradeConcat , To be used in next CTE \n\t\tCONCAT(A.BillingGrade__c, '_',A.Former_Billing_Grade1__c) as BillingGradeConcat ,  \n\t\t\t   \n\t\tCONVERT(DATE, DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0)) AS ExtractDate,  --it will return the First Day of the month on any day , '2024-06-01'\n\t\t\n\t\t LEFT(DATENAME(MONTH, GETDATE()), 3) + '-' + RIGHT(CONVERT(VARCHAR(4), YEAR(GETDATE())), 2) AS [FYYear],  --It will return month & Year , exmaple Jun-24 \n\n\n\t\t--Case statement will look for financial year \n\t    CASE\n\t\tWHEN CONVERT(DATE, DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0))  between '2024-07-01' and '2025-06-30'\n\t\tTHEN 'FY 25'\n\t\tWHEN CONVERT(DATE, DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0))  between '2023-07-01' and '2024-06-30'\n\t\tTHEN 'FY 24'\n\t\t ELSE NULL \n\t\tEND \n\t\tas [FY],\t\n\t\t\n\t\tLEFT(LEFT(DATENAME(MONTH, GETDATE()), 3) + '-' + RIGHT(CONVERT(VARCHAR(4), YEAR(GETDATE())), 2),3)   AS [Month]     --it will return the current month \n\t  \t  \n\t --update the Function here \n      from [salesforce].[Contract]  B\n\t  Inner join  [salesforce].[Account] A \n\t  on B.AccountId=A.id\n\t  where  B.currentmembership__c =1\n\t  and  B.Status IN ('Active Financial') \n\t ---and B.accountid not in  ( select Newmembers  from  [membership].[members_renew12months_A](('@{variables('date')}')  )\nand B.accountid not in  ( select Newmembers  from  [membership].[members_renew12months_A]('2024-07-31'))\n      ---and B.accountid not in  ( select Newmembers from   [membership].[members_new12month_A]('@{variables('date')}')  )\nand B.accountid not in  ( select Newmembers from   [membership].[members_new12month_A]('2024-07-31'))\n\t  \n\n\n\n)\n\nselect * from cte",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "delete from  [membership].[Mem_dashboard01]\nwhere  monthdate ='@{variables('date')}'\nand  category ='Continuing'",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "category",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "category",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "AccountID",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "AccountID",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "MonthDate",
									"type": "DateTime",
									"physicalType": "date"
								},
								"sink": {
									"name": "MonthDate",
									"type": "DateTime",
									"physicalType": "date"
								}
							},
							{
								"source": {
									"name": "MemberGrade",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "MemberGrade",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "BranchGroup",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "BranchGroup",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Gender",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Gender",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "certificationGroup",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "certificationGroup",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CertificationLevel",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "CertificationLevel",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "PPP",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "PPP",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "AccountObjID",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "AccountObjID",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Email",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Email",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "AccountType",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "AccountType",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "DateOfBirth__c",
									"type": "DateTime",
									"physicalType": "datetime2"
								},
								"sink": {
									"name": "DateOfBirth__c",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Days_since_Current_Membership_Expiry__c",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 18
								},
								"sink": {
									"name": "Days_since_Current_Membership_Expiry__c",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 18
								}
							},
							{
								"source": {
									"name": "PersonFullName",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "PersonFullName",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "CurrentMembershipExpiry",
									"type": "DateTime",
									"physicalType": "datetime2"
								},
								"sink": {
									"name": "CurrentMembershipExpiry",
									"type": "DateTime",
									"physicalType": "datetime2"
								}
							},
							{
								"source": {
									"name": "JoinedDate",
									"type": "DateTime",
									"physicalType": "datetime2"
								},
								"sink": {
									"name": "JoinedDate",
									"type": "DateTime",
									"physicalType": "datetime2"
								}
							},
							{
								"source": {
									"name": "Branch",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Branch",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Geography",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Geography",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "WorkCountry",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "WorkCountry",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "HomeCountry",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "HomeCountry",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Former_Billing_Grade1__c",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Former_Billing_Grade1__c",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "BGG",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "BGG",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "BillingGradeConcat",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "BillingGradeConcat",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "ExtractDate",
									"type": "DateTime",
									"physicalType": "date"
								},
								"sink": {
									"name": "ExtractDate",
									"type": "DateTime",
									"physicalType": "date"
								}
							},
							{
								"source": {
									"name": "FYYear",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "FYYear",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "FY",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "FY",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Month",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Month",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "BillingGrade",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "BillingGrade",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "Heirarchy",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "Heirarchy",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "subsegments",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "subsegments",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Membership_Status",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Membership_Status",
									"type": "String",
									"physicalType": "varchar"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "AzureSQLSP",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "SQLTableQ",
						"type": "DatasetReference",
						"parameters": {
							"tablename": "Mem_dashboard01",
							"schemaname": "membership"
						}
					}
				]
			},
			{
				"name": "Set end of the month as Date",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "date",
					"value": {
						"value": "@formatDateTime(addDays(startOfMonth(addToTime(utcnow(), 1, 'Month')), -1), 'yyyy-MM-dd')",
						"type": "Expression"
					}
				}
			}
		],
		"variables": {
			"date": {
				"type": "String",
				"defaultValue": "@formatDateTime(addDays(startOfMonth(addToTime(utcnow(), 1, 'Month')), -1), 'yyyy-MM-dd')"
			}
		},
		"folder": {
			"name": "ACS/Membership/Monthly"
		},
		"annotations": []
	}
}