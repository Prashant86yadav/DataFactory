{
	"name": "s4_util_Cn_to_Sf_Process_Lookups",
	"properties": {
		"description": "Dynamic pipeline writing to Salesforce",
		"activities": [
			{
				"name": "Set faulted status if some lookups not found",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Update canonical if lookups existed",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@variables('lookupsNotFound')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Set staging to faulted for missing lookups",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "declare @@correlation_id uniqueidentifier = '@{pipeline().parameters.CorrelationID}';\ndeclare @@entity_name nvarchar(80) = '@{json(variables('lookup')).entityName}';\ndeclare @@instance_name nvarchar(80) = '@{json(variables('lookup')).instanceName}';\n\nUPDATE fd\n\tSET [status] = 'Faulted'\nFROM stg.file_data fd \ninner join canonical.[@{json(variables('lookup')).entityName}] cn on cn.dl_correlation_id = fd.correlation_id and cn.dl_stg_item_id = fd.item_id\nleft join salesforce.entity_lookups el on el.dl_correlation_id = cn.dl_correlation_id \n\tand el.dl_instance_name = cn.dl_instance_name \n\tand el.[@{json(variables('lookup')).lookupField}] = cn.[@{json(variables('lookup')).lookupField}] \n\tand el.dl_entity_name = @@entity_name\nWHERE \n\tcn.dl_correlation_id = @@correlation_id and cn.dl_instance_name = @@instance_name and cn.[@{json(variables('lookup')).lookupField}] is not null\n\tand el.id is null;\n\nSELECT @@ROWCOUNT [rows_updated], @@entity_name[entity_name],@@instance_name[instance_name];",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								}
							}
						},
						{
							"name": "Log - Set staging to faulted for missing lookups",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Set staging to faulted for missing lookups",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[logging].[create_sys_log]",
								"storedProcedureParameters": {
									"base64_data": {
										"value": {
											"value": "@base64(string(activity('Set staging to faulted for missing lookups').output))",
											"type": "Expression"
										},
										"type": "String"
									},
									"context": {
										"value": {
											"value": "@{pipeline().Pipeline} -> Set staging to faulted for missing lookups",
											"type": "Expression"
										},
										"type": "String"
									},
									"run_id": {
										"value": {
											"value": "@variables('RunId')",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"source_name": {
										"value": {
											"value": "@{json(variables('lookup')).entityName} (@{json(variables('lookup')).instanceName})",
											"type": "Expression"
										},
										"type": "String"
									},
									"system_name": {
										"value": {
											"value": "@pipeline().parameters.Configuration.sourceSystemName",
											"type": "Expression"
										},
										"type": "String"
									},
									"target_name": {
										"value": null,
										"type": "String"
									},
									"type": {
										"value": {
											"value": "@if(equals(activity('Set staging to faulted for missing lookups').Status, 'Failed'), 'error', 'info')",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							}
						},
						{
							"name": "Warn - Set staging to faulted for missing lookups_copy1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Set staging to faulted for missing lookups",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[logging].[create_sys_log]",
								"storedProcedureParameters": {
									"base64_data": {
										"value": {
											"value": "@base64(string(activity('update canonical with lookup data').output))",
											"type": "Expression"
										},
										"type": "String"
									},
									"context": {
										"value": {
											"value": "@{pipeline().Pipeline} -> Missing lookup entities, found @{activity('update canonical with lookup data').output.firstRow.rows_updated} of @{activity('update canonical with lookup data').output.firstRow.total_rows}",
											"type": "Expression"
										},
										"type": "String"
									},
									"run_id": {
										"value": {
											"value": "@variables('RunId')",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"source_name": {
										"value": {
											"value": "@{json(variables('lookup')).entityName} (@{json(variables('lookup')).instanceName})",
											"type": "Expression"
										},
										"type": "String"
									},
									"system_name": {
										"value": {
											"value": "@pipeline().parameters.Configuration.sourceSystemName",
											"type": "Expression"
										},
										"type": "String"
									},
									"target_name": {
										"value": null,
										"type": "String"
									},
									"type": {
										"value": "warn",
										"type": "String"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "Fetch lookup values",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Set runid",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@replace(json(variables('lookup')).canonicalQuery,'{replace_with_corr_id}',pipeline().parameters.CorrelationID)\n",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Create lookup queries",
				"type": "AzureFunctionActivity",
				"dependsOn": [
					{
						"activity": "Fetch lookup values",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"functionName": "SalesforceLookupQuery",
					"method": "POST",
					"body": {
						"value": "@json(concat('{'\n,'\"entityName\":\"', json(variables('lookup')).entityName ,'\"'\n,',\"lookupField\":\"', json(variables('lookup')).lookupField ,'\"'\n,',\"queryFields\":\"', json(variables('lookup')).queryFields ,'\"'\n,',\"lookupValues\":', activity('Fetch lookup values').output.value\n,'}'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "process lookups",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Create lookup queries",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Create lookup queries').output.queries",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Lookup to JSON staging",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SalesforceSource",
									"additionalColumns": [
										{
											"name": "dl_correlation_id",
											"value": {
												"value": "@pipeline().parameters.CorrelationID",
												"type": "Expression"
											}
										},
										{
											"name": "dl_entity_name",
											"value": {
												"value": "@json(variables('lookup')).entityName",
												"type": "Expression"
											}
										},
										{
											"name": "dl_instance_name",
											"value": {
												"value": "@json(variables('lookup')).instanceName",
												"type": "Expression"
											}
										}
									],
									"query": {
										"value": "@item().query",
										"type": "Expression"
									},
									"readBehavior": "query"
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							}
						},
						{
							"name": "Lookup staging to SQL",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Lookup to JSON staging",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": false,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"preCopyScript": "/*truncate table salesforce.entity_lookups;*/",
									"disableMetricsCollection": false
								},
								"enableStaging": false
							}
						},
						{
							"name": "Delete JSON Staging File",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "Lookup staging to SQL",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 3,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "Log - Lookup staging to SQL",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Lookup staging to SQL",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[logging].[create_sys_log]",
								"storedProcedureParameters": {
									"base64_data": {
										"value": {
											"value": "@base64(string(activity('Lookup staging to SQL').output))",
											"type": "Expression"
										},
										"type": "String"
									},
									"context": {
										"value": {
											"value": "@{pipeline().Pipeline} -> Fetch lookups",
											"type": "Expression"
										},
										"type": "String"
									},
									"run_id": {
										"value": {
											"value": "@variables('RunId')",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"source_name": {
										"value": {
											"value": "@{json(variables('lookup')).entityName} (@{json(variables('lookup')).instanceName})",
											"type": "Expression"
										},
										"type": "String"
									},
									"system_name": {
										"value": {
											"value": "@pipeline().parameters.Configuration.sourceSystemName",
											"type": "Expression"
										},
										"type": "String"
									},
									"target_name": {
										"value": "salesforce.entity_lookups",
										"type": "String"
									},
									"type": {
										"value": {
											"value": "@if(equals(activity('Lookup staging to SQL').Status, 'Failed'), 'error', 'info')",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							}
						},
						{
							"name": "Log - Lookup to JSON staging",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Lookup to JSON staging",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[logging].[create_sys_log]",
								"storedProcedureParameters": {
									"base64_data": {
										"value": {
											"value": "@base64(string(activity('Lookup to JSON staging')))",
											"type": "Expression"
										},
										"type": "String"
									},
									"context": {
										"value": {
											"value": "@{pipeline().Pipeline} -> Lookup staging to SQL",
											"type": "Expression"
										},
										"type": "String"
									},
									"run_id": {
										"value": {
											"value": "@variables('RunId')",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"source_name": {
										"value": {
											"value": "@json(variables('lookup')).entityName",
											"type": "Expression"
										},
										"type": "String"
									},
									"system_name": {
										"value": {
											"value": "@pipeline().parameters.Configuration.sourceSystemName",
											"type": "Expression"
										},
										"type": "String"
									},
									"target_name": {
										"value": {
											"value": "@concat(\npipeline().RunId\n,'_'\n,item().entityName\n,'_'\n,json(variables('lookup')).instanceName\n,'.json')",
											"type": "Expression"
										},
										"type": "String"
									},
									"type": {
										"value": {
											"value": "@if(equals(activity('Lookup to JSON staging').Status, 'Failed'), 'error', 'info')",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "Log - Create lookup queries",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Create lookup queries",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[logging].[create_sys_log]",
					"storedProcedureParameters": {
						"base64_data": {
							"value": {
								"value": "@base64(string(activity('Create lookup queries').output))",
								"type": "Expression"
							},
							"type": "String"
						},
						"context": {
							"value": {
								"value": "@{pipeline().Pipeline} -> Create lookup queries",
								"type": "Expression"
							},
							"type": "String"
						},
						"run_id": {
							"value": {
								"value": "@variables('RunId')",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"source_name": {
							"value": {
								"value": "@{json(variables('lookup')).entityName} (@{json(variables('lookup')).instanceName})",
								"type": "Expression"
							},
							"type": "String"
						},
						"system_name": {
							"value": {
								"value": "@pipeline().parameters.Configuration.sourceSystemName",
								"type": "Expression"
							},
							"type": "String"
						},
						"target_name": {
							"value": "SalesforceLookupQuery",
							"type": "String"
						},
						"type": {
							"value": {
								"value": "@if(equals(activity('Create lookup queries').Status, 'Failed'), 'error', 'info')",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				}
			},
			{
				"name": "Set runid",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set lookup field",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "RunId",
					"value": {
						"value": "@pipeline().parameters.ParentRunID",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set lookup field",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "lookup",
					"value": {
						"value": "@string(pipeline().parameters.Configuration.lookup)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Log - Fetch lookup values",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Fetch lookup values",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[logging].[create_sys_log]",
					"storedProcedureParameters": {
						"base64_data": {
							"value": {
								"value": "@base64(string(activity('Fetch lookup values')))",
								"type": "Expression"
							},
							"type": "String"
						},
						"context": {
							"value": {
								"value": "@{pipeline().Pipeline} -> Fetch lookup values",
								"type": "Expression"
							},
							"type": "String"
						},
						"run_id": {
							"value": {
								"value": "@variables('RunId')",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"source_name": {
							"value": {
								"value": "@{json(variables('lookup')).entityName} (@{json(variables('lookup')).instanceName})",
								"type": "Expression"
							},
							"type": "String"
						},
						"system_name": {
							"value": {
								"value": "@pipeline().parameters.Configuration.sourceSystemName",
								"type": "Expression"
							},
							"type": "String"
						},
						"target_name": {
							"value": null,
							"type": "String"
						},
						"type": {
							"value": {
								"value": "@if(equals(activity('Fetch lookup values').Status, 'Failed'), 'error', 'info')",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				}
			},
			{
				"name": "Update canonical if lookups existed",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "process lookups",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@not(empty(activity('Create lookup queries').output.queries))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Warn - No lookups found",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[logging].[create_sys_log]",
								"storedProcedureParameters": {
									"base64_data": {
										"value": {
											"value": "@base64(string(activity('Fetch lookup values')))",
											"type": "Expression"
										},
										"type": "String"
									},
									"context": {
										"value": {
											"value": "@{pipeline().Pipeline} -> Lookup values not found",
											"type": "Expression"
										},
										"type": "String"
									},
									"run_id": {
										"value": {
											"value": "@variables('RunId')",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"source_name": {
										"value": {
											"value": "@json(variables('lookup')).lookupField",
											"type": "Expression"
										},
										"type": "String"
									},
									"system_name": {
										"value": {
											"value": "@pipeline().parameters.Configuration.sourceSystemName",
											"type": "Expression"
										},
										"type": "String"
									},
									"target_name": {
										"value": {
											"value": "@{json(variables('lookup')).entityName} (@{json(variables('lookup')).instanceName})",
											"type": "Expression"
										},
										"type": "String"
									},
									"type": {
										"value": "warn",
										"type": "String"
									}
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "update canonical with lookup data",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@replace(json(variables('lookup')).canonicalUpdate,'{replace_with_corr_id}',pipeline().parameters.CorrelationID)",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								}
							}
						},
						{
							"name": "Log - update canonical with lookup data",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "update canonical with lookup data",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[logging].[create_sys_log]",
								"storedProcedureParameters": {
									"base64_data": {
										"value": {
											"value": "@base64(string(activity('update canonical with lookup data').output))",
											"type": "Expression"
										},
										"type": "String"
									},
									"context": {
										"value": {
											"value": "@{pipeline().Pipeline} -> update canonical with lookup data",
											"type": "Expression"
										},
										"type": "String"
									},
									"run_id": {
										"value": {
											"value": "@variables('RunId')",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"source_name": {
										"value": {
											"value": "@{json(variables('lookup')).entityName} (@{json(variables('lookup')).instanceName})",
											"type": "Expression"
										},
										"type": "String"
									},
									"system_name": {
										"value": {
											"value": "@pipeline().parameters.Configuration.sourceSystemName",
											"type": "Expression"
										},
										"type": "String"
									},
									"target_name": {
										"value": {
											"value": "canonical.@{json(variables('lookup')).entityName}",
											"type": "Expression"
										},
										"type": "String"
									},
									"type": {
										"value": {
											"value": "@if(equals(activity('update canonical with lookup data').Status, 'Failed'), 'error', 'info')",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							}
						},
						{
							"name": "Set lookup count status",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "update canonical with lookup data",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "lookupsNotFound",
								"value": {
									"value": "@not(equals(activity('update canonical with lookup data').output.firstRow.rows_updated,activity('update canonical with lookup data').output.firstRow.total_rows))",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"Configuration": {
				"type": "object"
			},
			"CorrelationID": {
				"type": "string"
			},
			"ParentRunID": {
				"type": "string"
			}
		},
		"variables": {
			"salesforceLoggingPath": {
				"type": "String",
				"defaultValue": "copyactivity-logs/cn-to-sf"
			},
			"stagingContainerName": {
				"type": "String",
				"defaultValue": "data-loader-stg"
			},
			"RunId": {
				"type": "String"
			},
			"lookup": {
				"type": "String"
			},
			"lookupsNotFound": {
				"type": "Boolean"
			}
		},
		"folder": {
			"name": "Core Bulk Data Load"
		},
		"annotations": []
	}
}