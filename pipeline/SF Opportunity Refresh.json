{
	"name": "SF Opportunity Refresh",
	"properties": {
		"activities": [
			{
				"name": "Copy Salesforce object",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Set brpExtractTo",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SalesforceSource",
						"query": {
							"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
							"type": "Expression"
						},
						"readBehavior": "query"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "upsert",
						"upsertSettings": {
							"useTempDB": true,
							"keys": [
								"id"
							]
						},
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ACSDSSF",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "SQLTableQ",
						"type": "DatasetReference",
						"parameters": {
							"tablename": {
								"value": "@pipeline().parameters.TargetTableName",
								"type": "Expression"
							},
							"schemaname": {
								"value": "@pipeline().parameters.schemaname",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Set  brpExtractFrom",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "GET TGT HWM  SQL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "brpExtractFrom",
					"value": {
						"value": "@formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')\n\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "GET TGT HWM  SQL",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SQLTableQ",
						"type": "DatasetReference",
						"parameters": {
							"tablename": {
								"value": "@pipeline().parameters.TargetTableName",
								"type": "Expression"
							},
							"schemaname": {
								"value": "@pipeline().parameters.schemaname",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "GET SRC HighWaterMark",
				"description": "Find the latest change in the Salesforce table indicated by the parameter",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Set  brpExtractFrom",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SalesforceSource",
						"query": {
							"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
							"type": "Expression"
						},
						"readBehavior": "query"
					},
					"dataset": {
						"referenceName": "ACSDSSF",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Set brpExtractTo",
				"description": "",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "GET SRC HighWaterMark",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "brpExtractTo",
					"value": {
						"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"SourceTableName": {
				"type": "string",
				"defaultValue": "Opportunity "
			},
			"TargetTableName": {
				"type": "string",
				"defaultValue": "Opportunity "
			},
			"ColumnList": {
				"type": "string",
				"defaultValue": " Id, IsDeleted, AccountId, RecordTypeId, IsPrivate, Name, Description, StageName, Amount, Probability, ExpectedRevenue, TotalOpportunityQuantity, CloseDate, Type, NextStep, LeadSource, IsClosed, IsWon, ForecastCategory, ForecastCategoryName, CurrencyIsoCode, CampaignId, HasOpportunityLineItem, Pricebook2Id, OwnerId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, PushCount, LastStageChangeDate, FiscalQuarter, FiscalYear, Fiscal, ContactId, LastViewedDate, LastReferencedDate, ContractId, HasOpenActivity, HasOverdueTask, LastAmountChangedHistoryId, LastCloseDateChangedHistoryId, Brand__c, ACS_Office__c, AccountEmail__c, AccountOwner__c, Automated_Tax_Receipt_Sent__c, Balance__c, BankReference__c, BatchRunDate__c, BoxFolderId__c, CappedOrMembershipBased__c, ChargeDateEmail__c, CongaCitySys__c, CongaCountrySys__c, CongaMembershipSubscriptionRenewal__c, CongaPaymentConfirmationEmailNonCC__c, CongaPostCodeSys__c, CongaStateSys__c, CongaStreetSys__c, CongaTaxInvoiceSaveOnly__c, CongaTaxReceiptAutoEmailNonCC__c, Conga_Email_Sent_From__c, Conga_Skills_Tax_Receipt_Auto_Email__c, CreateBoxFolder__c, CreditController__c, CreditNoteGenerated__c, CreditNoteID__c, Data_Migrated_from_XEN__c, DaysOutstanding__c, EstimatedBudget__c, GenerateCreditNote__c, Grand_Total_of_Non_Optional_Incl_GST__c, ICSFileID__c, Incomplete_Membership__c, Initial_Email_Sent_Non_CC__c, Invoice_Number__c, Invoiced__c, MOUType__c, Manual_Data_Entry__c, MembershipRenewalEmailSent__c, MembershipRenewal__c, Membership_End_Date__c, Membership_Start_Date__c, NeedsApproval__c, NextSteps__c, NumberofMembers__c, OpportunitySource__c, Opportunity_18_Digits_ID__c, Opportunity_ID_Autonumber__c, Opportunity_ID__c, Opportunity_Receipt_Template_ID__c, Oppportunity_Email_Template_ID__c, Oppty_Email_Temp_ID_Non_CC__c, Product_Type__c, Proposal_Template_Generated__c, Proposal_Used__c, Proposal_template_ID__c, Purchase_Order_Number__c, ReEngagementDate__c, ReadyToInvoice__c, ReasonForRefund__c, Reason__c, RefundApprovedDate__c, RefundBankDetails__c, Refund_Amount__c, Related_Contact_Email__c, Related_Contact_First_Name__c, Related_Contact_Title__c, Related_Contact__c, Related_Program__c, ReoccurringPaymentEmailSent__c, Sales_Invoice_ID__c, ScheduledEndDate__c, ScheduledStartDate__c, SolutionInterest__c, Grand_Total_of_Non_Optional_Excl_GST__c, Non_Optional_Grand_Total_GST__c, ProductCount__c, StateAllocationCode__c, Closed_Date_Updated_From_1st_Transaction__c, First_Transaction_Date__c, Canberra__c, Count_Update_Time__c, New_South_Wales__c, Northern_Territory__c, Overseas__c, PPP_Automation_Opp__c, Queensland__c, South_Australia__c, Tasmania__c, Victoria__c, Western_Australia__c, Refund_for_Duplicate_Payment__c, Conga_Membership_and_Certification_Email__c, NoOfMembersOnProgram__c, Approval_Status__c, Product_Family_Approval__c, MonthCreated__c, CloseMonth__c, CreatedInTheLast365Days__c, ClosedIn_the_Last_365_Days__c, Quater_Created__c, EventStartDate__c, Id__c, Parent_Account_Name__c, Parent_Account_Name_Link__c, South_Pacific_Overseas__c, Account_Name__c, Outfit_Membership_Renewal_Last_Update__c, Last_Attachment_Added__c, Send_Membership_Renewal_Email__c, Outfit_Tax_Invoice_Last_Update__c, Outfit_Tax_Invoice_Non_CC_Last_Update__c, Outfit_Tax_Invoice_Receipt_Non_CC_Last_U__c, Application_ID_Pendula__c, Skills_Recipient__c, Outfit_Event_Related_ACS_Office__c, Related_Program_Account_Mismatch__c, Approval_Required__c, Grand_Total_of_Non_WFD_Incl_GST__c, Needs_Approval__c, Payment_Due_Date__c, Program_Id_for_Documents__c, Program_for_Documents__c, Project__c, Reassign_Opportunity__c, Related_Program_End_Date__c, Renewal_Committed__c, Renewal_Started__c, Renewing_Program_Id__c, Send_Inactive_Notification_Date__c, Send_Inactive_Opportunity_Notification__c, Superseded_By__c, Upsell__c, Grand_Total_of_Non_WFD_Excl_GST__c, Membership_Opportunity_Product_Rollup__c, Non_WFD_Grand_Total_GST__c, PPP_Full_Fee_Memberships__c, ROI_Budget__c, WFD_Opportunity_Product_End_Date__c, WFD_Opportunity_Product_Rollup_All__c, WFD_Opportunity_Product_Rollup__c, WFD_Opportunity_Product_Start_Date__c, Pendula_Tax_Receipt_Sent__c, Total_Refund_Amount__c, Count_of_Transactions__c, Sum_of_Transactions__c, Days_Until_Closing__c, Eligible_for_Chatbot__c, October_Membership_Renewal_Communication__c, Outfit_Event_Tax_Invoice_Last_Update__c, Event_Member_Invoice_Payment__c, Outfit_Document_Date__c, Receipt_Outfit_Document_Id__c, Current_Membership_Expiry__c, Current_Membership_Expiry_As_Text__c, Private_Account__c, Outfit_Sales_Order_Document_Id__c, Outfit_Sales_Order_Document_Name__c, Litmos__Competitor_s__c, Litmos__CurrentGenerators__c, Litmos__DeliveryInstallationStatus__c, Litmos__MainCompetitors__c, Litmos__OrderNumber__c, Litmos__TrackingNumber__c, Is_Lead__c"
			},
			"schemaname": {
				"type": "string",
				"defaultValue": "salesforce"
			}
		},
		"variables": {
			"brpExtractFrom": {
				"type": "String",
				"defaultValue": "1900-12-31 00:00:00"
			},
			"brpExtractTo": {
				"type": "String",
				"defaultValue": "1900-12-31 00:00:00"
			}
		},
		"folder": {
			"name": "ACS/Salesforce"
		},
		"annotations": []
	}
}