{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "acs-as-poc-df01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SF AccreditedCourse__c Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforce"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(\n  less(  pipeline().parameters.brpExtractFrom,\nformatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')), \npipeline().parameters.brpExtractFrom,\nformatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@if(\n  less(  pipeline().parameters.brpExtractTo,\nformatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')), \npipeline().parameters.brpExtractTo,\nformatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "AccreditedCourse__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "AccreditedCourse__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, OwnerId, IsDeleted, Name, CurrencyIsoCode, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, AccreditationAssessment__c, Campus__c, Course_ID__c, Course__c, DisplayonWebsite__c, ExpiryDate__c, Notes__c, Outcomes__c, Start_Date__c, SEOUL_Accord__c, Engineers_Australia__c, Specialism__c, Conditions__c, Conditions_Due_Date__c, Conditions_Notes__c, Provisional__c, Provisional_Due_Date__c, Provisional_Notes__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					},
					"brpExtractFrom": {
						"type": "string",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "string",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF Assessment History Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  createddate >= {ts'@{variables('brpExtractFrom')}'} AND\ncreateddate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(createddate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(createddate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE createddate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Assessment__history"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "assessment__history"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, IsDeleted, ParentId, CreatedById, CreatedDate, Field, DataType, OldValue, NewValue"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF Assessment Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {
									"object2": "assessment"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "dbo"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.TargetTableName}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "dbo"
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "assessment__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "assessment"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "  Id ,OwnerId ,IsDeleted ,Name ,CurrencyIsoCode ,RecordTypeId ,CreatedDate ,CreatedById ,LastModifiedDate ,LastModifiedById ,SystemModstamp ,LastActivityDate ,LastViewedDate ,LastReferencedDate ,ACSMembershipNumberFormula__c ,ANZSCOCode__c ,ActivationDate__c ,Active__c ,ApplicantFirstName__c ,ApplicantInterview__c ,ApplicantName__c ,ApplicantPaid__c ,ApplicantState__c ,ApplicantSubmitEmailSent__c ,Applicant_Last_Name__c ,Applicant_Name_Formula__c ,Applicant_Title__c ,Applicant_eligible_for_Senior_Membership__c ,ApplicationStatusIndicator__c ,ApplicationSubtype__c ,ApplicationType__c ,AssessmentClosedDate__c ,AssessmentComments__c ,AssessmentDate__c ,AssessmentDueDate__c ,AssessmentPathway__c ,AssessmentResult__c ,Assessment_18_Digits_ID__c ,Assessment_Report_ID__c ,Assessment_Template_ID__c ,Assessor1ConflictOfInterest__c ,Assessor2ConflictofInterest__c ,AssessorReviewComments__c ,Assessor_Appeal_Comments__c ,Assessor__c ,AvgAssessorTimeDays__c ,BECEndorsementReason__c ,BECEndorsement__c ,BFCChair__c ,BalanceDue__c ,BirthCertificateOrPassportApproved__c ,BoxFolderId__c ,BranchManager__c ,CBOKNotes__c ,CPD_Hours_Percentage_Complete__c ,CPD_Hours_Required__c ,CPD_Run_Rate_Variance__c ,CPD_Target_Run_Rate__c ,CPPathwayScenario__c ,CPPathway__c ,CTPathwayScenario__c ,CTPathway__c ,CV_Notes__c ,Calculated__c ,CanUnsuitableBeRectified__c ,CaseAge__c ,CaseManager__c ,Certificate_Renewed__c ,CertificationExpiryDate__c ,CertificationPeriod__c ,CertificationStatus__c ,Certification_Type__c ,Change_Management__c ,Citation__c ,CommentsaddedtoUnsuccessfulEmail__c ,CompanyorUniversity__c ,CompletedApplicationReceivedDate__c ,Conga_Assessment_Report_Download__c ,Conga_Next_Action_Merge__c ,Contact_Email__c ,Contact__c ,Continuing__c ,ContributionRecognisedElsewhere__c ,ContributionWorthyofRecognition__c ,CountryOfBirth__c ,CountryOfResidence__c ,CreateBoxFolder__c ,CreditCardonFile__c ,CurrentUserCaseManager__c ,Current_Certification__c ,DIACComments__c ,Data_Information_Management__c ,Data_Migrated_from_XEN__c ,DateOfBirth__c ,DateOfKnowledgeMet__c ,Days_Remaining__c ,Days_Since_Submission_Date__c ,DeadlineDate__c ,DefaultEmailAddress__c ,DefaultMailAddressCode__c ,DefaultMailAddressID__c ,DefaultMailAddressStreet__c ,DefaultMailCity__c ,DefaultMailCountry__c ,DefaultMailPostalCode__c ,DefaultMailState__c ,Education__c ,Email_Address__c ,Email_Template__c ,Employed_in_ICT_school_research_facility__c ,End_Date__c ,ErrorsFoundCount__c ,Ethics__c ,ExcelledInWhichRoleArea__c ,Experience__c ,FinalReview__c ,FinalisedDate__c ,FollowUpDueDate__c ,Former_ANZSCO__c ,Former_Application_Sub_Type__c ,Former_Application_Type__c ,Former_Assessor_Name__c ,FromAssessorDate__c ,FromAssessorNotEdited__c ,Hardware_Software_Fundamentals__c ,HasCMSIntegrationCompleted__c ,Has_10yrs_of_professional_ICT_experience__c ,Highest_level_of_qualification_achieved__c ,Holds_Masters_by_Research_PhD__c ,HonoursandAwards__c ,Human_computer_Interaction__c ,ICTManagement__c ,ICTProblemSolving__c ,ICTProfessionalKnowledge__c ,ICT_Problem_Solving__c ,IT_Project_Management__c ,IT_governance__c ,ImpactOnITFieldManagement__c ,InPreparation15DayReminderDate__c ,InPreparation15DayReminder__c ,InPreparation25DayReminderDate__c ,InPreparation25DayReminder__c ,Internal_Notes__c ,Interpersonal_Communication__c ,IsICTKnowledgeAcceptable__c ,Keep_Certification_Status_Private__c ,LapsedComments__c ,LapsedFollowUp__c ,LastModifiedUserProfileName__c ,MCAssessmentOutcome__c ,Manual_Data_Entry__c, MeetCBOKRequirements__c, MembershipExpiry__c, Mobile__c, NFCAssessmentOutcome__c, Nationality__c, Networking__c, Next_Action_Due_Date__c, Next_Action__c, NominationSecondedByDate__c, NominationSecondedByEmail__c, NominationSecondedByPhone__c, NominationSecondedBy__c, NominatorACSMembershipNumber__c, NominatorEmail__c, NominatorName__c, NominatorPhoneNumber__c, Nominator_Declaration_Date__c, NonDecisionReady__c, OriginalApplicationReceived__c, Original_Received_Date__c, Overdrive_Target__c, Passport_Number__c, Password__c, Payment_Recieved__c, PeriodofMajorContribution__c, PhoneNumber__c, PlagiarismDetected__c, Position_Title_1__c, Position_Title_2__c, Potential_RMD__c, Previous_Certification__c, PriorityReason__c, Priority__c, ProfessionalYearComplete__c, Professionalism__c, Programming__c, ProjectReportUpload__c, ProjectReportsAttachedAndAcceptable__c, PublicationsandPatents__c, QADate__c, QualityCheckComment__c, Quality_Check_Status__c, REFERENCE_TO_X_EN__c, RMDCalculationErrorMessages__c, RMDLogicUsed__c, RPLComments__c, Ready_for_Renewal__c, ReasonforAppeal__c, ReasonforReviewChangeofANZSCO__c, ReasonforReviewExperience__c, ReasonforReviewQualification__c, ReasonforReview__c, RectifyComment__c, ReferToDIAC__c, Referee_Company_1__c, Referee_Company_2__c, Referee_Email_1__c, Referee_Email_2__c, Referee_Name_1__c, Referee_Name_2__c, Referee_Phone_1__c, Referee_Phone_2__c, RelatedAssessment__c, RelatedCertification__c, RenewalProcessed__c, RequirementsMetDate__c, ResultLetterApproved__c, Result_Letter_Template__c, ReviewOrAppealEmailTemplate__c, ReviewOrAppealTemplateID__c, Review_Unsuitable__c, SFIA_Specialism__c, Security_Management__c, Security_Policy__c, Service_Management__c, SkillsAgent__c, Societal_Issues_Legal_issues_Privacy__c, Status__c, SubmissionDate__c, Suggested_Pathway__c, Suggested_Type__c, Systems_Acquisition__c, Systems_Development__c, Target_CPD_Hours__c, Teamwork_Concepts_and_Issues__c, TechnologyBuilding__c, TechnologyResources__c, TotalAcceptedExperienceYM__c, TotalCPDHours__c, Total_CPD_Hours_and_Minutes__c, Total_CPD_Minutes_Conversion__c, TypeofCertificationAssessment__c, UnsuccessfulNominationCommunication__c, WhatMakesContributionDistinguished__c, WithAssessorDate__c, X5YearsProfessionalICTExpAtSFIA6__c, Years_in_SFIA_Specialism__c, Years_of_experience_in_ICT__c, No_of_Qualification_Accreditation__c, TotalAcceptedExperienceDays__c, TranscriptRollupQualifications__c, Certification_Lodged_with_Membership__c, ApplicantAttachmentsBoxFolderId__c, AssessorAttachmentsBoxFolderId__c, CmsApplicantBoxDocumentDetails__c, CmsBoxApplicantFileIdsToMove__c, ResultLetterBoxFolderId__c, MonthActivated__c, ExpriyMonth__c, ApplicationCreatedDateInXenAndSF__c, Xen_Application_ID__c, PrioriyInformation__c, Certificate_Specialism__c, RecommendedANZSCO__c, RecommendedApplicationType__c, LinkedApplication__c, CaseClosed__c, ApplicantDOB__c, No_RPL_Document__c, RMDFormatted__c, DateofKnowledgeMetFormatted__c, BypassValidation__c, CurrentPreviousWeekFinalisedDate__c, CurrentPreviousMonthFinalisedDate__c, Related_Certification_Status__c, Outfit_Assessment_Last_Update__c, Outfit_Last_Letter_Template__c, Outfit_Letter_Content__c, Email_Correspondence_Sent__c, Certification_Expiry_Date_As_Text__c, Days_Since_Activation__c, Membership_Status__c, Pendula_Test__c, PlagScan_Doc_Id__c, Plagiarism_Completion_Date__c, Outfit_Report_Document_Id__c, Outfit_Report_Document_Name__c, Plagiarism_Error__c, Plagiarism_Flag__c, Plagiarism_Level__c, Plagiarism_Score__c, Plagiarism_Status__c, Plagiarism_Submission_Date__c, View_in_PlagScan__c, Request_Additional_Documents__c, Unsuitable_Outcome__c, ProductID__c, GTI_Application__c, Certification_Category__c"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF CPD Hours Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "CPDHours__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "cpdhours"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": " [Id],      [OwnerId]       ,[IsDeleted]       ,[Name]       ,[CurrencyIsoCode]       ,[CreatedDate]       ,[CreatedById]       ,[LastModifiedDate]       ,[LastModifiedById]       ,[SystemModstamp]       ,[Account__c]       ,[BoxFolderId__c]       ,[Campaign__c]       ,[CertificationLookup__c]       ,[CreateBoxFolder__c]       ,[Data_Migrated_from_XEN__c]       ,[Date__c]       ,[Details__c]       ,[Hours__c]       ,[Objective__c]       ,[SFIA_Category__c]       ,[SFIA_Core_Skill__c]       ,[SFIA_Generic_Level__c]       ,[SFIA_Skill_Level__c]       ,[SFIA_Skill__c]       ,[SFIA_Subcategory__c]       ,[Source__c]       ,[Topic__c]       ,[Type__c]       ,[ObjectiveDetails__c]       ,[CPD_Created_Month__c]       ,[Cpd_Created_Quater__c]       ,[Primary_Competency_External_Reference__c]       ,[Primary_Competency_Framework__c]       ,[Primary_Competency_Full_Label__c]       ,[Primary_Competency_Label__c]       ,[Primary_Competency_Updated_from_Child__c]       ,[Primary_Competency__c]       ,[View_Time__c]"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF Contact Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "contact"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "contact"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": " Id, IsDeleted, MasterRecordId, AccountId, LastName, FirstName, Salutation, Name, OtherStreet, OtherCity, OtherState, OtherPostalCode, OtherCountry, OtherLatitude, OtherLongitude, OtherGeocodeAccuracy, MailingStreet, MailingCity, MailingState, MailingPostalCode, MailingCountry, MailingLatitude, MailingLongitude, MailingGeocodeAccuracy, Phone, Fax, MobilePhone, HomePhone, OtherPhone, AssistantPhone, ReportsToId, Email, Title, Department, AssistantName, LeadSource, Birthdate, Description, CurrencyIsoCode, OwnerId, HasOptedOutOfEmail, HasOptedOutOfFax, DoNotCall, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, LastCURequestDate, LastCUUpdateDate, LastViewedDate, LastReferencedDate, EmailBouncedReason, EmailBouncedDate, IsEmailBounced, PhotoUrl, Jigsaw, JigsawContactId, IndividualId, Assessment__c, IsLead__c, MembershipPPP__c, PreferredName__c, ShadowAccount__c, Contact_18_Digits_ID__c, Membership_Number__c, Login_Generation_Error__c, Login_Generation_Status__c, Litmos__Access_Level__c, Litmos__Completed_Percentage__c, Litmos__Courses_Assigned__c, Litmos__Courses_Completed__c, Litmos__Deactivate_From_Litmos__c, Litmos__Full_Name__c, Litmos__Languages__c, Litmos__Level__c, Litmos__LitmosID__c, Litmos__Litmos_Activated__c, Litmos__Litmos_Login_Access__c, Litmos__Litmos_UserId__c, Litmos__OriginalId__c, Litmos__Sync_Litmos__c, Litmos__Total_Sum_Percentages__c, Litmos__User_Id__c, Litmos__p_Completed_Percentage__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF Contract Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforce"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {
									"object1": "account",
									"object2": "assessment"
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Contract"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "contract"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": " Id ,AccountId ,CurrencyIsoCode ,OwnerExpirationNotice ,StartDate ,EndDate, BillingStreet, BillingCity, BillingState, BillingPostalCode, BillingCountry, BillingLatitude, BillingLongitude, BillingGeocodeAccuracy, ShippingStreet, ShippingCity, ShippingState, ShippingPostalCode, ShippingCountry, ShippingLatitude, ShippingLongitude, ShippingGeocodeAccuracy, ContractTerm, OwnerId, Status, CompanySignedId, CompanySignedDate, CustomerSignedId, CustomerSignedTitle, CustomerSignedDate, SpecialTerms, ActivatedById, ActivatedDate, StatusCode, Description, RecordTypeId, Name, IsDeleted, ContractNumber, LastApprovedDate, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, LastViewedDate, LastReferencedDate, BatchRunDate__c, BulkUploadedPPPMember__c, Created_by_PPP_Bulk_Upload__c, CurrentMembership__c, CurrentMonthYear__c, Data_Migrated_from_XEN__c, DaysSinceStartDate__c, ExpiryCaseCreated__c, Grade__c, IndividualMovedtoPPP__c, Location__c, LodgedWithCertificationApplication__c, MOUType__c, Manual_Data_Entry__c, MemberBillingGrade__c, MembershipExpiry__c, MembershipID__c, Membership_18_Digits_ID__c, Membership_End_Date_12months__c, Membership_End_Date_1Day__c, Membership_End_Date_3months__c, Membership_Start_Date_Was_Null__c, New__c, Non_Financed_Flag__c, PPPKeyContactEmail__c, PPPKeyContactName__c, PPPMOU1Approved__c, PPPName__c, PPP__c, PreferredName__c, PreviousMembership__c, Program__c, RelatedAccountEmail__c, RenewalProcessed__c, Sister_Society_Member_Grade__c, Sister_Society_Membership_Expiry_Date__c, Sister_Society_Membership_Number__c, Sister_Society_Name__c, StartDatePlus12Months__c, SubscriptionNoticeSent__c, UpdatedViaFlow__c, WelcomeEmailSent__c, ZeroCostMembership__c, Termination_Reason__c, Grading_Date__c, Date_Resigned__c, PPP_Account_Name__c, Bulk_PPP_Renewed_as_Active__c, Re_Order_Cards__c, Re_Order_Cards_Date__c, Re_Order_Last_week__c, SkillsMembershipAgent__c, PY_Second_Year_Email_Sent__c, Membership_Expiry_Discrepancy__c, Detach_from_PPP__c, Membership_Expiry_Within_30_days__c, SkillsMembershipApplicationOrigin__c, SkillsMembershipDuplicateAccountUser__c, SkillsMembershipOptOut__c, Zipline_Mobile__c, Approval_URL_Link__c, Approval_URL__c, Certification_Level__c, Detached__c, For_Renewal__c, Last_Login_Date__c, MOU_Type__c, Product_Selected__c, Pendula_Test__c, Membership_Expiry_Date_As_Text__c, COVID_19__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF Experience Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Experience__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "experience"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id ,IsDeleted ,Name ,CurrencyIsoCode ,RecordTypeId ,CreatedDate ,CreatedById ,LastModifiedDate ,LastModifiedById ,SystemModstamp ,LastActivityDate, Assessment__c, ANZSCO_Code__c, Applicant_Name__c, CongaRefMark__c, CountableExperience__c, Country__c, Data_Migrated_from_XEN__c, ExperienceAccepted__c, ExperienceCommentTimestamp__c, Experience_Comments__c, FinishDate__c, NumberOfDaysExperience__c, PositionTitle__c, ProfessionalYearComplete__c, ReasonExperienceNotAccepted__c, SFIACode__c, SFIALevel__c, Secondary_SFIA_Level__c, Secondary_SFIA_Skill__c, StartDate__c, Third_SFIA_Level__c, Third_SFIA_Skill__c, TotalYears__c, XEN_Company_Name__c, ApplicantAttachmentsBoxFolderId__c, AssessorAttachmentsBoxFolderId__c, BoxFolderId__c, CmsApplicantBoxDocumentDetails__c, CmsBoxApplicantFileIdsToMove__c, CreateBoxFolder__c, UniqueRecordIdentifier__c, RecordLocked__c, XenId_Experience__c, BypassValidation__c, CountableExperienceMonths__c, CountableExperienceYears__c, ApplicantName__c, SubmissionDate__c, CloneFromApplicantAttachmentsBoxFolderId__c, CloneFromAssessorAttachmentsBoxFolderId__c, CloneFromBoxFolderId__c "
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF Object Dump_Parquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Dump Parquet",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 2,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sql_memebershipdb",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSQLSP",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF Object Refresh Template')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": "select  Azure_ID__c \nfrom Account\nwhere id ='0019000001ry79OAAQ'\n",
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 4,
							"dataIntegrationUnits": 16,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "MasterRecordId",
											"type": "String"
										},
										"sink": {
											"name": "MasterRecordId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RecordTypeId",
											"type": "String"
										},
										"sink": {
											"name": "RecordTypeId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ParentId",
											"type": "String"
										},
										"sink": {
											"name": "ParentId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BillingStreet",
											"type": "String"
										},
										"sink": {
											"name": "BillingStreet",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BillingCity",
											"type": "String"
										},
										"sink": {
											"name": "BillingCity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BillingState",
											"type": "String"
										},
										"sink": {
											"name": "BillingState",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BillingPostalCode",
											"type": "String"
										},
										"sink": {
											"name": "BillingPostalCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BillingCountry",
											"type": "String"
										},
										"sink": {
											"name": "BillingCountry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BillingLatitude",
											"type": "Decimal"
										},
										"sink": {
											"name": "BillingLatitude",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "BillingLongitude",
											"type": "Decimal"
										},
										"sink": {
											"name": "BillingLongitude",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "BillingGeocodeAccuracy",
											"type": "String"
										},
										"sink": {
											"name": "BillingGeocodeAccuracy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ShippingStreet",
											"type": "String"
										},
										"sink": {
											"name": "ShippingStreet",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ShippingCity",
											"type": "String"
										},
										"sink": {
											"name": "ShippingCity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ShippingState",
											"type": "String"
										},
										"sink": {
											"name": "ShippingState",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ShippingPostalCode",
											"type": "String"
										},
										"sink": {
											"name": "ShippingPostalCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ShippingCountry",
											"type": "String"
										},
										"sink": {
											"name": "ShippingCountry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ShippingLatitude",
											"type": "Decimal"
										},
										"sink": {
											"name": "ShippingLatitude",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "ShippingLongitude",
											"type": "Decimal"
										},
										"sink": {
											"name": "ShippingLongitude",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "ShippingGeocodeAccuracy",
											"type": "String"
										},
										"sink": {
											"name": "ShippingGeocodeAccuracy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String"
										},
										"sink": {
											"name": "Phone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Fax",
											"type": "String"
										},
										"sink": {
											"name": "Fax",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountNumber",
											"type": "String"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Website",
											"type": "String"
										},
										"sink": {
											"name": "Website",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PhotoUrl",
											"type": "String"
										},
										"sink": {
											"name": "PhotoUrl",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sic",
											"type": "String"
										},
										"sink": {
											"name": "Sic",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Industry",
											"type": "String"
										},
										"sink": {
											"name": "Industry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AnnualRevenue",
											"type": "Decimal"
										},
										"sink": {
											"name": "AnnualRevenue",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "NumberOfEmployees",
											"type": "Int32"
										},
										"sink": {
											"name": "NumberOfEmployees",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Ownership",
											"type": "String"
										},
										"sink": {
											"name": "Ownership",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TickerSymbol",
											"type": "String"
										},
										"sink": {
											"name": "TickerSymbol",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Rating",
											"type": "String"
										},
										"sink": {
											"name": "Rating",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Site",
											"type": "String"
										},
										"sink": {
											"name": "Site",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CurrencyIsoCode",
											"type": "String"
										},
										"sink": {
											"name": "CurrencyIsoCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OwnerId",
											"type": "String"
										},
										"sink": {
											"name": "OwnerId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CreatedById",
											"type": "String"
										},
										"sink": {
											"name": "CreatedById",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastModifiedById",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedById",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SystemModstamp",
											"type": "DateTime"
										},
										"sink": {
											"name": "SystemModstamp",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastActivityDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastActivityDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastViewedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastViewedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastReferencedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastReferencedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "IsCustomerPortal",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsCustomerPortal",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Jigsaw",
											"type": "String"
										},
										"sink": {
											"name": "Jigsaw",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "JigsawCompanyId",
											"type": "String"
										},
										"sink": {
											"name": "JigsawCompanyId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountSource",
											"type": "String"
										},
										"sink": {
											"name": "AccountSource",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SicDesc",
											"type": "String"
										},
										"sink": {
											"name": "SicDesc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ffbf__AccountParticulars__c",
											"type": "String"
										},
										"sink": {
											"name": "ffbf__AccountParticulars__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ffbf__BankBIC__c",
											"type": "String"
										},
										"sink": {
											"name": "ffbf__BankBIC__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ffbf__PaymentCode__c",
											"type": "String"
										},
										"sink": {
											"name": "ffbf__PaymentCode__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ffbf__PaymentCountryISO__c",
											"type": "String"
										},
										"sink": {
											"name": "ffbf__PaymentCountryISO__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ffbf__PaymentPriority__c",
											"type": "String"
										},
										"sink": {
											"name": "ffbf__PaymentPriority__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ffbf__PaymentRoutingMethod__c",
											"type": "String"
										},
										"sink": {
											"name": "ffbf__PaymentRoutingMethod__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Purchase_Order_Contact__c",
											"type": "String"
										},
										"sink": {
											"name": "Purchase_Order_Contact__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Service_Category__c",
											"type": "String"
										},
										"sink": {
											"name": "Service_Category__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ABN__c",
											"type": "String"
										},
										"sink": {
											"name": "ABN__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ANZSCOCode__c",
											"type": "String"
										},
										"sink": {
											"name": "ANZSCOCode__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountManager__c",
											"type": "String"
										},
										"sink": {
											"name": "AccountManager__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountType__c",
											"type": "String"
										},
										"sink": {
											"name": "AccountType__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Account_18_Digits_ID__c",
											"type": "String"
										},
										"sink": {
											"name": "Account_18_Digits_ID__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Account_Support__c",
											"type": "String"
										},
										"sink": {
											"name": "Account_Support__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Active_Certification_ID__c",
											"type": "String"
										},
										"sink": {
											"name": "Active_Certification_ID__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AdditionalAccountType__c",
											"type": "String"
										},
										"sink": {
											"name": "AdditionalAccountType__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AllergyOtherDietaryRequirements__c",
											"type": "String"
										},
										"sink": {
											"name": "AllergyOtherDietaryRequirements__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BillingContact__c",
											"type": "String"
										},
										"sink": {
											"name": "BillingContact__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BillingGradeChangeDate__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "BillingGradeChangeDate__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "BillingGrade__c",
											"type": "String"
										},
										"sink": {
											"name": "BillingGrade__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Billing_Grade1_Change_Date__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "Billing_Grade1_Change_Date__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Billing_Grade2_Change_Date__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "Billing_Grade2_Change_Date__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "BoxFolderId__c",
											"type": "String"
										},
										"sink": {
											"name": "BoxFolderId__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Branch_Newsletters__c",
											"type": "String"
										},
										"sink": {
											"name": "Branch_Newsletters__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Branch_Overridden__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Branch_Overridden__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Branch__c",
											"type": "String"
										},
										"sink": {
											"name": "Branch__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Bulk_Upload_PPP_ID__c",
											"type": "String"
										},
										"sink": {
											"name": "Bulk_Upload_PPP_ID__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CertificationBadge__c",
											"type": "String"
										},
										"sink": {
											"name": "CertificationBadge__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CertificationLevel__c",
											"type": "String"
										},
										"sink": {
											"name": "CertificationLevel__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CommunityUser__c",
											"type": "String"
										},
										"sink": {
											"name": "CommunityUser__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Completion_Points_Anzsco__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Anzsco__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Completion_Points_Bio__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Bio__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Completion_Points_DOB__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_DOB__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Completion_Points_Email__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Email__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Completion_Points_Employer_Name__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Employer_Name__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Completion_Points_Expertise__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Expertise__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Completion_Points_FL_Name__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_FL_Name__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Completion_Points_Gender__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Gender__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Completion_Points_H_Address__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_H_Address__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Completion_Points_Industry__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Industry__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Completion_Points_Languages__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Languages__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Completion_Points_Mobile__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Mobile__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Completion_Points_Phone__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Phone__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Completion_Points_Position__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Position__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Completion_Points_Sec_Email__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Sec_Email__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Completion_Points_Skills__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Skills__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Completion_Points_Specialism__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Specialism__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Completion_Points_Sub_Industry__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Sub_Industry__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Completion_Points_W_Address__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_W_Address__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "CongaCTCPFormula__c",
											"type": "String"
										},
										"sink": {
											"name": "CongaCTCPFormula__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CongaCTCPTemplateID__c",
											"type": "String"
										},
										"sink": {
											"name": "CongaCTCPTemplateID__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CongaCitySys__c",
											"type": "String"
										},
										"sink": {
											"name": "CongaCitySys__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CongaCountrySys__c",
											"type": "String"
										},
										"sink": {
											"name": "CongaCountrySys__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CongaMemberCertificate__c",
											"type": "String"
										},
										"sink": {
											"name": "CongaMemberCertificate__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CongaPostCodeSys__c",
											"type": "String"
										},
										"sink": {
											"name": "CongaPostCodeSys__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CongaStateSys__c",
											"type": "String"
										},
										"sink": {
											"name": "CongaStateSys__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CongaStreetSys__c",
											"type": "String"
										},
										"sink": {
											"name": "CongaStreetSys__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ConsultantsDirectory__c",
											"type": "String"
										},
										"sink": {
											"name": "ConsultantsDirectory__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreateBoxFolders__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "CreateBoxFolders__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Create_User_and_Send_New_Password__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Create_User_and_Send_New_Password__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CreditCardLast4Digits__c",
											"type": "String"
										},
										"sink": {
											"name": "CreditCardLast4Digits__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreditCardPaymentToken__c",
											"type": "String"
										},
										"sink": {
											"name": "CreditCardPaymentToken__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreditCardType__c",
											"type": "String"
										},
										"sink": {
											"name": "CreditCardType__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CurrentMembershipExpiry__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "CurrentMembershipExpiry__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CurrentYearAmountSpent__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "CurrentYearAmountSpent__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Data_Migrated_from_XEN__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Data_Migrated_from_XEN__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "DateOfBirthText__c",
											"type": "String"
										},
										"sink": {
											"name": "DateOfBirthText__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DateOfBirth__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "DateOfBirth__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Default_Address__c",
											"type": "String"
										},
										"sink": {
											"name": "Default_Address__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DietaryRequirements__c",
											"type": "String"
										},
										"sink": {
											"name": "DietaryRequirements__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Email__c",
											"type": "String"
										},
										"sink": {
											"name": "Email__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Employer_Name__c",
											"type": "String"
										},
										"sink": {
											"name": "Employer_Name__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExcludeCommercialEmail__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "ExcludeCommercialEmail__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ExcludeSMSCommunication__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "ExcludeSMSCommunication__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ExcludeThirdPartyMailings__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "ExcludeThirdPartyMailings__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Expertise__c",
											"type": "String"
										},
										"sink": {
											"name": "Expertise__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Face_to_Face_Interview__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Face_to_Face_Interview__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Facebook__c",
											"type": "String"
										},
										"sink": {
											"name": "Facebook__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Former_Billing_Grade1__c",
											"type": "String"
										},
										"sink": {
											"name": "Former_Billing_Grade1__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Former_Billing_Grade2__c",
											"type": "String"
										},
										"sink": {
											"name": "Former_Billing_Grade2__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Gender__c",
											"type": "String"
										},
										"sink": {
											"name": "Gender__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Geography__c",
											"type": "String"
										},
										"sink": {
											"name": "Geography__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ITWorkforceSize__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "ITWorkforceSize__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "IndustrySubtype__c",
											"type": "String"
										},
										"sink": {
											"name": "IndustrySubtype__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Membership_Opt_Out__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Membership_Opt_Out__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsLead__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsLead__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "KeepCertificationStatusPrivate__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "KeepCertificationStatusPrivate__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "KeyContactEmail__c",
											"type": "String"
										},
										"sink": {
											"name": "KeyContactEmail__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KeyContactName__c",
											"type": "String"
										},
										"sink": {
											"name": "KeyContactName__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Key_ICT_Skills__c",
											"type": "String"
										},
										"sink": {
											"name": "Key_ICT_Skills__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Languages__c",
											"type": "String"
										},
										"sink": {
											"name": "Languages__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LastContactDate__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastContactDate__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LinkedIn__c",
											"type": "String"
										},
										"sink": {
											"name": "LinkedIn__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LogoImageId__c",
											"type": "String"
										},
										"sink": {
											"name": "LogoImageId__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MARARegistrationCode__c",
											"type": "String"
										},
										"sink": {
											"name": "MARARegistrationCode__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Manual_Data_Entry__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Manual_Data_Entry__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "MemberGrade__c",
											"type": "String"
										},
										"sink": {
											"name": "MemberGrade__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Member_Role__c",
											"type": "String"
										},
										"sink": {
											"name": "Member_Role__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MembershipDocumentsBoxFolderId__c",
											"type": "String"
										},
										"sink": {
											"name": "MembershipDocumentsBoxFolderId__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MembershipNumberAutoGen__c",
											"type": "String"
										},
										"sink": {
											"name": "MembershipNumberAutoGen__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MembershipNumber__c",
											"type": "String"
										},
										"sink": {
											"name": "MembershipNumber__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Membership_Status__c",
											"type": "String"
										},
										"sink": {
											"name": "Membership_Status__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MigrationAgentPrimaryBusinessName__c",
											"type": "String"
										},
										"sink": {
											"name": "MigrationAgentPrimaryBusinessName__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Mobile__c",
											"type": "String"
										},
										"sink": {
											"name": "Mobile__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NationalSignificance__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "NationalSignificance__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "New_Membership_Signup_created__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "New_Membership_Signup_created__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PPP__c",
											"type": "String"
										},
										"sink": {
											"name": "PPP__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Partial_Copy_of_Person_Bio__c",
											"type": "String"
										},
										"sink": {
											"name": "Partial_Copy_of_Person_Bio__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PaymentAutoRenew__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "PaymentAutoRenew__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PaymentFrequency__c",
											"type": "String"
										},
										"sink": {
											"name": "PaymentFrequency__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PaymentMethod__c",
											"type": "String"
										},
										"sink": {
											"name": "PaymentMethod__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PersonAccountDoNotCall__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "PersonAccountDoNotCall__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PersonAccountEmailOptOut__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "PersonAccountEmailOptOut__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PersonAccountFirstName__c",
											"type": "String"
										},
										"sink": {
											"name": "PersonAccountFirstName__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PersonAccountJoinedDate__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "PersonAccountJoinedDate__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "PersonAccountLastName__c",
											"type": "String"
										},
										"sink": {
											"name": "PersonAccountLastName__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PersonAccountMiddleName__c",
											"type": "String"
										},
										"sink": {
											"name": "PersonAccountMiddleName__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PersonAccountPositionTitle__c",
											"type": "String"
										},
										"sink": {
											"name": "PersonAccountPositionTitle__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PersonAccountPublish__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "PersonAccountPublish__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PersonAccountSecondaryEmail__c",
											"type": "String"
										},
										"sink": {
											"name": "PersonAccountSecondaryEmail__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PersonAccountSuffix__c",
											"type": "String"
										},
										"sink": {
											"name": "PersonAccountSuffix__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PersonBio__c",
											"type": "String"
										},
										"sink": {
											"name": "PersonBio__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PersonImageId__c",
											"type": "String"
										},
										"sink": {
											"name": "PersonImageId__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PleaseNote__c",
											"type": "String"
										},
										"sink": {
											"name": "PleaseNote__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PreferredContactMethod__c",
											"type": "String"
										},
										"sink": {
											"name": "PreferredContactMethod__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PreferredName__c",
											"type": "String"
										},
										"sink": {
											"name": "PreferredName__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProductArticle__c",
											"type": "String"
										},
										"sink": {
											"name": "ProductArticle__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProfessionalDocumentsBoxFolderId__c",
											"type": "String"
										},
										"sink": {
											"name": "ProfessionalDocumentsBoxFolderId__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Professional_Interest__c",
											"type": "String"
										},
										"sink": {
											"name": "Professional_Interest__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Profile_Completion_Rate__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Profile_Completion_Rate__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Program_Account_for_Current_Membership__c",
											"type": "String"
										},
										"sink": {
											"name": "Program_Account_for_Current_Membership__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ROIAvailableCurrentFY__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "ROIAvailableCurrentFY__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "ROIAvailableNextFY__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "ROIAvailableNextFY__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "ReinvestmentAmount__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "ReinvestmentAmount__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "ReinvestmentRemaining__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "ReinvestmentRemaining__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "ReinvestmentSpent__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "ReinvestmentSpent__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Sister_Society_Member__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Sister_Society_Member__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SkillsAgentIDAssignment__c",
											"type": "String"
										},
										"sink": {
											"name": "SkillsAgentIDAssignment__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SkillsAgentID__c",
											"type": "String"
										},
										"sink": {
											"name": "SkillsAgentID__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SkillsAgentStatus__c",
											"type": "String"
										},
										"sink": {
											"name": "SkillsAgentStatus__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpecialBillingExpiryDate__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "SpecialBillingExpiryDate__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Specialisms__c",
											"type": "String"
										},
										"sink": {
											"name": "Specialisms__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Title__c",
											"type": "String"
										},
										"sink": {
											"name": "Title__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TotalWorkforceSize__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalWorkforceSize__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "TradingName__c",
											"type": "String"
										},
										"sink": {
											"name": "TradingName__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Twitter__c",
											"type": "String"
										},
										"sink": {
											"name": "Twitter__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UENumber__c",
											"type": "String"
										},
										"sink": {
											"name": "UENumber__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WebsiteRole__c",
											"type": "String"
										},
										"sink": {
											"name": "WebsiteRole__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WorkHistory__c",
											"type": "String"
										},
										"sink": {
											"name": "WorkHistory__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Work_Phone__c",
											"type": "String"
										},
										"sink": {
											"name": "Work_Phone__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "XEN_User_Type__c",
											"type": "String"
										},
										"sink": {
											"name": "XEN_User_Type__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "XenDocumentsBoxFolderId__c",
											"type": "String"
										},
										"sink": {
											"name": "XenDocumentsBoxFolderId__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "XenEncryptedPassword__c",
											"type": "String"
										},
										"sink": {
											"name": "XenEncryptedPassword__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "XenId__c",
											"type": "String"
										},
										"sink": {
											"name": "XenId__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Skill_Record_Count__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Skill_Record_Count__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Staff_ID__c",
											"type": "String"
										},
										"sink": {
											"name": "Staff_ID__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GradingDate__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "GradingDate__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Branch_Newsletters_Change__c",
											"type": "String"
										},
										"sink": {
											"name": "Branch_Newsletters_Change__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Credit_Card_Expiry_Date__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "Credit_Card_Expiry_Date__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "BPay_CRN__c",
											"type": "String"
										},
										"sink": {
											"name": "BPay_CRN__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CertificationExpiryDate__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "CertificationExpiryDate__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Nov_Recurring_Email__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Nov_Recurring_Email__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Post_Nominals__c",
											"type": "String"
										},
										"sink": {
											"name": "Post_Nominals__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "JoinedLastWeek__c",
											"type": "String"
										},
										"sink": {
											"name": "JoinedLastWeek__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Name_With_First_Name_Suffix__c",
											"type": "String"
										},
										"sink": {
											"name": "Name_With_First_Name_Suffix__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Valid_Until_End__c",
											"type": "String"
										},
										"sink": {
											"name": "Valid_Until_End__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMSJoinNowApplicationType__c",
											"type": "String"
										},
										"sink": {
											"name": "CMSJoinNowApplicationType__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CmsBoxMembershipFileIdsToMove__c",
											"type": "String"
										},
										"sink": {
											"name": "CmsBoxMembershipFileIdsToMove__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CmsDirectDepositBoxDocumentDetails__c",
											"type": "String"
										},
										"sink": {
											"name": "CmsDirectDepositBoxDocumentDetails__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CmsDirectDepositBoxFileIdsToMove__c",
											"type": "String"
										},
										"sink": {
											"name": "CmsDirectDepositBoxFileIdsToMove__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CmsICTBoxDocumentDetails__c",
											"type": "String"
										},
										"sink": {
											"name": "CmsICTBoxDocumentDetails__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CmsICTBoxFileIdsToMove__c",
											"type": "String"
										},
										"sink": {
											"name": "CmsICTBoxFileIdsToMove__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CmsMembershipBoxDocumentDetails__c",
											"type": "String"
										},
										"sink": {
											"name": "CmsMembershipBoxDocumentDetails__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CmsProfessionBoxFileIdsToMove__c",
											"type": "String"
										},
										"sink": {
											"name": "CmsProfessionBoxFileIdsToMove__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CountryOfEducation__c",
											"type": "String"
										},
										"sink": {
											"name": "CountryOfEducation__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreateUserRecordOnly__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "CreateUserRecordOnly__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "DateOfCommencement__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "DateOfCommencement__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "DateOfExpectedCompletion__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "DateOfExpectedCompletion__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "NameOfInstitution__c",
											"type": "String"
										},
										"sink": {
											"name": "NameOfInstitution__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NameOnCreditCard__c",
											"type": "String"
										},
										"sink": {
											"name": "NameOnCreditCard__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "QualificationName__c",
											"type": "String"
										},
										"sink": {
											"name": "QualificationName__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RememberForFuturePayments__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "RememberForFuturePayments__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "EmployeeId__c",
											"type": "String"
										},
										"sink": {
											"name": "EmployeeId__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Identified_for_Merge__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Identified_for_Merge__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Member_Since__c",
											"type": "String"
										},
										"sink": {
											"name": "Member_Since__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "JoinedThisMonth__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "JoinedThisMonth__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Enrolment_Status__c",
											"type": "String"
										},
										"sink": {
											"name": "Enrolment_Status__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PY_Completion_Date__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "PY_Completion_Date__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Provider_Student_Number__c",
											"type": "String"
										},
										"sink": {
											"name": "Provider_Student_Number__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "VETrack_Number__c",
											"type": "String"
										},
										"sink": {
											"name": "VETrack_Number__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountImage__c",
											"type": "String"
										},
										"sink": {
											"name": "AccountImage__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RecordSource__c",
											"type": "String"
										},
										"sink": {
											"name": "RecordSource__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PostNominalsForCP__c",
											"type": "String"
										},
										"sink": {
											"name": "PostNominalsForCP__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccreditedUniversityFacultySchool__c",
											"type": "String"
										},
										"sink": {
											"name": "AccreditedUniversityFacultySchool__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Exclude_from_Email_Communication__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Exclude_from_Email_Communication__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SkillsMembershipDuplicateAccount_User__c",
											"type": "String"
										},
										"sink": {
											"name": "SkillsMembershipDuplicateAccount_User__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Information_Age__c",
											"type": "String"
										},
										"sink": {
											"name": "Information_Age__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UniqueId__c",
											"type": "String"
										},
										"sink": {
											"name": "UniqueId__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ACS_Newsletter__c",
											"type": "String"
										},
										"sink": {
											"name": "ACS_Newsletter__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ACS_Marketing_Communication__c",
											"type": "String"
										},
										"sink": {
											"name": "ACS_Marketing_Communication__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SMS_Communications__c",
											"type": "String"
										},
										"sink": {
											"name": "SMS_Communications__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ThirdParty_Communications__c",
											"type": "String"
										},
										"sink": {
											"name": "ThirdParty_Communications__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Create_Free_Skills_Membership__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Create_Free_Skills_Membership__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SkillsAgentApplication__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "SkillsAgentApplication__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Number_of_Certifications__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Number_of_Certifications__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Password_Token_Expiry_Date__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "Password_Token_Expiry_Date__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Password_Token_Used__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Password_Token_Used__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Password_Token__c",
											"type": "String"
										},
										"sink": {
											"name": "Password_Token__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Days_Until_CC_Expiry__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Days_Until_CC_Expiry__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Eligible_for_CC_Expiry_Reminder__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Eligible_for_CC_Expiry_Reminder__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Outfit_Certificates_Last_Update__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "Outfit_Certificates_Last_Update__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Outfit_Membeship_Cert_Last_Update__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "Outfit_Membeship_Cert_Last_Update__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Disable_Validation__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Disable_Validation__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Short_Name__c",
											"type": "String"
										},
										"sink": {
											"name": "Short_Name__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "No_of_Programs_With_Active_Memberships__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "No_of_Programs_With_Active_Memberships__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Total_Active_ROI_Budget__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Total_Active_ROI_Budget__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Total_ROI_Balance_Remaining__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Total_ROI_Balance_Remaining__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Total_ROI_Spend__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Total_ROI_Spend__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "fferpcore__ExemptionCertificate__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__ExemptionCertificate__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__IsBillingAddressValidated__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "fferpcore__IsBillingAddressValidated__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "fferpcore__IsShippingAddressValidated__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "fferpcore__IsShippingAddressValidated__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "fferpcore__OutputVatCode__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__OutputVatCode__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__SalesTaxStatus__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__SalesTaxStatus__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__TaxCode1__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__TaxCode1__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__TaxCode2__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__TaxCode2__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__TaxCode3__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__TaxCode3__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__TaxCountryCode__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__TaxCountryCode__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__ValidatedBillingCity__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__ValidatedBillingCity__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__ValidatedBillingCountry__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__ValidatedBillingCountry__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__ValidatedBillingPostalCode__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__ValidatedBillingPostalCode__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__ValidatedBillingState__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__ValidatedBillingState__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__ValidatedBillingStreet__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__ValidatedBillingStreet__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__ValidatedShippingCity__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__ValidatedShippingCity__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__ValidatedShippingCountry__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__ValidatedShippingCountry__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__ValidatedShippingPostalCode__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__ValidatedShippingPostalCode__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__ValidatedShippingState__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__ValidatedShippingState__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__ValidatedShippingStreet__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__ValidatedShippingStreet__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__VatRegistrationNumber__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__VatRegistrationNumber__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__VatStatus__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__VatStatus__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Facebook_Messenger_Id__c",
											"type": "String"
										},
										"sink": {
											"name": "Facebook_Messenger_Id__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Total_Membership_Years__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Total_Membership_Years__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Membership_Balance_Amount__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Membership_Balance_Amount__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Education_Level__c",
											"type": "String"
										},
										"sink": {
											"name": "Education_Level__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Certificate_Specialism__c",
											"type": "String"
										},
										"sink": {
											"name": "Certificate_Specialism__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Is_Active__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Is_Active__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Elected_Official__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Elected_Official__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Confirmation_of_PSS_Enrollment__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "Confirmation_of_PSS_Enrollment__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Employment_Category__c",
											"type": "String"
										},
										"sink": {
											"name": "Employment_Category__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Employment_Type__c",
											"type": "String"
										},
										"sink": {
											"name": "Employment_Type__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Higher_Cap__c",
											"type": "String"
										},
										"sink": {
											"name": "Higher_Cap__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PSS_Insurance_Cover__c",
											"type": "String"
										},
										"sink": {
											"name": "PSS_Insurance_Cover__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PSS_Member__c",
											"type": "String"
										},
										"sink": {
											"name": "PSS_Member__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Certification_Outfit_Document_Id__c",
											"type": "String"
										},
										"sink": {
											"name": "Certification_Outfit_Document_Id__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Pendula_Test__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Pendula_Test__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Current_Membership_Expiry_As_Text__c",
											"type": "String"
										},
										"sink": {
											"name": "Current_Membership_Expiry_As_Text__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Days_since_Current_Membership_Expiry__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Days_since_Current_Membership_Expiry__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Age__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Age__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Private__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Private__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Elected_Official_Count__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Elected_Official_Count__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Is_Elected_Official__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Is_Elected_Official__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Member_Tier__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Member_Tier__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Litmos__Active__c",
											"type": "String"
										},
										"sink": {
											"name": "Litmos__Active__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Litmos__CustomerPriority__c",
											"type": "String"
										},
										"sink": {
											"name": "Litmos__CustomerPriority__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Litmos__Litmos_Id__c",
											"type": "String"
										},
										"sink": {
											"name": "Litmos__Litmos_Id__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Litmos__NumberofLocations__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Litmos__NumberofLocations__c",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Litmos__SLAExpirationDate__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "Litmos__SLAExpirationDate__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Litmos__SLASerialNumber__c",
											"type": "String"
										},
										"sink": {
											"name": "Litmos__SLASerialNumber__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Litmos__SLA__c",
											"type": "String"
										},
										"sink": {
											"name": "Litmos__SLA__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Litmos__UpsellOpportunity__c",
											"type": "String"
										},
										"sink": {
											"name": "Litmos__UpsellOpportunity__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Student_ID__c",
											"type": "String"
										},
										"sink": {
											"name": "Student_ID__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Access_to_Canvas__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Access_to_Canvas__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "fferpcore__MaterializedBillingAddressValidated__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "fferpcore__MaterializedBillingAddressValidated__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "fferpcore__MaterializedShippingAddressValidated__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "fferpcore__MaterializedShippingAddressValidated__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "EU_Applicants_Flag__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "EU_Applicants_Flag__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Is_New_User__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Is_New_User__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Brand__c",
											"type": "String"
										},
										"sink": {
											"name": "Brand__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MC_Applicant__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "MC_Applicant__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Is_Changed__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Is_Changed__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "User_Change_Error__c",
											"type": "String"
										},
										"sink": {
											"name": "User_Change_Error__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PartiallyCompletedMicroCredentialId__c",
											"type": "String"
										},
										"sink": {
											"name": "PartiallyCompletedMicroCredentialId__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Pendula_Resend__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "Pendula_Resend__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Community_Name__c",
											"type": "String"
										},
										"sink": {
											"name": "Community_Name__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Account_Deactivated__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Account_Deactivated__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Member_Grade_Pathway__c",
											"type": "String"
										},
										"sink": {
											"name": "Member_Grade_Pathway__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HiddenUserLocationState__c",
											"type": "String"
										},
										"sink": {
											"name": "HiddenUserLocationState__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HiddenFullName__c",
											"type": "String"
										},
										"sink": {
											"name": "HiddenFullName__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Industry__c",
											"type": "String"
										},
										"sink": {
											"name": "Industry__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Member_Grade_Review_Date__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "Member_Grade_Review_Date__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Member_Grade_Review__c",
											"type": "String"
										},
										"sink": {
											"name": "Member_Grade_Review__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Azure_Email__c",
											"type": "String"
										},
										"sink": {
											"name": "Azure_Email__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Azure_ID__c",
											"type": "String"
										},
										"sink": {
											"name": "Azure_ID__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "User_ID__c",
											"type": "String"
										},
										"sink": {
											"name": "User_ID__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CertifiedToDate__c",
											"type": "String"
										},
										"sink": {
											"name": "CertifiedToDate__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ComputerProfStatus__c",
											"type": "String"
										},
										"sink": {
											"name": "ComputerProfStatus__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsAustralianUser__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsAustralianUser__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PartiallyCompletedCertID__c",
											"type": "String"
										},
										"sink": {
											"name": "PartiallyCompletedCertID__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Is_Litmos_User__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Is_Litmos_User__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSFOR",
								"type": "DatasetReference",
								"parameters": {
									"SourceTableName": {
										"value": "@pipeline().parameters.sourcetable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.targettable",
										"type": "Expression"
									},
									"schemaname": "salesforce"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"sourcetable": {
						"type": "string",
						"defaultValue": "Account"
					},
					"targettable": {
						"type": "string",
						"defaultValue": "Account_backup"
					}
				},
				"variables": {
					"HWM": {
						"type": "String",
						"defaultValue": "2199-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF Opportunity Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Opportunity "
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "Opportunity "
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": " Id, IsDeleted, AccountId, RecordTypeId, IsPrivate, Name, Description, StageName, Amount, Probability, ExpectedRevenue, TotalOpportunityQuantity, CloseDate, Type, NextStep, LeadSource, IsClosed, IsWon, ForecastCategory, ForecastCategoryName, CurrencyIsoCode, CampaignId, HasOpportunityLineItem, Pricebook2Id, OwnerId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, PushCount, LastStageChangeDate, FiscalQuarter, FiscalYear, Fiscal, ContactId, LastViewedDate, LastReferencedDate, ContractId, HasOpenActivity, HasOverdueTask, LastAmountChangedHistoryId, LastCloseDateChangedHistoryId, Brand__c, ACS_Office__c, AccountEmail__c, AccountOwner__c, Automated_Tax_Receipt_Sent__c, Balance__c, BankReference__c, BatchRunDate__c, BoxFolderId__c, CappedOrMembershipBased__c, ChargeDateEmail__c, CongaCitySys__c, CongaCountrySys__c, CongaMembershipSubscriptionRenewal__c, CongaPaymentConfirmationEmailNonCC__c, CongaPostCodeSys__c, CongaStateSys__c, CongaStreetSys__c, CongaTaxInvoiceSaveOnly__c, CongaTaxReceiptAutoEmailNonCC__c, Conga_Email_Sent_From__c, Conga_Skills_Tax_Receipt_Auto_Email__c, CreateBoxFolder__c, CreditController__c, CreditNoteGenerated__c, CreditNoteID__c, Data_Migrated_from_XEN__c, DaysOutstanding__c, EstimatedBudget__c, GenerateCreditNote__c, Grand_Total_of_Non_Optional_Incl_GST__c, ICSFileID__c, Incomplete_Membership__c, Initial_Email_Sent_Non_CC__c, Invoice_Number__c, Invoiced__c, MOUType__c, Manual_Data_Entry__c, MembershipRenewalEmailSent__c, MembershipRenewal__c, Membership_End_Date__c, Membership_Start_Date__c, NeedsApproval__c, NextSteps__c, NumberofMembers__c, OpportunitySource__c, Opportunity_18_Digits_ID__c, Opportunity_ID_Autonumber__c, Opportunity_ID__c, Opportunity_Receipt_Template_ID__c, Oppportunity_Email_Template_ID__c, Oppty_Email_Temp_ID_Non_CC__c, Product_Type__c, Proposal_Template_Generated__c, Proposal_Used__c, Proposal_template_ID__c, Purchase_Order_Number__c, ReEngagementDate__c, ReadyToInvoice__c, ReasonForRefund__c, Reason__c, RefundApprovedDate__c, RefundBankDetails__c, Refund_Amount__c, Related_Contact_Email__c, Related_Contact_First_Name__c, Related_Contact_Title__c, Related_Contact__c, Related_Program__c, ReoccurringPaymentEmailSent__c, Sales_Invoice_ID__c, ScheduledEndDate__c, ScheduledStartDate__c, SolutionInterest__c, Grand_Total_of_Non_Optional_Excl_GST__c, Non_Optional_Grand_Total_GST__c, ProductCount__c, StateAllocationCode__c, Closed_Date_Updated_From_1st_Transaction__c, First_Transaction_Date__c, Canberra__c, Count_Update_Time__c, New_South_Wales__c, Northern_Territory__c, Overseas__c, PPP_Automation_Opp__c, Queensland__c, South_Australia__c, Tasmania__c, Victoria__c, Western_Australia__c, Refund_for_Duplicate_Payment__c, Conga_Membership_and_Certification_Email__c, NoOfMembersOnProgram__c, Approval_Status__c, Product_Family_Approval__c, MonthCreated__c, CloseMonth__c, CreatedInTheLast365Days__c, ClosedIn_the_Last_365_Days__c, Quater_Created__c, EventStartDate__c, Id__c, Parent_Account_Name__c, Parent_Account_Name_Link__c, South_Pacific_Overseas__c, Account_Name__c, Outfit_Membership_Renewal_Last_Update__c, Last_Attachment_Added__c, Send_Membership_Renewal_Email__c, Outfit_Tax_Invoice_Last_Update__c, Outfit_Tax_Invoice_Non_CC_Last_Update__c, Outfit_Tax_Invoice_Receipt_Non_CC_Last_U__c, Application_ID_Pendula__c, Skills_Recipient__c, Outfit_Event_Related_ACS_Office__c, Related_Program_Account_Mismatch__c, Approval_Required__c, Grand_Total_of_Non_WFD_Incl_GST__c, Needs_Approval__c, Payment_Due_Date__c, Program_Id_for_Documents__c, Program_for_Documents__c, Project__c, Reassign_Opportunity__c, Related_Program_End_Date__c, Renewal_Committed__c, Renewal_Started__c, Renewing_Program_Id__c, Send_Inactive_Notification_Date__c, Send_Inactive_Opportunity_Notification__c, Superseded_By__c, Upsell__c, Grand_Total_of_Non_WFD_Excl_GST__c, Membership_Opportunity_Product_Rollup__c, Non_WFD_Grand_Total_GST__c, PPP_Full_Fee_Memberships__c, ROI_Budget__c, WFD_Opportunity_Product_End_Date__c, WFD_Opportunity_Product_Rollup_All__c, WFD_Opportunity_Product_Rollup__c, WFD_Opportunity_Product_Start_Date__c, Pendula_Tax_Receipt_Sent__c, Total_Refund_Amount__c, Count_of_Transactions__c, Sum_of_Transactions__c, Days_Until_Closing__c, Eligible_for_Chatbot__c, October_Membership_Renewal_Communication__c, Outfit_Event_Tax_Invoice_Last_Update__c, Event_Member_Invoice_Payment__c, Outfit_Document_Date__c, Receipt_Outfit_Document_Id__c, Current_Membership_Expiry__c, Current_Membership_Expiry_As_Text__c, Private_Account__c, Outfit_Sales_Order_Document_Id__c, Outfit_Sales_Order_Document_Name__c, Litmos__Competitor_s__c, Litmos__CurrentGenerators__c, Litmos__DeliveryInstallationStatus__c, Litmos__MainCompetitors__c, Litmos__OrderNumber__c, Litmos__TrackingNumber__c, Is_Lead__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF OpportunityLineItem Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforce"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "OpportunityLineItem"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "OpportunityLineItem"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id ,OpportunityId ,SortOrder ,PricebookEntryId ,Product2Id ,ProductCode ,Name ,CurrencyIsoCode ,Quantity ,Discount ,Subtotal ,TotalPrice, UnitPrice, ListPrice, ServiceDate, HasRevenueSchedule, HasQuantitySchedule, Description, HasSchedule, CanUseQuantitySchedule, CanUseRevenueSchedule, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, IsDeleted, LastViewedDate, LastReferencedDate, Assessment__c, BalanceDue__c, Course__c, Data_Migrated_from_XEN__c, EventPricing__c, Event__c, GST__c, Income_Schedule_Start_Date__c, Membership__c, OpportunityNumber__c, Optional__c, Program__c, SponsorshipFutureDate__c, Tax_Code_ID__c, Total_Price_GST__c, Total_Price_Incl_GST__c, Opportunity_Stage__c, Sales_Price_Excl_GST__c, Sales_Price_Override__c, Total_Price_Excl_GST__c, Opportunity_Line_Item_ID__c, Refund_Amount_Excl_GST__c, XenId_OpportunityProduct__c, Accreditation__c, ProductName__c, Membership_Id_18_Digits__c, MembershipBillingGrade__c, AssessmentResult__c, AssessmentStatus__c, AssessmentSubmissionDate__c, AssessmentFinalisedDate__c, AssessmentAppTypeSubType__c, AssessmentApplicantName__c, AssessmentRecordType__c, Opportunity_Related_Program__c, Add_to_FF_Invoice__c, Billing_Grade__c, End_Date__c, Exempt_From_WFD_Validations__c, Is_Closed_Won__c, Product_Family_Value__c, Product_Family__c, Project_Deliverable__c, Project__c, ROI_Budget_Calculation__c, Refund_Amount__c, Tax_Rate__c, Has_Refund_Amount__c, Event_Name__c, Disable_Validation__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF Program Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {
									"object1": "account",
									"object2": "assessment"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforce"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {
									"object1": "account",
									"object2": "assessment"
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Programs__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "Programs__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": " Id ,IsDeleted ,Name ,CurrencyIsoCode ,RecordTypeId ,CreatedDate ,CreatedById ,LastModifiedDate ,LastModifiedById ,SystemModstamp ,LastActivityDate ,LastViewedDate ,LastReferencedDate, Account__c, BatchDate__c, BatchProcessed__c, Capacity__c, CappedOrMembershipBased__c, DateFilter__c, Description__c, EndDate__c, MOUType__c, MembershipsAllocated__c, MembershipsRemaining__c, PPPRegistrationLink__c, Program_18_Digits_ID__c, StartDate__c, TotalMemberships__c, Account_18_Digit_ID__c, PPP_MOU1_Link__c, PPP_MOU2_Link__c, PPP_Friendly_Link__c, AccountOwnerId__c, DaysRemaining__c, IsCloned__c, PreviousProgram__c, Subscriber__c, IsOverseasSubscriber__c, Count_ACS_Event_Hours__c, Count_Other_Hours__c, Count_PD_Video_Hours__c, Create_Validation_Task__c, End_Date_Within_90_Days__c, Has_Paid__c, Inactive__c, Include_in_ROI_Rollup__c, Is_Current__c, KeyContactEmail__c, KeyContactName__c, Last_Task_Review_Date__c, Membership_Remaining_Upsell_Formula__c, Num_Members_Certified__c, Num_Members_Logged_In__c, Num_Members_with_CPD_Hour_s__c, Originating_Opportunity__c, Over_Capacity_Email_Sent__c, Over_Capacity__c, PPP_Registration_Full_URL__c, PPP_Registration_Link__c, Payment_Due_Date__c, Percent_Members_Certified__c, Percent_Members_Logged_In__c, Percent_Members_with_CPD_Hours__c, ROI_Balance_Remaining__c, ROI_Budget__c, Renewal_Opportunity__c, Send_Registration_URL__c, Student_Group__c, Total_ACS_Events_Hours__c, Total_Active_Memberships__c, Total_Balance__c, Total_CPD_Hours__c, Total_Charge_Amount__c, Total_Count_CPD_Hours__c, Total_Other_Hours__c, Total_PD_Video_Hours__c, Total_Transactions_Amount__c, ROI_Spend__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF Qualification History Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Qualification__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "Qualification__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, IsDeleted, Name, CurrencyIsoCode, RecordTypeId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, Assessment__c, ANZSCO_Code__c, AQFComparability__c, Applicant_Name__c, AssessorNotes__c, AttachedTranscriptAssessor__c, AustralianQualification__c, CEPReference__c, CalculationErrorMessages__c, CloselyRelatedICTUnitCountMajor__c, CloselyRelatedICTUnitCountMinor__c, CloselyRelated__c, CoreUnitsMajor__c, CoreUnitsMinor__c, CountString__c, Country__c, CourseAccredited__c, Course__c, Data_Migrated_from_XEN__c, DateAwarded__c, DateOfCommencement__c, DateOfCompletion__c, ICTContent__c, ICTUnitCountMajor__c, ICTUnitCountMinor__c, Institution__c, LastCountsCalculatedOn__c, NormalDurationOfCourse__c, NotACSCourse__c, OASCalculator__c, Potential_RMD_2_or_5_yrs__c, Potential_RMD_4_of_6_yrs__c, Qual_sited_at_Interview__c, QualificationCategory__c, TimeTaken__c, TotalNumberOfUnitsCRPoints__c, TranscriptRollup__c, XEN_Qualification_Name__c, ApplicantAttachmentsBoxFolderId__c, AssessorAttachmentsBoxFolderId__c, BoxFolderId__c, CmsApplicantBoxDocumentDetails__c, CmsBoxApplicantFileIdsToMove__c, CreateBoxFolder__c, UniqueRecordIdentifier__c, FullOrPartTime__c, RecordLocked__c, XenId_Qualification__c, ResetUnitCounts__c, Calculation_Duration__c, BypassValidation__c, Qualification_18_Digits_ID__c, ApplicantName__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF User Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n[salesforce].[user]",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "user"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "user"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": " Id, Username, LastName, FirstName, Name, CompanyName, Division, Department, Title, Street, City, State, PostalCode, Country, Latitude, Longitude, GeocodeAccuracy, Email, EmailPreferencesAutoBcc, EmailPreferencesAutoBccStayInTouch, EmailPreferencesStayInTouchReminder, SenderEmail, SenderName, Signature, StayInTouchSubject, StayInTouchSignature, StayInTouchNote, Phone, Fax, MobilePhone, Alias, CommunityNickname, BadgeText, IsActive, TimeZoneSidKey, UserRoleId, LocaleSidKey, ReceivesInfoEmails, ReceivesAdminInfoEmails, EmailEncodingKey, DefaultCurrencyIsoCode, CurrencyIsoCode, ProfileId, UserType, LanguageLocaleKey, EmployeeNumber, DelegatedApproverId, ManagerId, LastLoginDate, LastPasswordChangeDate, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, NumberOfFailedLogins, OfflineTrialExpirationDate, OfflinePdaTrialExpirationDate, UserPermissionsMarketingUser, UserPermissionsOfflineUser, UserPermissionsAvantgoUser, UserPermissionsCallCenterAutoLogin, UserPermissionsSFContentUser, UserPermissionsInteractionUser, UserPermissionsSupportUser, UserPermissionsChatterAnswersUser, ForecastEnabled, UserPreferencesActivityRemindersPopup, UserPreferencesEventRemindersCheckboxDefault, UserPreferencesTaskRemindersCheckboxDefault, UserPreferencesReminderSoundOff, UserPreferencesDisableAllFeedsEmail, UserPreferencesDisableFollowersEmail, UserPreferencesDisableProfilePostEmail, UserPreferencesDisableChangeCommentEmail, UserPreferencesDisableLaterCommentEmail, UserPreferencesDisProfPostCommentEmail, UserPreferencesContentNoEmail, UserPreferencesContentEmailAsAndWhen, UserPreferencesApexPagesDeveloperMode, UserPreferencesReceiveNoNotificationsAsApprover, UserPreferencesReceiveNotificationsAsDelegatedApprover, UserPreferencesHideCSNGetChatterMobileTask, UserPreferencesDisableMentionsPostEmail, UserPreferencesDisMentionsCommentEmail, UserPreferencesHideCSNDesktopTask, UserPreferencesHideChatterOnboardingSplash, UserPreferencesHideSecondChatterOnboardingSplash, UserPreferencesDisCommentAfterLikeEmail, UserPreferencesDisableLikeEmail, UserPreferencesSortFeedByComment, UserPreferencesDisableMessageEmail, UserPreferencesHideLegacyRetirementModal, UserPreferencesDisableBookmarkEmail, UserPreferencesDisableSharePostEmail, UserPreferencesEnableAutoSubForFeeds, UserPreferencesDisableFileShareNotificationsForApi, UserPreferencesShowTitleToExternalUsers, UserPreferencesShowManagerToExternalUsers, UserPreferencesShowEmailToExternalUsers, UserPreferencesShowWorkPhoneToExternalUsers, UserPreferencesShowMobilePhoneToExternalUsers, UserPreferencesShowFaxToExternalUsers, UserPreferencesShowStreetAddressToExternalUsers, UserPreferencesShowCityToExternalUsers, UserPreferencesShowStateToExternalUsers, UserPreferencesShowPostalCodeToExternalUsers, UserPreferencesShowCountryToExternalUsers, UserPreferencesShowProfilePicToGuestUsers, UserPreferencesShowTitleToGuestUsers, UserPreferencesShowCityToGuestUsers, UserPreferencesShowStateToGuestUsers, UserPreferencesShowPostalCodeToGuestUsers, UserPreferencesShowCountryToGuestUsers, UserPreferencesHideInvoicesRedirectConfirmation, UserPreferencesHideStatementsRedirectConfirmation, UserPreferencesHideS1BrowserUI, UserPreferencesDisableEndorsementEmail, UserPreferencesPathAssistantCollapsed, UserPreferencesCacheDiagnostics, UserPreferencesShowEmailToGuestUsers, UserPreferencesShowManagerToGuestUsers, UserPreferencesShowWorkPhoneToGuestUsers, UserPreferencesShowMobilePhoneToGuestUsers, UserPreferencesShowFaxToGuestUsers, UserPreferencesShowStreetAddressToGuestUsers, UserPreferencesLightningExperiencePreferred, UserPreferencesPreviewLightning, UserPreferencesHideEndUserOnboardingAssistantModal, UserPreferencesHideLightningMigrationModal, UserPreferencesHideSfxWelcomeMat, UserPreferencesHideBiggerPhotoCallout, UserPreferencesGlobalNavBarWTShown, UserPreferencesGlobalNavGridMenuWTShown, UserPreferencesCreateLEXAppsWTShown, UserPreferencesFavoritesWTShown, UserPreferencesRecordHomeSectionCollapseWTShown, UserPreferencesRecordHomeReservedWTShown, UserPreferencesFavoritesShowTopFavorites, UserPreferencesExcludeMailAppAttachments, UserPreferencesSuppressTaskSFXReminders, UserPreferencesSuppressEventSFXReminders, UserPreferencesPreviewCustomTheme, UserPreferencesHasCelebrationBadge, UserPreferencesUserDebugModePref, UserPreferencesSRHOverrideActivities, UserPreferencesNewLightningReportRunPageEnabled, UserPreferencesNativeEmailClient, UserPreferencesHideBrowseProductRedirectConfirmation, ContactId, AccountId, CallCenterId, Extension, PortalRole, IsPortalEnabled, FederationIdentifier, AboutMe, FullPhotoUrl, SmallPhotoUrl, IsExtIndicatorVisible, OutOfOfficeMessage, MediumPhotoUrl, DigestFrequency, DefaultGroupNotificationFrequency, LastViewedDate, LastReferencedDate, BannerPhotoUrl, SmallBannerPhotoUrl, MediumBannerPhotoUrl, IsProfilePhotoActive, IndividualId, XEN_ID__c, AccountID__c, Assessor__c, CMSIntegrationUserEmail__c, MemberAccountId__c, Membership_Number__c, Office_Address_City__c, Office_Address_Country__c, Office_Address_Postal_Code__c, Office_Address_State__c, Office_Address_Street__c, WebsiteRole__c, FullName__c, User_18_Digit_Id__c, Deactivated_Date__c, Purchase_Order_Approver__c, Litmos__Access_Level__c, Litmos__Completed_Percentage__c, Litmos__Courses_Assigned__c, Litmos__Courses_Completed__c, Litmos__Deactivate_From_Litmos__c, Litmos__Learning_Paths_Assigned__c, Litmos__Learning_Paths_Completed__c, Litmos__LitmosUserId__c, Litmos__Litmos_Activated__c, Litmos__Litmos_Login_Access__c, Litmos__OriginalId__c, Litmos__Sync_Litmos__c, Litmos__Team_Id__c, Litmos__Total_Sum_Percentages__c, Litmos__Total_User_Program_Results__c, Litmos__User_Id__c, Litmos__lp_Completed_Percentage__c, Litmos__p_Completed_Percentage__c, Access_to_Canvas__c, User_15_Digit_Id__c, Billing_Grade__c, Member_Grade__c, WebRole__c, CardExpiryDate__c, CertifiedToDate__c, ComputerProfStatus__c IsAustralianUser__c, Is_Litmos__c, Is_New_User__c, MembershipExpiryDate__c, PartiallyCompletedCertID__c, Position_Title__c, Preferred_Name__c, Is_Changed__c, PartiallyCompletedMicroCredentialId__c, Community_Name__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new Account Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "Account"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "assessment__c"
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Account"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "Account"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "    Id, IsDeleted, MasterRecordId, Name, LastName, FirstName, Salutation, MiddleName, Type, RecordTypeId, ParentId,      BillingStreet, BillingCity, BillingState, BillingPostalCode, BillingCountry, BillingLatitude, BillingLongitude,      BillingGeocodeAccuracy, ShippingStreet, ShippingCity, ShippingState, ShippingPostalCode, ShippingCountry,      ShippingLatitude, ShippingLongitude, ShippingGeocodeAccuracy, Phone, Fax, Website, PhotoUrl, Industry,      AnnualRevenue, NumberOfEmployees, Description, OwnerId, CreatedDate, CreatedById, LastModifiedDate,      LastModifiedById, SystemModstamp, LastActivityDate, LastViewedDate, LastReferencedDate, PersonContactId,      IsPersonAccount, PersonMailingStreet, PersonMailingCity, PersonMailingState, PersonMailingPostalCode,      PersonMailingCountry, PersonMailingLatitude, PersonMailingLongitude, PersonMailingGeocodeAccuracy,      PersonOtherStreet, PersonOtherCity, PersonOtherState, PersonOtherPostalCode, PersonOtherCountry,      PersonOtherLatitude, PersonOtherLongitude, PersonOtherGeocodeAccuracy, PersonMobilePhone, PersonHomePhone,      PersonOtherPhone, PersonAssistantPhone, PersonEmail, PersonTitle, PersonDepartment, PersonAssistantName,      PersonLeadSource, PersonBirthdate, PersonLastCURequestDate, PersonLastCUUpdateDate, PersonEmailBouncedReason,      PersonEmailBouncedDate, PersonIndividualId, Jigsaw, JigsawCompanyId, AccountSource, SicDesc, BillingGrade__c,      CountryOfBirth__c, Gender__c, IdVerificationSectionStatus__c, PassportCountryOfIssue__c,      PersonalDetailsSectionCompleted__c, Pronouns__c, VerifiedDateOfBirthText__c, VerifiedDateofBirth__c,      VerifiedFirstName__c, VerifiedLastName__c, VerifiedMiddleName__c, WebRoles__c, AzureId__c, BoxFolderId__c,      BusinessName__c, ConsentDateTimeofInitiatingAgent__c, Create_Free_Skills_Membership__c, DateOfBirth__c,      HasActiveMSAApplication__c, InitiatingMigrationAgent__c, LeadId__c, OldSalesforceRecordId__c, PassportNumber__c,      PreferredName__c, ABN__c, WebRoles__pc, MARANumber__pc, AzureId__pc, OldOrgContactID__pc, OldOrgSkillAgentId__pc,      SkillAgentId__pc, AgentId__pc, UnreadMessageCountbyAgent__pc, UnreadMessageCountbyApplicant__pc"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new Assessment Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "assessment__c"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "assessment__c"
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "assessment__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "assessment__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": " Id, OwnerId, IsDeleted, Name, RecordTypeId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, LastViewedDate, LastReferencedDate, AgentEmailAddress__c, AgentName__c, AllocationDate__c, AppealAllocationDate__c, AppealAssessor__c, AppealCaseOfficer__c, AppealDate__c, AppealFinalisedDate__c, AppealLetterContent__c, AppealLetterFileId__c, AppealLetterFileName__c, AppealOutcome__c, ApplicantEmailAddress__c, ApplicantOtherName__c, Applicant__c, ApplicationStatus__c, ApplicationType__c, AppliedANZSCOs__c, AssessmentOutcome__c, Assessor__c, AuthorisedAgent__c, CalculatedDeadlineDate__c, CaseOfficer__c, CongaLettersGenerated__c, Conga_Trigger_Appeal_Result_Letters__c, Contact__c, CurrentAttemptCount__c, EligibleforAppeal__c, ExperienceSectionStatus__c, FinaliseDate__c, FraudFlagDate__c, GenerateOutcomeLetterConga__c, GraduationDate__c, History__c, IDVerification__c, InvestigationVerdict__c, NameChangeRequested__c, NameHistorySectionStatus__c, NextActionDueDate__c, NumberOfResultLetters__c, OnHoldDate__c, PriorityRange__c, ProfessionalYearStudentID__c, Professional_Year_Complete__c, QAAssessor__c, QAFlagDate__c, RPLSectionStatus__c, ReasonforAppeal__c, ResultLetterContent__c, ResultLetterFileId__c, ResultLetterFileName__c, ResultLetterGenerated__c, SelectYourSkillsSectionStatus__c, SubmissionDate__c, SuitableANZSCOs__c, VEVOValidationFailed__c, VisaExpirationDate__c, VisaGrantNumber__c, Additional_docs_requested__c, AppealProcessingTime__c, ApplicantName__c, Applicantpreferredname__c, Conga_Trigger_Unsuitable_Result_Letters__c, CountryOfBirth__c, History_Indicator__c, IsRessignedApplication__c, ListViewFilter__c, ProcessingTime__c, UnsuitableTemplateId__c, MaxAttemptCount__c, QualificationsSectionStatus__c, ANZSCOsSelection__c, RejectedRPLCount__c, CongaTemplateId__c, Conga_Trigger_FraudPlagiarismRejected__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31T00:00:00Z"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31T00:00:00Z"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new AssessmentANZSCOSkill Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "AssessmentANZSCOSkill__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "AssessmentANZSCOSkill__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, Experience__c, ApplicantSelectedLevel__c, ApplicantSelected__c, assessmentANZSCO__c, assessmentSkill__c, assessorComments__c, assessorSelectedLevel__c, assessorSelected__c, SkillName__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new AssessmentANZSCO__c Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "AssessmentANZSCO__c"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "assessment__c"
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "AssessmentANZSCO__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "AssessmentANZSCO__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, ANZSCO__c, Assessment__c, ANZSCOOutcome__c, CurrentAttemptCount__c, DateOfKnowledgeMet__c, EAANoText__c, EAAYesText__c, ExternalId__c, GenerateOutcomeLetterConga__c, IsChosen__c, QAANoText__c, QAAYesText__c, RMDLogic__c, RPLQualificationText__c, RequirementMetDate__c, ResultLetterFileId__c, ResultLetterFileName__c, ANZSCOforUnitCountText__c, AnzscoName__c, AssessmentName__c, Conga_Trigger_Generate_Suitable_Letters__c, SuitableTemplateId__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new Assessment_Comment__c Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Assessment_Comment__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "Assessment_Comment__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, IsDeleted, Name, RecordTypeId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastViewedDate, LastReferencedDate, Contact__c, Assessment__c, Qualification__c, ApplicantResponse__c, AzureId__c, Case__c, DeadlineDate__c, DocumentType__c, Experience__c, Message__c, NotificationType__c, ReadByAgent__c, ReadByApplicant__c, Reason__c, ResultLetterFileId__c, Sender__c, Status__c, Subject__c, SupportingInfo__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new Case Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "case"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "assessment__c"
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "case"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "case_c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, IsDeleted, MasterRecordId, CaseNumber, ContactId, AccountId, ParentId, SuppliedName, SuppliedEmail, SuppliedPhone, SuppliedCompany, Type, RecordTypeId, Status, Reason, Origin, Language, Subject, Priority, Description, IsClosed, ClosedDate, IsEscalated, OwnerId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, ContactPhone, ContactMobile, ContactEmail, ContactFax, Comments, LastViewedDate, LastReferencedDate, Assessment__c, Deadline_Within__c, Lead__c, Topic__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}