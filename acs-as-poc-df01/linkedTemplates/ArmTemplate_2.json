{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "acs-as-poc-df01"
		},
		"TR_SF_Refresh_properties_SF Assessment Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "assessment__c"
		},
		"TR_SF_Refresh_properties_SF Assessment Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "assessment"
		},
		"TR_SF_Refresh_properties_SF Assessment Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "  Id ,OwnerId ,IsDeleted ,Name ,CurrencyIsoCode ,RecordTypeId ,CreatedDate ,CreatedById ,LastModifiedDate ,LastModifiedById ,SystemModstamp ,LastActivityDate ,LastViewedDate ,LastReferencedDate ,ACSMembershipNumberFormula__c ,ANZSCOCode__c ,ActivationDate__c ,Active__c ,ApplicantFirstName__c ,ApplicantInterview__c ,ApplicantName__c ,ApplicantPaid__c ,ApplicantState__c ,ApplicantSubmitEmailSent__c ,Applicant_Last_Name__c ,Applicant_Name_Formula__c ,Applicant_Title__c ,Applicant_eligible_for_Senior_Membership__c ,ApplicationStatusIndicator__c ,ApplicationSubtype__c ,ApplicationType__c ,AssessmentClosedDate__c ,AssessmentComments__c ,AssessmentDate__c ,AssessmentDueDate__c ,AssessmentPathway__c ,AssessmentResult__c ,Assessment_18_Digits_ID__c ,Assessment_Report_ID__c ,Assessment_Template_ID__c ,Assessor1ConflictOfInterest__c ,Assessor2ConflictofInterest__c ,AssessorReviewComments__c ,Assessor_Appeal_Comments__c ,Assessor__c ,AvgAssessorTimeDays__c ,BECEndorsementReason__c ,BECEndorsement__c ,BFCChair__c ,BalanceDue__c ,BirthCertificateOrPassportApproved__c ,BoxFolderId__c ,BranchManager__c ,CBOKNotes__c ,CPD_Hours_Percentage_Complete__c ,CPD_Hours_Required__c ,CPD_Run_Rate_Variance__c ,CPD_Target_Run_Rate__c ,CPPathwayScenario__c ,CPPathway__c ,CTPathwayScenario__c ,CTPathway__c ,CV_Notes__c ,Calculated__c ,CanUnsuitableBeRectified__c ,CaseAge__c ,CaseManager__c ,Certificate_Renewed__c ,CertificationExpiryDate__c ,CertificationPeriod__c ,CertificationStatus__c ,Certification_Type__c ,Change_Management__c ,Citation__c ,CommentsaddedtoUnsuccessfulEmail__c ,CompanyorUniversity__c ,CompletedApplicationReceivedDate__c ,Conga_Assessment_Report_Download__c ,Conga_Next_Action_Merge__c ,Contact_Email__c ,Contact__c ,Continuing__c ,ContributionRecognisedElsewhere__c ,ContributionWorthyofRecognition__c ,CountryOfBirth__c ,CountryOfResidence__c ,CreateBoxFolder__c ,CreditCardonFile__c ,CurrentUserCaseManager__c ,Current_Certification__c ,DIACComments__c ,Data_Information_Management__c ,Data_Migrated_from_XEN__c ,DateOfBirth__c ,DateOfKnowledgeMet__c ,Days_Remaining__c ,Days_Since_Submission_Date__c ,DeadlineDate__c ,DefaultEmailAddress__c ,DefaultMailAddressCode__c ,DefaultMailAddressID__c ,DefaultMailAddressStreet__c ,DefaultMailCity__c ,DefaultMailCountry__c ,DefaultMailPostalCode__c ,DefaultMailState__c ,Education__c ,Email_Address__c ,Email_Template__c ,Employed_in_ICT_school_research_facility__c ,End_Date__c ,ErrorsFoundCount__c ,Ethics__c ,ExcelledInWhichRoleArea__c ,Experience__c ,FinalReview__c ,FinalisedDate__c ,FollowUpDueDate__c ,Former_ANZSCO__c ,Former_Application_Sub_Type__c ,Former_Application_Type__c ,Former_Assessor_Name__c ,FromAssessorDate__c ,FromAssessorNotEdited__c ,Hardware_Software_Fundamentals__c ,HasCMSIntegrationCompleted__c ,Has_10yrs_of_professional_ICT_experience__c ,Highest_level_of_qualification_achieved__c ,Holds_Masters_by_Research_PhD__c ,HonoursandAwards__c ,Human_computer_Interaction__c ,ICTManagement__c ,ICTProblemSolving__c ,ICTProfessionalKnowledge__c ,ICT_Problem_Solving__c ,IT_Project_Management__c ,IT_governance__c ,ImpactOnITFieldManagement__c ,InPreparation15DayReminderDate__c ,InPreparation15DayReminder__c ,InPreparation25DayReminderDate__c ,InPreparation25DayReminder__c ,Internal_Notes__c ,Interpersonal_Communication__c ,IsICTKnowledgeAcceptable__c ,Keep_Certification_Status_Private__c ,LapsedComments__c ,LapsedFollowUp__c ,LastModifiedUserProfileName__c ,MCAssessmentOutcome__c ,Manual_Data_Entry__c, MeetCBOKRequirements__c, MembershipExpiry__c, Mobile__c, NFCAssessmentOutcome__c, Nationality__c, Networking__c, Next_Action_Due_Date__c, Next_Action__c, NominationSecondedByDate__c, NominationSecondedByEmail__c, NominationSecondedByPhone__c, NominationSecondedBy__c, NominatorACSMembershipNumber__c, NominatorEmail__c, NominatorName__c, NominatorPhoneNumber__c, Nominator_Declaration_Date__c, NonDecisionReady__c, OriginalApplicationReceived__c, Original_Received_Date__c, Overdrive_Target__c, Passport_Number__c, Password__c, Payment_Recieved__c, PeriodofMajorContribution__c, PhoneNumber__c, PlagiarismDetected__c, Position_Title_1__c, Position_Title_2__c, Potential_RMD__c, Previous_Certification__c, PriorityReason__c, Priority__c, ProfessionalYearComplete__c, Professionalism__c, Programming__c, ProjectReportUpload__c, ProjectReportsAttachedAndAcceptable__c, PublicationsandPatents__c, QADate__c, QualityCheckComment__c, Quality_Check_Status__c, REFERENCE_TO_X_EN__c, RMDCalculationErrorMessages__c, RMDLogicUsed__c, RPLComments__c, Ready_for_Renewal__c, ReasonforAppeal__c, ReasonforReviewChangeofANZSCO__c, ReasonforReviewExperience__c, ReasonforReviewQualification__c, ReasonforReview__c, RectifyComment__c, ReferToDIAC__c, Referee_Company_1__c, Referee_Company_2__c, Referee_Email_1__c, Referee_Email_2__c, Referee_Name_1__c, Referee_Name_2__c, Referee_Phone_1__c, Referee_Phone_2__c, RelatedAssessment__c, RelatedCertification__c, RenewalProcessed__c, RequirementsMetDate__c, ResultLetterApproved__c, Result_Letter_Template__c, ReviewOrAppealEmailTemplate__c, ReviewOrAppealTemplateID__c, Review_Unsuitable__c, SFIA_Specialism__c, Security_Management__c, Security_Policy__c, Service_Management__c, SkillsAgent__c, Societal_Issues_Legal_issues_Privacy__c, Status__c, SubmissionDate__c, Suggested_Pathway__c, Suggested_Type__c, Systems_Acquisition__c, Systems_Development__c, Target_CPD_Hours__c, Teamwork_Concepts_and_Issues__c, TechnologyBuilding__c, TechnologyResources__c, TotalAcceptedExperienceYM__c, TotalCPDHours__c, Total_CPD_Hours_and_Minutes__c, Total_CPD_Minutes_Conversion__c, TypeofCertificationAssessment__c, UnsuccessfulNominationCommunication__c, WhatMakesContributionDistinguished__c, WithAssessorDate__c, X5YearsProfessionalICTExpAtSFIA6__c, Years_in_SFIA_Specialism__c, Years_of_experience_in_ICT__c, No_of_Qualification_Accreditation__c, TotalAcceptedExperienceDays__c, TranscriptRollupQualifications__c, Certification_Lodged_with_Membership__c, ApplicantAttachmentsBoxFolderId__c, AssessorAttachmentsBoxFolderId__c, CmsApplicantBoxDocumentDetails__c, CmsBoxApplicantFileIdsToMove__c, ResultLetterBoxFolderId__c, MonthActivated__c, ExpriyMonth__c, ApplicationCreatedDateInXenAndSF__c, Xen_Application_ID__c, PrioriyInformation__c, Certificate_Specialism__c, RecommendedANZSCO__c, RecommendedApplicationType__c, LinkedApplication__c, CaseClosed__c, ApplicantDOB__c, No_RPL_Document__c, RMDFormatted__c, DateofKnowledgeMetFormatted__c, BypassValidation__c, CurrentPreviousWeekFinalisedDate__c, CurrentPreviousMonthFinalisedDate__c, Related_Certification_Status__c, Outfit_Assessment_Last_Update__c, Outfit_Last_Letter_Template__c, Outfit_Letter_Content__c, Email_Correspondence_Sent__c, Certification_Expiry_Date_As_Text__c, Days_Since_Activation__c, Membership_Status__c, Pendula_Test__c, PlagScan_Doc_Id__c, Plagiarism_Completion_Date__c, Outfit_Report_Document_Id__c, Outfit_Report_Document_Name__c, Plagiarism_Error__c, Plagiarism_Flag__c, Plagiarism_Level__c, Plagiarism_Score__c, Plagiarism_Status__c, Plagiarism_Submission_Date__c, View_in_PlagScan__c, Request_Additional_Documents__c, Unsuitable_Outcome__c, ProductID__c, GTI_Application__c, Certification_Category__c"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_canvas_user_history')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Fetch_Userid",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select id  from [dbo].[CanvasUsers] order by id\noffset @{pipeline().parameters.offset} rows fetch next @{pipeline().parameters.fetch} rows only",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSQLSP",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set userId",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Fetch_Userid",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "userid",
							"value": {
								"value": "@activity('Fetch_Userid').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set userId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('userid')",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Copy Users from canvas",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Authorization": "Bearer 13129~RukNsJx0ARpUNmQpSv4Thirjmx4UG02owYm63WIfQJDfuYdCZVD2NQruGbOZRgy4"
											},
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": "\n",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"parallelCopies": 32
									},
									"inputs": [
										{
											"referenceName": "ds_canvas",
											"type": "DatasetReference",
											"parameters": {
												"relativeurl": {
													"value": "@concat('/api/v1/users/', item().id,'/history')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SQLTableQ",
											"type": "DatasetReference",
											"parameters": {
												"tablename": "CanvasUserHistory",
												"schemaname": "dbo"
											}
										}
									]
								}
							]
						}
					}
				],
				"concurrency": 10,
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"offset": {
						"type": "int",
						"defaultValue": 0
					},
					"fetch": {
						"type": "string",
						"defaultValue": "4999"
					}
				},
				"variables": {
					"eachuserid": {
						"type": "Array",
						"defaultValue": []
					},
					"userid": {
						"type": "Array",
						"defaultValue": []
					}
				},
				"folder": {
					"name": "ACS/Canvas"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_trackingDaily_Incre')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TrackingData",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"modifiedDatetimeStart": {
									"value": "@adddays(utcnow(),-1)",
									"type": "Expression"
								},
								"modifiedDatetimeEnd": {
									"value": "@utcnow()",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CopyToSQL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": false,
												"wildcardFolderPath": {
													"value": "adobe-campaign--datafeed/prod/prod_tr",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": [
													"Delivery log ID"
												]
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "TrackingData",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SQLTableQ",
											"type": "DatasetReference",
											"parameters": {
												"tablename": {
													"value": "RawtrackingLog",
													"type": "Expression"
												},
												"schemaname": "hco"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "LogRunTime",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[hco].[create_sys_log]",
							"storedProcedureParameters": {
								"datafactory": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"triggerName": {
									"value": null,
									"type": "String"
								},
								"TriggerTime": {
									"value": null,
									"type": "String"
								},
								"TriggerType": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LSSQLPOC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "HCO"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_trackingDaily_full')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TrackingData",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CopyToSQL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": false,
												"wildcardFolderPath": {
													"value": "adobe-campaign--datafeed/prod/prod_tr",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "TrackingData",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SQLTableQ",
											"type": "DatasetReference",
											"parameters": {
												"tablename": {
													"value": "RawtrackingLog",
													"type": "Expression"
												},
												"schemaname": "hco"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "LogRunTime",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[hco].[create_sys_log]",
							"storedProcedureParameters": {
								"datafactory": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"triggerName": {
									"value": null,
									"type": "String"
								},
								"TriggerTime": {
									"value": null,
									"type": "String"
								},
								"TriggerType": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LSSQLPOC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "HCO"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinaryDataDestinationStore')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your data destination store.  ",
				"linkedServiceName": {
					"referenceName": "LS_AZST_BlobLanding",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Others"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_safc_brpQuery')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SAFC_BRP",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Others"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_canvas_UserHistory_iterative')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup find row count",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*)  as tot from [dbo].[CanvasUsers] \n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSQLSP",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Set variable rowcount String",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup find row count",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "rowcount",
							"value": {
								"value": "@string(activity('Lookup find row count').output.firstRow.tot)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable Iteration",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable rowcount String",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "iteration",
							"value": {
								"value": "@range(1,add(div(int(variables('rowcount')),5000),1))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set variable Iteration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('iteration')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_canvas_user_history",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"offset": {
												"value": "@int(variables('offset'))\r\n",
												"type": "Expression"
											},
											"fetch": {
												"value": "@int(variables('fetch'))",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Set offset again",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Execute Pipeline1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "offset",
										"value": {
											"value": "@string(mul(5000,item()))",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"concurrency": 10,
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"offset": {
						"type": "String",
						"defaultValue": "0"
					},
					"fetch": {
						"type": "String",
						"defaultValue": "4999"
					},
					"rowcount": {
						"type": "String"
					},
					"iteration": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "ACS/Canvas"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_canvas_user_history')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_canvas_login_iterative')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup find row count",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*)  as tot from [dbo].[CanvasUsers] \n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSQLSP",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Set variable rowcount String",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup find row count",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "rowcount",
							"value": {
								"value": "@string(activity('Lookup find row count').output.firstRow.tot)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable Iteration",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable rowcount String",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "iteration",
							"value": {
								"value": "@range(1,add(div(int(variables('rowcount')),5000),1))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set variable Iteration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('iteration')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_canvas_logins",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"offset": {
												"value": "@int(variables('offset'))\r\n",
												"type": "Expression"
											},
											"fetch": {
												"value": "@int(variables('fetch'))",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Set offset again",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Execute Pipeline1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "offset",
										"value": {
											"value": "@string(mul(5000,item()))",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"concurrency": 10,
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"offset": {
						"type": "String",
						"defaultValue": "0"
					},
					"fetch": {
						"type": "String",
						"defaultValue": "4999"
					},
					"rowcount": {
						"type": "String"
					},
					"iteration": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "ACS/Canvas"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_canvas_profiles_iterative')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup find row count",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*)  as tot from [dbo].[CanvasUsers] \n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSQLSP",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Set variable rowcount String",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup find row count",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "rowcount",
							"value": {
								"value": "@string(activity('Lookup find row count').output.firstRow.tot)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable Iteration",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable rowcount String",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "iteration",
							"value": {
								"value": "@range(1,add(div(int(variables('rowcount')),5000),1))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set variable Iteration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('iteration')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_canvas_Profiles",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"offset": {
												"value": "@int(variables('offset'))\r\n",
												"type": "Expression"
											},
											"fetch": {
												"value": "@int(variables('fetch'))",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Set offset again",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Execute Pipeline1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "offset",
										"value": {
											"value": "@string(mul(5000,item()))",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"concurrency": 10,
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"offset": {
						"type": "String",
						"defaultValue": "0"
					},
					"fetch": {
						"type": "String",
						"defaultValue": "4999"
					},
					"rowcount": {
						"type": "String"
					},
					"iteration": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "ACS/Canvas"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_HCO_pipelines')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_broadcastingDaily_Incre",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "pl_trackingDaily_Incre",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "pl_RawAnalyticsDaily_Incre",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-10-04T00:00:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								0
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_trackingDaily_Incre')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_SF_Refresh')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SF Assessment Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF Assessment Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF Assessment Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF Assessment Refresh_parameters_ColumnList')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 12,
						"startTime": "2022-12-24T00:00:00",
						"timeZone": "AUS Eastern Standard Time"
					}
				}
			},
			"dependsOn": []
		}
	]
}