{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "acs-as-poc-df01"
		},
		"ACS Databricks Premium_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'ACS Databricks Premium'"
		},
		"ACSSFPROD_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ACSSFPROD'"
		},
		"ACSSFPROD_securityToken": {
			"type": "secureString",
			"metadata": "Secure string for 'securityToken' of 'ACSSFPROD'"
		},
		"ACSSFPRODNEW_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'ACSSFPRODNEW'"
		},
		"AzureDataLakeStorage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage'"
		},
		"AzureDatabricksPremium_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricksPremium'"
		},
		"AzureMember_ls_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureMember_ls'"
		},
		"Canvas REST_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Canvas REST'"
		},
		"Datafeeds_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Datafeeds'"
		},
		"LSSQLPOC_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LSSQLPOC'"
		},
		"LS_AZST_BlobLanding_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_AZST_BlobLanding'"
		},
		"Ls_ACSDatabricksDeltaLake_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'Ls_ACSDatabricksDeltaLake'"
		},
		"Ls_AzurePOCDatabricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'Ls_AzurePOCDatabricks'"
		},
		"SalesforceACSProd_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SalesforceACSProd'"
		},
		"SalesforceACSProd_securityToken": {
			"type": "secureString",
			"metadata": "Secure string for 'securityToken' of 'SalesforceACSProd'"
		},
		"SalesforceNewAPItest_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'SalesforceNewAPItest'"
		},
		"dewr_ls_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'dewr_ls'"
		},
		"ls_DataLake_DPP_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_DataLake_DPP'"
		},
		"ls_SQL_membership_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_SQL_membership'"
		},
		"ACS Databricks Premium_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "1010-010936-bskqk28r"
		},
		"ACSSFPROD_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://acsau.my.salesforce.com/"
		},
		"ACSSFPROD_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "prashant.yadvendra@acs.org.au"
		},
		"ACSSFPRODNEW_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://australiancomputersociety.my.salesforce.com"
		},
		"ACSSFPRODNEW_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "3MVG9n_HvETGhr3AH_H.4I2Qc4Wi_IeHq6Jwy_JIJ0rZttZ7qqacVLP_jxCmm_QSpef0B41muTJluVw2QGPxP"
		},
		"AzureDataLakeStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stacsdpp01.dfs.core.windows.net/"
		},
		"Canvas REST_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://acslearn.instructure.com"
		},
		"Canvas REST_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "prashant.yadvendra"
		},
		"GoogleRestAPI_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://serpapi.com/search.json?engine=google_maps_reviews&data_id=0x6ad642ea3beac025:0xed69f6a75b142c6d&api_key=9641d55c404951eab2dcbe36a8c4e5577593a583f44d570f889d8fd1add13ddc"
		},
		"HttpServer1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/Azure-Samples/azure-sql-db-import-data/main/json/user1.json"
		},
		"LS_AZKV_DVR_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://s-ause-kv-covid19dvr.vault.azure.net"
		},
		"Ls_AzurePOCDatabricks_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0323-061008-xwb0cb1p"
		},
		"SalesforceACSProd_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://acsau.my.salesforce.com/"
		},
		"SalesforceACSProd_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "prashant.yadvendra@acs.org.au"
		},
		"SalesforceNewAPItest_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://australiancomputersociety.my.salesforce.com"
		},
		"SalesforceNewAPItest_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "3MVG9n_HvETGhr3AH_H.4I2Qc4Wi_IeHq6Jwy_JIJ0rZttZ7qqacVLP_jxCmm_QSpef0B41muTJluVw2QGPxP"
		},
		"dewr_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stacspoc01.dfs.core.windows.net/"
		},
		"ls_DataLake_DPP_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stacsdpp01.dfs.core.windows.net/"
		},
		"NewSFRefresh_Hourly_properties_QualificationAssessmentANZSCO__c Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "QualificationAssessmentANZSCO__c"
		},
		"NewSFRefresh_Hourly_properties_QualificationAssessmentANZSCO__c Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "QualificationAssessmentANZSCO__c"
		},
		"NewSFRefresh_Hourly_properties_QualificationAssessmentANZSCO__c Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, Qualification__c, AssessmentANZSCO__c, CloselyRelated__c, ANZSCOName__c, CalculatedX__c"
		},
		"NewSFRefresh_Hourly_properties_QualificationAssessmentANZSCO__c Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"NewSFRefresh_Hourly_properties_SF new Account Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "Account"
		},
		"NewSFRefresh_Hourly_properties_SF new Account Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "Account"
		},
		"NewSFRefresh_Hourly_properties_SF new Account Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, MasterRecordId, Name, LastName, FirstName, Salutation, MiddleName, Type, RecordTypeId, ParentId,      BillingStreet, BillingCity, BillingState, BillingPostalCode, BillingCountry, BillingLatitude, BillingLongitude,      BillingGeocodeAccuracy, ShippingStreet, ShippingCity, ShippingState, ShippingPostalCode, ShippingCountry,      ShippingLatitude, ShippingLongitude, ShippingGeocodeAccuracy, Phone, Fax, Website, PhotoUrl, Industry,      AnnualRevenue, NumberOfEmployees, Description, OwnerId, CreatedDate, CreatedById, LastModifiedDate,      LastModifiedById, SystemModstamp, LastActivityDate, LastViewedDate, LastReferencedDate, PersonContactId,      IsPersonAccount, PersonMailingStreet, PersonMailingCity, PersonMailingState, PersonMailingPostalCode,      PersonMailingCountry, PersonMailingLatitude, PersonMailingLongitude, PersonMailingGeocodeAccuracy,      PersonOtherStreet, PersonOtherCity, PersonOtherState, PersonOtherPostalCode, PersonOtherCountry,      PersonOtherLatitude, PersonOtherLongitude, PersonOtherGeocodeAccuracy, PersonMobilePhone, PersonHomePhone,      PersonOtherPhone, PersonAssistantPhone, PersonEmail, PersonTitle, PersonDepartment, PersonAssistantName,      PersonLeadSource, PersonBirthdate, PersonLastCURequestDate, PersonLastCUUpdateDate, PersonEmailBouncedReason,      PersonEmailBouncedDate, PersonIndividualId, Jigsaw, JigsawCompanyId, AccountSource, SicDesc, BillingGrade__c,      CountryOfBirth__c, Gender__c, IdVerificationSectionStatus__c, PassportCountryOfIssue__c,      PersonalDetailsSectionCompleted__c, Pronouns__c, VerifiedDateOfBirthText__c, VerifiedDateofBirth__c,      VerifiedFirstName__c, VerifiedLastName__c, VerifiedMiddleName__c, WebRoles__c, AzureId__c, BoxFolderId__c,      BusinessName__c, ConsentDateTimeofInitiatingAgent__c, Create_Free_Skills_Membership__c, DateOfBirth__c,      HasActiveMSAApplication__c, InitiatingMigrationAgent__c, LeadId__c, OldSalesforceRecordId__c, PassportNumber__c,      PreferredName__c, ABN__c, WebRoles__pc, MARANumber__pc, AzureId__pc, OldOrgContactID__pc, OldOrgSkillAgentId__pc,      SkillAgentId__pc, AgentId__pc, UnreadMessageCountbyAgent__pc, UnreadMessageCountbyApplicant__pc"
		},
		"NewSFRefresh_Hourly_properties_SF new Account Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"NewSFRefresh_Hourly_properties_SF new ANZSCOGroup__c refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "ANZSCOGroup__c"
		},
		"NewSFRefresh_Hourly_properties_SF new ANZSCOGroup__c refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "ANZSCOGroup__c"
		},
		"NewSFRefresh_Hourly_properties_SF new ANZSCOGroup__c refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, OwnerId, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastViewedDate, LastReferencedDate, Code__c"
		},
		"NewSFRefresh_Hourly_properties_SF new ANZSCOGroup__c refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"NewSFRefresh_Hourly_properties_SF new ANZSCOSkill__c Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "ANZSCOSkill__c"
		},
		"NewSFRefresh_Hourly_properties_SF new ANZSCOSkill__c Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "ANZSCOSkill__c"
		},
		"NewSFRefresh_Hourly_properties_SF new ANZSCOSkill__c Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastViewedDate, LastReferencedDate, ANZSCO__c, Skill__c, MinimumSkillLevel__c"
		},
		"NewSFRefresh_Hourly_properties_SF new ANZSCOSkill__c Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"NewSFRefresh_Hourly_properties_SF new Assessment_Comment__c Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "Assessment_Comment__c"
		},
		"NewSFRefresh_Hourly_properties_SF new Assessment_Comment__c Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "Assessment_Comment__c"
		},
		"NewSFRefresh_Hourly_properties_SF new Assessment_Comment__c Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, Name, RecordTypeId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastViewedDate, LastReferencedDate, Contact__c, Assessment__c, Qualification__c, ApplicantResponse__c, AzureId__c, Case__c, DeadlineDate__c, DocumentType__c, Experience__c, Message__c, NotificationType__c, ReadByAgent__c, ReadByApplicant__c, Reason__c, ResultLetterFileId__c, Sender__c, Status__c, Subject__c, SupportingInfo__c"
		},
		"NewSFRefresh_Hourly_properties_SF new Assessment_Comment__c Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"NewSFRefresh_Hourly_properties_SF new Assessment History Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "Assessment__History"
		},
		"NewSFRefresh_Hourly_properties_SF new Assessment History Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "Assessment__History"
		},
		"NewSFRefresh_Hourly_properties_SF new Assessment History Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, ParentId, CreatedById, CreatedDate, Field, DataType, OldValue, NewValue"
		},
		"NewSFRefresh_Hourly_properties_SF new Assessment History Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"NewSFRefresh_Hourly_properties_SF new AssessmentANZSCO__c Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "AssessmentANZSCO__c"
		},
		"NewSFRefresh_Hourly_properties_SF new AssessmentANZSCO__c Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "AssessmentANZSCO__c"
		},
		"NewSFRefresh_Hourly_properties_SF new AssessmentANZSCO__c Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, ANZSCO__c, Assessment__c, ANZSCOOutcome__c, CurrentAttemptCount__c, DateOfKnowledgeMet__c, EAANoText__c, EAAYesText__c, ExternalId__c, GenerateOutcomeLetterConga__c, IsChosen__c, QAANoText__c, QAAYesText__c, RMDLogic__c, RPLQualificationText__c, RequirementMetDate__c, ResultLetterFileId__c, ResultLetterFileName__c, ANZSCOforUnitCountText__c, AnzscoName__c, AssessmentName__c, Conga_Trigger_Generate_Suitable_Letters__c, SuitableTemplateId__c"
		},
		"NewSFRefresh_Hourly_properties_SF new AssessmentANZSCO__c Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"NewSFRefresh_Hourly_properties_SF new AssessmentANZSCOSkill Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "AssessmentANZSCOSkill__c"
		},
		"NewSFRefresh_Hourly_properties_SF new AssessmentANZSCOSkill Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "AssessmentANZSCOSkill__c"
		},
		"NewSFRefresh_Hourly_properties_SF new AssessmentANZSCOSkill Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, Experience__c, ApplicantSelectedLevel__c, ApplicantSelected__c, assessmentANZSCO__c, assessmentSkill__c, assessorComments__c, assessorSelectedLevel__c, assessorSelected__c, SkillName__c"
		},
		"NewSFRefresh_Hourly_properties_SF new AssessmentANZSCOSkill Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"NewSFRefresh_Hourly_properties_SF new AssessmentSkill__c Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "AssessmentSkill__c"
		},
		"NewSFRefresh_Hourly_properties_SF new AssessmentSkill__c Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "AssessmentSkill__c"
		},
		"NewSFRefresh_Hourly_properties_SF new AssessmentSkill__c Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, Assessment__c, Skill__c, ApplicantSelectedLevel__c, ApplicantSelected__c, AttemptNumber__c"
		},
		"NewSFRefresh_Hourly_properties_SF new AssessmentSkill__c Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"NewSFRefresh_Hourly_properties_SF new Case Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "case"
		},
		"NewSFRefresh_Hourly_properties_SF new Case Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "case_c"
		},
		"NewSFRefresh_Hourly_properties_SF new Case Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, MasterRecordId, CaseNumber, ContactId, AccountId, ParentId, SuppliedName, SuppliedEmail, SuppliedPhone, SuppliedCompany, Type, RecordTypeId, Status, Reason, Origin, Language, Subject, Priority, Description, IsClosed, ClosedDate, IsEscalated, OwnerId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, ContactPhone, ContactMobile, ContactEmail, ContactFax, Comments, LastViewedDate, LastReferencedDate, Assessment__c, Deadline_Within__c, Lead__c, Topic__c"
		},
		"NewSFRefresh_Hourly_properties_SF new Case Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"NewSFRefresh_Hourly_properties_SF new Contact Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "Contact"
		},
		"NewSFRefresh_Hourly_properties_SF new Contact Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "Contact"
		},
		"NewSFRefresh_Hourly_properties_SF new Contact Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, MasterRecordId, AccountId, IsPersonAccount, LastName, FirstName, Salutation, MiddleName, Name, RecordTypeId, OtherStreet, OtherCity, OtherState, OtherPostalCode, OtherCountry, OtherLatitude, OtherLongitude, OtherGeocodeAccuracy, MailingStreet, MailingCity, MailingState, MailingPostalCode, MailingCountry, MailingLatitude, MailingLongitude, MailingGeocodeAccuracy, Phone, Fax, MobilePhone, HomePhone, OtherPhone, AssistantPhone, ReportsToId, Email, Title, Department, AssistantName, LeadSource, Birthdate, Description, OwnerId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, LastCURequestDate, LastCUUpdateDate, LastViewedDate, LastReferencedDate, EmailBouncedReason, EmailBouncedDate, IsEmailBounced, PhotoUrl, Jigsaw, JigsawContactId, IndividualId, WebRoles__c, MARANumber__c, AzureId__c, OldOrgContactID__c, OldOrgSkillAgentId__c, SkillAgentId__c, AgentId__c, UnreadMessageCountbyAgent__c, UnreadMessageCountbyApplicant__c\n"
		},
		"NewSFRefresh_Hourly_properties_SF new Contact Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"NewSFRefresh_Hourly_properties_SF new Experience_Assessment_ANZSCO__c Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "Experience_Assessment_ANZSCO__c"
		},
		"NewSFRefresh_Hourly_properties_SF new Experience_Assessment_ANZSCO__c Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "Experience_Assessment_ANZSCO__c"
		},
		"NewSFRefresh_Hourly_properties_SF new Experience_Assessment_ANZSCO__c Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, Experience__c, assessmentANZSCO__c, CloselyRelated__c, ANZSCOName_c__c "
		},
		"NewSFRefresh_Hourly_properties_SF new Experience_Assessment_ANZSCO__c Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"NewSFRefresh_Hourly_properties_SF new Experience Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "Experience__c"
		},
		"NewSFRefresh_Hourly_properties_SF new Experience Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "Experience__c"
		},
		"NewSFRefresh_Hourly_properties_SF new Experience Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id,\nIsDeleted,\nName,\nRecordTypeId,\nCreatedDate,\nCreatedById,\nLastModifiedDate,\nLastModifiedById,\nSystemModstamp,\nAssessment__c,\nDoYouHaveARegisteredBusiness__c,\nEmploymentOccupationEndDate__c,\nEmploymentOccupationOngoing__c,\nEmploymentOccupationStartDate__c,\nExperienceAccepted__c,\nExperienceComments__c,\nExperienceStatus__c,\nHoursWorkedPerWeek__c,\nLocationOfEmploymentOccupation__c,\nNatureOfWorkExperience__c,\nPositionOccupationOrRoleTitle__c,\nCountableExperienceDays__c,\nCountableExperienceMonths__c,\nCountableExperienceYears__c,\nCountableExperience__c,\nReasonExperienceNotAccepted__c,\nTotalExperience__c"
		},
		"NewSFRefresh_Hourly_properties_SF new Experience Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"NewSFRefresh_Hourly_properties_SF new IdentityVerification Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "IdentityVerification__c"
		},
		"NewSFRefresh_Hourly_properties_SF new IdentityVerification Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "IdentityVerification__c"
		},
		"NewSFRefresh_Hourly_properties_SF new IdentityVerification Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id,\nOwnerId,\nIsDeleted,\nName,\nCreatedDate,\nCreatedById,\nLastModifiedDate,\nLastModifiedById,\nSystemModstamp,\nLastViewedDate,\nLastReferencedDate,\nApplicant__c,\nIdVerificationResult__c,\nLead__c,\nPassportCountryofIssue__c,\nPassportExpiryDate__c,\nPassportNumber__c,\nTransactionCompletionDate__c,\nTransactionID__c,\nTransactionStatus__c,\nVerifiedDateofBirth__c,\nVerifiedFirstName__c,\nVerifiedLastName__c,\nVerifiedMiddleName__c,\ncreatedAt__c,\nPassportExpired__c,\nCitizenship_Number__c,\nComputerised_National_Identity_Card__c"
		},
		"NewSFRefresh_Hourly_properties_SF new IdentityVerification Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"NewSFRefresh_Hourly_properties_SF new lead Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "lead"
		},
		"NewSFRefresh_Hourly_properties_SF new lead Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "lead"
		},
		"NewSFRefresh_Hourly_properties_SF new lead Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, MasterRecordId, LastName, FirstName, Salutation, MiddleName, Name, RecordTypeId, Title, Company, Street, City, State, PostalCode, Country, Latitude, Longitude, GeocodeAccuracy, Phone, Email, Website, PhotoUrl, Description, LeadSource, Status, Industry, Rating, AnnualRevenue, NumberOfEmployees, OwnerId, IsConverted, ConvertedDate, ConvertedAccountId, ConvertedContactId, ConvertedOpportunityId, IsUnreadByOwner, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, LastViewedDate, LastReferencedDate, Jigsaw, JigsawContactId, EmailBouncedReason, EmailBouncedDate, IndividualId, CountryOfBirth__c, IdVerificationSectionStatus__c, PassportCountryOfIssue__c, PersonalDetailsSectionCompleted__c, Pronouns__c, VerifiedDateOfBirthText__c, VerifiedDateofBirth__c, VerifiedFirstName__c, VerifiedLastName__c, VerifiedMiddleName__c, WebsiteRole__c, AzureId__c, ConsentDateTimeofInitiatingAgent__c, DateOfBirth__c, HasActiveMSAApplication__c, InitiatingMigrationAgent__c, LeadId__c, PassportNumber__c, PreferredName__c\n"
		},
		"NewSFRefresh_Hourly_properties_SF new lead Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"NewSFRefresh_Hourly_properties_SF new Order product refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "orderitem"
		},
		"NewSFRefresh_Hourly_properties_SF new Order product refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "orderitem"
		},
		"NewSFRefresh_Hourly_properties_SF new Order product refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, Product2Id, IsDeleted, OrderId, PricebookEntryId, OriginalOrderItemId, AvailableQuantity, Quantity, UnitPrice, ListPrice, TotalPrice, ServiceDate, EndDate, Description, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, OrderItemNumber"
		},
		"NewSFRefresh_Hourly_properties_SF new Order product refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"NewSFRefresh_Hourly_properties_SF new Order Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "order"
		},
		"NewSFRefresh_Hourly_properties_SF new Order Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "order_c"
		},
		"NewSFRefresh_Hourly_properties_SF new Order Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "\nId, OwnerId, ContractId, AccountId, Pricebook2Id, OriginalOrderId, EffectiveDate, EndDate, IsReductionOrder, Status, Description, CustomerAuthorizedById, CompanyAuthorizedById, Type, BillingStreet, BillingCity, BillingState, BillingPostalCode, BillingCountry, BillingLatitude, BillingLongitude, BillingGeocodeAccuracy, ShippingStreet, ShippingCity, ShippingState, ShippingPostalCode, ShippingCountry, ShippingLatitude, ShippingLongitude, ShippingGeocodeAccuracy, ActivatedDate, ActivatedById, StatusCode, OrderNumber, TotalAmount, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, IsDeleted, SystemModstamp, LastViewedDate, LastReferencedDate, AccountName__c, AssessmentId__c, Email__c"
		},
		"NewSFRefresh_Hourly_properties_SF new Order Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"NewSFRefresh_Hourly_properties_SF new Product Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "product2"
		},
		"NewSFRefresh_Hourly_properties_SF new Product Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "product2"
		},
		"NewSFRefresh_Hourly_properties_SF new Product Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "   Id ,Name ,ProductCode ,Description ,IsActive ,CreatedDate ,CreatedById ,LastModifiedDate ,LastModifiedById ,SystemModstamp ,Family ,ExternalDataSourceId ,ExternalId ,DisplayUrl ,QuantityUnitOfMeasure ,IsDeleted ,IsArchived ,LastViewedDate ,LastReferencedDate ,StockKeepingUnit "
		},
		"NewSFRefresh_Hourly_properties_SF new Product Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"NewSFRefresh_Hourly_properties_SF new Qualification Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "Qualification__c"
		},
		"NewSFRefresh_Hourly_properties_SF new Qualification Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "Qualification__c"
		},
		"NewSFRefresh_Hourly_properties_SF new Qualification Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, Name, RecordTypeId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, LastViewedDate, LastReferencedDate, Assessment__c, AQFComparability__c, CEPPortalLink__c, CEPReference__c, CalculationDuration__c, CloselyRelatedMajor__c, CloselyRelatedMinor__c, CompletionDate__c, CoreUnitsMajor__c, CoreUnitsMinor__c, CountryOfStudy__c, CourseDuration__c, CourseLoad__c, CreditPointsAwarded__c, DetailsOnResultLetter__c, FulltimeOrParttime__c, ICTContent__c, ICTUnitCountMajor__c, ICTUnitCountMinor__c, Institution__c, IsAffiliatedtoAustralianUniversity__c, IsthisAResearchBasedQualification__c, NotAssessed__c, PotentialRDM4Of6Yrs__c, PotentialRMD2Or5Yrs__c, QualificationCategory__c, QualificationStatus__c, ReasonsAQFNotRecognised__c, ShowRichText__c, TotalNumberOfUnit__c, UnitCountErrors__c, Unit_Count_Text_Long__c, AustralianQualification__c, ReasonsAQFNotRecognisedText__c, RejectedQualificationReasons__c, UnitCountText__c"
		},
		"NewSFRefresh_Hourly_properties_SF new Qualification Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"NewSFRefresh_Hourly_properties_SF new Skill__c  Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "Skill__c"
		},
		"NewSFRefresh_Hourly_properties_SF new Skill__c  Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "Skill__c"
		},
		"NewSFRefresh_Hourly_properties_SF new Skill__c  Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, OwnerId, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastViewedDate, LastReferencedDate, SkillCode__c, SkillLevels__c"
		},
		"NewSFRefresh_Hourly_properties_SF new Skill__c  Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"NewSFRefresh_Hourly_properties_SF new SupportingInfo__c Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "SupportingInfo__c"
		},
		"NewSFRefresh_Hourly_properties_SF new SupportingInfo__c Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "SupportingInfo__c"
		},
		"NewSFRefresh_Hourly_properties_SF new SupportingInfo__c Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, Name, RecordTypeId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, Assessment__c, DetailsonResultLetter__c, ExperienceForProject1__c, ExperienceForProject2__c, Plagiarism_Detected__c, RPLAccepted__c, RPLOutcome__c, RPLRejectionReason__c"
		},
		"NewSFRefresh_Hourly_properties_SF new SupportingInfo__c Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"NewSFRefresh_Hourly_properties_SF new User Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "user"
		},
		"NewSFRefresh_Hourly_properties_SF new User Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "user"
		},
		"NewSFRefresh_Hourly_properties_SF new User Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id\t, Username\t, LastName\t, FirstName\t, MiddleName\t, Name\t, CompanyName\t, Division\t, Department\t, Title\t, Street\t, City\t, State\t, PostalCode\t, Country\t, Latitude\t, Longitude\t, GeocodeAccuracy\t, Email\t, EmailPreferencesAutoBcc\t, EmailPreferencesAutoBccStayInTouch\t, EmailPreferencesStayInTouchReminder\t, SenderEmail\t, SenderName\t, Signature\t, StayInTouchSubject\t, StayInTouchSignature\t, StayInTouchNote\t, Phone\t, Fax\t, MobilePhone\t, Alias\t, CommunityNickname\t, BadgeText\t, IsActive\t, TimeZoneSidKey\t, UserRoleId\t, LocaleSidKey\t, ReceivesInfoEmails\t, ReceivesAdminInfoEmails\t, EmailEncodingKey\t, ProfileId\t, UserType\t, LanguageLocaleKey\t, EmployeeNumber\t, DelegatedApproverId\t, ManagerId\t, LastLoginDate\t, LastPasswordChangeDate\t, CreatedDate\t, CreatedById\t, LastModifiedDate\t, LastModifiedById\t, SystemModstamp\t, NumberOfFailedLogins\t, OfflineTrialExpirationDate\t, OfflinePdaTrialExpirationDate\t, UserPermissionsMarketingUser\t, UserPermissionsOfflineUser\t, UserPermissionsAvantgoUser\t, UserPermissionsCallCenterAutoLogin\t, UserPermissionsSFContentUser\t, UserPermissionsInteractionUser\t, UserPermissionsSupportUser\t, ForecastEnabled\t, UserPreferencesActivityRemindersPopup\t, UserPreferencesEventRemindersCheckboxDefault\t, UserPreferencesTaskRemindersCheckboxDefault\t, UserPreferencesReminderSoundOff\t, UserPreferencesDisableAllFeedsEmail\t, UserPreferencesDisableFollowersEmail\t, UserPreferencesDisableProfilePostEmail\t, UserPreferencesDisableChangeCommentEmail\t, UserPreferencesDisableLaterCommentEmail\t, UserPreferencesDisProfPostCommentEmail\t, UserPreferencesApexPagesDeveloperMode\t, UserPreferencesReceiveNoNotificationsAsApprover\t, UserPreferencesReceiveNotificationsAsDelegatedApprover\t, UserPreferencesHideCSNGetChatterMobileTask\t, UserPreferencesDisableMentionsPostEmail\t, UserPreferencesDisMentionsCommentEmail\t, UserPreferencesHideCSNDesktopTask\t, UserPreferencesHideChatterOnboardingSplash\t, UserPreferencesHideSecondChatterOnboardingSplash\t, UserPreferencesDisCommentAfterLikeEmail\t, UserPreferencesDisableLikeEmail\t, UserPreferencesSortFeedByComment\t, UserPreferencesDisableMessageEmail\t, UserPreferencesDisableBookmarkEmail\t, UserPreferencesDisableSharePostEmail\t, UserPreferencesEnableAutoSubForFeeds\t, UserPreferencesDisableFileShareNotificationsForApi\t, UserPreferencesShowTitleToExternalUsers\t, UserPreferencesShowManagerToExternalUsers\t, UserPreferencesShowEmailToExternalUsers\t, UserPreferencesShowWorkPhoneToExternalUsers\t, UserPreferencesShowMobilePhoneToExternalUsers\t, UserPreferencesShowFaxToExternalUsers\t, UserPreferencesShowStreetAddressToExternalUsers\t, UserPreferencesShowCityToExternalUsers\t, UserPreferencesShowStateToExternalUsers\t, UserPreferencesShowPostalCodeToExternalUsers\t, UserPreferencesShowCountryToExternalUsers\t, UserPreferencesShowProfilePicToGuestUsers\t, UserPreferencesShowTitleToGuestUsers\t, UserPreferencesShowCityToGuestUsers\t, UserPreferencesShowStateToGuestUsers\t, UserPreferencesShowPostalCodeToGuestUsers\t, UserPreferencesShowCountryToGuestUsers\t, UserPreferencesHideInvoicesRedirectConfirmation\t, UserPreferencesHideStatementsRedirectConfirmation\t, UserPreferencesHideS1BrowserUI\t, UserPreferencesDisableEndorsementEmail\t, UserPreferencesPathAssistantCollapsed\t, UserPreferencesCacheDiagnostics\t, UserPreferencesShowEmailToGuestUsers\t, UserPreferencesShowManagerToGuestUsers\t, UserPreferencesShowWorkPhoneToGuestUsers\t, UserPreferencesShowMobilePhoneToGuestUsers\t, UserPreferencesShowFaxToGuestUsers\t, UserPreferencesShowStreetAddressToGuestUsers\t, UserPreferencesLightningExperiencePreferred\t, UserPreferencesPreviewLightning\t, UserPreferencesHideEndUserOnboardingAssistantModal\t, UserPreferencesHideLightningMigrationModal\t, UserPreferencesHideSfxWelcomeMat\t, UserPreferencesHideBiggerPhotoCallout\t, UserPreferencesGlobalNavBarWTShown\t, UserPreferencesGlobalNavGridMenuWTShown\t, UserPreferencesCreateLEXAppsWTShown\t, UserPreferencesFavoritesWTShown\t, UserPreferencesRecordHomeSectionCollapseWTShown\t, UserPreferencesRecordHomeReservedWTShown\t, UserPreferencesFavoritesShowTopFavorites\t, UserPreferencesExcludeMailAppAttachments\t, UserPreferencesSuppressTaskSFXReminders\t, UserPreferencesSuppressEventSFXReminders\t, UserPreferencesPreviewCustomTheme\t, UserPreferencesHasCelebrationBadge\t, UserPreferencesUserDebugModePref\t, UserPreferencesSRHOverrideActivities\t, UserPreferencesNewLightningReportRunPageEnabled\t, UserPreferencesNativeEmailClient\t, UserPreferencesHideBrowseProductRedirectConfirmation\t, ContactId\t, AccountId\t, CallCenterId\t, Extension\t, FederationIdentifier\t, AboutMe\t, FullPhotoUrl\t, SmallPhotoUrl\t, IsExtIndicatorVisible\t, OutOfOfficeMessage\t, MediumPhotoUrl\t, DigestFrequency\t, DefaultGroupNotificationFrequency\t, LastViewedDate\t, LastReferencedDate\t, BannerPhotoUrl\t, SmallBannerPhotoUrl\t, MediumBannerPhotoUrl\t, IsProfilePhotoActive\t, IndividualId\t, dfsle__CanManageAccount__c\t, dfsle__Provisioned__c\t, dfsle__Status__c\t, dfsle__Username__c\t"
		},
		"NewSFRefresh_Hourly_properties_SF new User Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"TR_Membership_Daily_properties_SF EventSponsor Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "EventSponsor__c"
		},
		"TR_Membership_Daily_properties_SF EventSponsor Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "EventSponsor__c"
		},
		"TR_Membership_Daily_properties_SF EventSponsor Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, OwnerId, IsDeleted, Name, CurrencyIsoCode, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, Event__c, SponsorImage__c, Sponsor__c, Company_Website__c\n"
		},
		"TR_Membership_Daily_properties_SF EventSponsor Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforce"
		},
		"TR_Membership_Daily_properties_SF CampaignRefresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "Campaign"
		},
		"TR_Membership_Daily_properties_SF CampaignRefresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "Campaign"
		},
		"TR_Membership_Daily_properties_SF CampaignRefresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "\nId, IsDeleted, Name, ParentId, Type, Status, StartDate, EndDate, CurrencyIsoCode, ExpectedRevenue, BudgetedCost, ActualCost, ExpectedResponse, NumberSent, IsActive, Description, NumberOfLeads, NumberOfConvertedLeads, NumberOfContacts, NumberOfResponses, NumberOfOpportunities, NumberOfWonOpportunities, AmountAllOpportunities, AmountWonOpportunities, HierarchyNumberOfLeads, HierarchyNumberOfConvertedLeads, HierarchyNumberOfContacts, HierarchyNumberOfResponses, HierarchyNumberOfOpportunities, HierarchyNumberOfWonOpportunities, HierarchyAmountAllOpportunities, HierarchyAmountWonOpportunities, HierarchyNumberSent, HierarchyExpectedRevenue, HierarchyBudgetedCost, HierarchyActualCost, OwnerId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, LastViewedDate, LastReferencedDate, CampaignMemberRecordTypeId, ActivationDate__c, AvailableCapacity__c, AvailableWaitlistCapacity__c, BatchRunDate__c, BranchEmail__c, BranchName__c, BudgetApproved__c, BusinessCaseApproved__c, CPDEvent__c, CPDHours__c, CancellationReason__c, Capacity_Filled__c, Capacity__c, CongaACSLogoURL1__c, CongaACSLogoURL__c, CongaFacebookURL__c, CongaLocationIconURL__c, CongaTimeIconURL__c, CongaTwitterURL__c, Conga_LinkedIn_URL__c, DeliveryMethod__c, DetailedDescription__c, DoNotPublishOnline__c, DoNotRegisterOnline__c, EndDateAndTime__c, EventBudget__c, EventCity__c, EventLocationURL__c, EventOwner__c, EventState__c, EventType__c, EventVenue__c, Event_Label_ID__c, Event_Label__c, Event_Location_Conga_URL__c, ExternalURL__c, ICSLocationForCalendar__c, ICS_File_ID__c, Level_Room__c, Location_del__c, MemberOnlyEvent__c, NationalEventOfSignificance__c, PortalImageId__c, Postcode__c, PostponeReason__c, RegistrationEndDateAndTime__c, Related_ACS_Office__c, SFIASkillLevel__c, SFIA_Category__c, SFIA_Skill__c, SFIA_Subcategory__c, StartDateAndTime__c, StreetAddress__c, TermsAndConditions__c, TitleInPortal__c, Topics__c, WaitlistCapacity__c, Waitlist_Capacity_Filled__c, ActualTotalEventExpenditure__c, ActualTotalEventIncome__c, AttendeeCount__c, BookingAdditionsAvailableCount__c GroupBookingAvailableSum__c, No_of_People_Attended__c, No_of_People_Cancelled__c, No_of_People_No_Show__c, No_of_People_Registered__c, No_of_People_in_Wait_List__c, NumberOfWaitlisted__c, Country__c, NonMemberProduct__c, MemeberProduct__c, Timezone__c, EventImage__c, Campaign18DigitsId__c, AttendeesinclGroupBookings__c, EventEndTime__c, EventStartTime__c, EventTimezoneId__c, Objective__c, XENEventId__c, Detailed_Description_Text_Only__c, Dimension1_List__c, Dimension2_List__c, Dimension3_List__c, AutoCloseRegistration__c, ROI_Account__c, ROI_Amount__c, Total_Price__c, Virtual__c, Virtual_Event_Reminder_Send_Date__c, Event_Web_URL__c, Event_Web_URL_Display__c, Event_States__c, Excluded_Billing_Grades__c, Invoice_Payment_Expiry__c, Max_Tickets_Per_Account__c, Registration_End_Date_is_Reached__c, Invoice_Payment_Expiry_Formatted__c, Label_Outfit_Document_Id__c, Event_Survey_Link__c, Event_Presentation_Link__c, Micro_Tribe__c, Primary_Competency_Framework__c, Primary_Competency_Full_Label__c, Primary_Competency_Label__c, Primary_Competency_Updated_from_Child__c, Primary_Competency__c, Micro_Tribe_Label__c, Virtual_Event_Time_Zone__c\n"
		},
		"TR_Membership_Daily_properties_SF CampaignRefresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforce"
		},
		"TR_Membership_Daily_properties_SF CampaignMember Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "CampaignMember"
		},
		"TR_Membership_Daily_properties_SF CampaignMember Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "CampaignMember"
		},
		"TR_Membership_Daily_properties_SF CampaignMember Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, CampaignId, LeadId, ContactId, Status, HasResponded, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, FirstRespondedDate, CurrencyIsoCode, Salutation, Name, FirstName, LastName, Title, Street, City, State, PostalCode, Country, Email, Phone, Fax, MobilePhone, Description, DoNotCall, HasOptedOutOfEmail, HasOptedOutOfFax, LeadSource, CompanyOrAccount, Type, LeadOrContactId, LeadOrContactOwnerId, ArrivedLate__c, Attendee_Title__c, BookingAddition__c, CampaignMemberAccountId__c, CancellationReasonReference__c, Comments__c, CongaEventConfirmationEmail__c, Conga_Event_Confirmation_Email_RM__c, ConvertedEventOwner__c, ConvertedStartDate__c, DateTimeWhenMemberAttended__c, DietaryRequirements_del__c, DoNotSendAutoEmails__c, Employer__c, EventOwnerEmail__c, EventPricing__c, EventRegistrationNumber__c, FirstReminderEmailSent__c, Gender__c, GroupBooking__c, InGroupBooking__c, LeftEarly__c, MemberGrade__c, Member__c, MemeberContactName__c, PPP__c, Paid__c, PostponeReasonReference__c, Primary_Account_Type__c, QRCodeToTrackEventsAttendance__c, RefundRequired__c, ReminderEmailTemplate__c, SendCancellationEmail__c, SendPostponementEmail__c, Table__c, VIP__c, WalkIn__c, CampaignMemberContactEmail__c, AmountPaid__c, Account__c, EventAddressLine1__c, EventAddressLine2__c, EventStartDateFormatted__c, EventStartDate__c, EventStartTime__c, EventVenue__c, QR_Code_Link__c, SendRegoConfirmationEmail__c, AttendeeCount__c, CurrentEmployer__c, CurrentPositionTitle__c, MembershipNumber__c, Event_Member_18_Digits_Id__c, AttendeeFirstName__c, Price__c, ROI_Account__c, PreferredFirstName__c, ROI_Amount__c, ROI_Payment__c, CPD_Hours_Added__c, Not_Attending__c, ACS_Event_Member_Guest__c, Booker_Name__c, Campaign_Member_Id__c, Guest__c, Payment_Method__c, Is_Free__c, Ticket_Type__c, Created_By_Date_Time__c\n\n"
		},
		"TR_Membership_Daily_properties_SF CampaignMember Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforce"
		},
		"TR_SF_Refresh_properties_SF Assessment Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "assessment__c"
		},
		"TR_SF_Refresh_properties_SF Assessment Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "assessment"
		},
		"TR_SF_Refresh_properties_SF Assessment Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "  Id ,OwnerId ,IsDeleted ,Name ,CurrencyIsoCode ,RecordTypeId ,CreatedDate ,CreatedById ,LastModifiedDate ,LastModifiedById ,SystemModstamp ,LastActivityDate ,LastViewedDate ,LastReferencedDate ,ACSMembershipNumberFormula__c ,ANZSCOCode__c ,ActivationDate__c ,Active__c ,ApplicantFirstName__c ,ApplicantInterview__c ,ApplicantName__c ,ApplicantPaid__c ,ApplicantState__c ,ApplicantSubmitEmailSent__c ,Applicant_Last_Name__c ,Applicant_Name_Formula__c ,Applicant_Title__c ,Applicant_eligible_for_Senior_Membership__c ,ApplicationStatusIndicator__c ,ApplicationSubtype__c ,ApplicationType__c ,AssessmentClosedDate__c ,AssessmentComments__c ,AssessmentDate__c ,AssessmentDueDate__c ,AssessmentPathway__c ,AssessmentResult__c ,Assessment_18_Digits_ID__c ,Assessment_Report_ID__c ,Assessment_Template_ID__c ,Assessor1ConflictOfInterest__c ,Assessor2ConflictofInterest__c ,AssessorReviewComments__c ,Assessor_Appeal_Comments__c ,Assessor__c ,AvgAssessorTimeDays__c ,BECEndorsementReason__c ,BECEndorsement__c ,BFCChair__c ,BalanceDue__c ,BirthCertificateOrPassportApproved__c ,BoxFolderId__c ,BranchManager__c ,CBOKNotes__c ,CPD_Hours_Percentage_Complete__c ,CPD_Hours_Required__c ,CPD_Run_Rate_Variance__c ,CPD_Target_Run_Rate__c ,CPPathwayScenario__c ,CPPathway__c ,CTPathwayScenario__c ,CTPathway__c ,CV_Notes__c ,Calculated__c ,CanUnsuitableBeRectified__c ,CaseAge__c ,CaseManager__c ,Certificate_Renewed__c ,CertificationExpiryDate__c ,CertificationPeriod__c ,CertificationStatus__c ,Certification_Type__c ,Change_Management__c ,Citation__c ,CommentsaddedtoUnsuccessfulEmail__c ,CompanyorUniversity__c ,CompletedApplicationReceivedDate__c ,Conga_Assessment_Report_Download__c ,Conga_Next_Action_Merge__c ,Contact_Email__c ,Contact__c ,Continuing__c ,ContributionRecognisedElsewhere__c ,ContributionWorthyofRecognition__c ,CountryOfBirth__c ,CountryOfResidence__c ,CreateBoxFolder__c ,CreditCardonFile__c ,CurrentUserCaseManager__c ,Current_Certification__c ,DIACComments__c ,Data_Information_Management__c ,Data_Migrated_from_XEN__c ,DateOfBirth__c ,DateOfKnowledgeMet__c ,Days_Remaining__c ,Days_Since_Submission_Date__c ,DeadlineDate__c ,DefaultEmailAddress__c ,DefaultMailAddressCode__c ,DefaultMailAddressID__c ,DefaultMailAddressStreet__c ,DefaultMailCity__c ,DefaultMailCountry__c ,DefaultMailPostalCode__c ,DefaultMailState__c ,Education__c ,Email_Address__c ,Email_Template__c ,Employed_in_ICT_school_research_facility__c ,End_Date__c ,ErrorsFoundCount__c ,Ethics__c ,ExcelledInWhichRoleArea__c ,Experience__c ,FinalReview__c ,FinalisedDate__c ,FollowUpDueDate__c ,Former_ANZSCO__c ,Former_Application_Sub_Type__c ,Former_Application_Type__c ,Former_Assessor_Name__c ,FromAssessorDate__c ,FromAssessorNotEdited__c ,Hardware_Software_Fundamentals__c ,HasCMSIntegrationCompleted__c ,Has_10yrs_of_professional_ICT_experience__c ,Highest_level_of_qualification_achieved__c ,Holds_Masters_by_Research_PhD__c ,HonoursandAwards__c ,Human_computer_Interaction__c ,ICTManagement__c ,ICTProblemSolving__c ,ICTProfessionalKnowledge__c ,ICT_Problem_Solving__c ,IT_Project_Management__c ,IT_governance__c ,ImpactOnITFieldManagement__c ,InPreparation15DayReminderDate__c ,InPreparation15DayReminder__c ,InPreparation25DayReminderDate__c ,InPreparation25DayReminder__c ,Internal_Notes__c ,Interpersonal_Communication__c ,IsICTKnowledgeAcceptable__c ,Keep_Certification_Status_Private__c ,LapsedComments__c ,LapsedFollowUp__c ,LastModifiedUserProfileName__c ,MCAssessmentOutcome__c ,Manual_Data_Entry__c, MeetCBOKRequirements__c, MembershipExpiry__c, Mobile__c, NFCAssessmentOutcome__c, Nationality__c, Networking__c, Next_Action_Due_Date__c, Next_Action__c, NominationSecondedByDate__c, NominationSecondedByEmail__c, NominationSecondedByPhone__c, NominationSecondedBy__c, NominatorACSMembershipNumber__c, NominatorEmail__c, NominatorName__c, NominatorPhoneNumber__c, Nominator_Declaration_Date__c, NonDecisionReady__c, OriginalApplicationReceived__c, Original_Received_Date__c, Overdrive_Target__c, Passport_Number__c, Password__c, Payment_Recieved__c, PeriodofMajorContribution__c, PhoneNumber__c, PlagiarismDetected__c, Position_Title_1__c, Position_Title_2__c, Potential_RMD__c, Previous_Certification__c, PriorityReason__c, Priority__c, ProfessionalYearComplete__c, Professionalism__c, Programming__c, ProjectReportUpload__c, ProjectReportsAttachedAndAcceptable__c, PublicationsandPatents__c, QADate__c, QualityCheckComment__c, Quality_Check_Status__c, REFERENCE_TO_X_EN__c, RMDCalculationErrorMessages__c, RMDLogicUsed__c, RPLComments__c, Ready_for_Renewal__c, ReasonforAppeal__c, ReasonforReviewChangeofANZSCO__c, ReasonforReviewExperience__c, ReasonforReviewQualification__c, ReasonforReview__c, RectifyComment__c, ReferToDIAC__c, Referee_Company_1__c, Referee_Company_2__c, Referee_Email_1__c, Referee_Email_2__c, Referee_Name_1__c, Referee_Name_2__c, Referee_Phone_1__c, Referee_Phone_2__c, RelatedAssessment__c, RelatedCertification__c, RenewalProcessed__c, RequirementsMetDate__c, ResultLetterApproved__c, Result_Letter_Template__c, ReviewOrAppealEmailTemplate__c, ReviewOrAppealTemplateID__c, Review_Unsuitable__c, SFIA_Specialism__c, Security_Management__c, Security_Policy__c, Service_Management__c, SkillsAgent__c, Societal_Issues_Legal_issues_Privacy__c, Status__c, SubmissionDate__c, Suggested_Pathway__c, Suggested_Type__c, Systems_Acquisition__c, Systems_Development__c, Target_CPD_Hours__c, Teamwork_Concepts_and_Issues__c, TechnologyBuilding__c, TechnologyResources__c, TotalAcceptedExperienceYM__c, TotalCPDHours__c, Total_CPD_Hours_and_Minutes__c, Total_CPD_Minutes_Conversion__c, TypeofCertificationAssessment__c, UnsuccessfulNominationCommunication__c, WhatMakesContributionDistinguished__c, WithAssessorDate__c, X5YearsProfessionalICTExpAtSFIA6__c, Years_in_SFIA_Specialism__c, Years_of_experience_in_ICT__c, No_of_Qualification_Accreditation__c, TotalAcceptedExperienceDays__c, TranscriptRollupQualifications__c, Certification_Lodged_with_Membership__c, ApplicantAttachmentsBoxFolderId__c, AssessorAttachmentsBoxFolderId__c, CmsApplicantBoxDocumentDetails__c, CmsBoxApplicantFileIdsToMove__c, ResultLetterBoxFolderId__c, MonthActivated__c, ExpriyMonth__c, ApplicationCreatedDateInXenAndSF__c, Xen_Application_ID__c, PrioriyInformation__c, Certificate_Specialism__c, RecommendedANZSCO__c, RecommendedApplicationType__c, LinkedApplication__c, CaseClosed__c, ApplicantDOB__c, No_RPL_Document__c, RMDFormatted__c, DateofKnowledgeMetFormatted__c, BypassValidation__c, CurrentPreviousWeekFinalisedDate__c, CurrentPreviousMonthFinalisedDate__c, Related_Certification_Status__c, Outfit_Assessment_Last_Update__c, Outfit_Last_Letter_Template__c, Outfit_Letter_Content__c, Email_Correspondence_Sent__c, Certification_Expiry_Date_As_Text__c, Days_Since_Activation__c, Membership_Status__c, Pendula_Test__c, PlagScan_Doc_Id__c, Plagiarism_Completion_Date__c, Outfit_Report_Document_Id__c, Outfit_Report_Document_Name__c, Plagiarism_Error__c, Plagiarism_Flag__c, Plagiarism_Level__c, Plagiarism_Score__c, Plagiarism_Status__c, Plagiarism_Submission_Date__c, View_in_PlagScan__c, Request_Additional_Documents__c, Unsuitable_Outcome__c, ProductID__c, GTI_Application__c, Certification_Category__c"
		},
		"TR_SF_Refresh_properties_SF Contract Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "Contract"
		},
		"TR_SF_Refresh_properties_SF Contract Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "Contract"
		},
		"TR_SF_Refresh_properties_SF Contract Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "\nId\n,AccountId\n,CurrencyIsoCode\n,OwnerExpirationNotice\n,StartDate\n,EndDate,\nBillingStreet,\nBillingCity,\nBillingState,\nBillingPostalCode,\nBillingCountry,\nBillingLatitude,\nBillingLongitude,\nBillingGeocodeAccuracy,\nShippingStreet,\nShippingCity,\nShippingState,\nShippingPostalCode,\nShippingCountry,\nShippingLatitude,\nShippingLongitude,\nShippingGeocodeAccuracy,\nContractTerm,\nOwnerId,\nStatus,\nCompanySignedId,\nCompanySignedDate,\nCustomerSignedId,\nCustomerSignedTitle,\nCustomerSignedDate,\nSpecialTerms,\nActivatedById,\nActivatedDate,\nStatusCode,\nDescription,\nRecordTypeId,\nName,\nIsDeleted,\nContractNumber,\nLastApprovedDate,\nCreatedDate,\nCreatedById,\nLastModifiedDate,\nLastModifiedById,\nSystemModstamp,\nLastActivityDate,\nLastViewedDate,\nLastReferencedDate,\nBatchRunDate__c,\nBulkUploadedPPPMember__c,\nCreated_by_PPP_Bulk_Upload__c,\nCurrentMembership__c,\nCurrentMonthYear__c,\nData_Migrated_from_XEN__c,\nDaysSinceStartDate__c,\nExpiryCaseCreated__c,\nGrade__c,\nIndividualMovedtoPPP__c,\nLocation__c,\nLodgedWithCertificationApplication__c,\nMOUType__c,\nManual_Data_Entry__c,\nMemberBillingGrade__c,\nMembershipExpiry__c,\nMembershipID__c,\nMembership_18_Digits_ID__c,\nMembership_End_Date_12months__c,\nMembership_End_Date_1Day__c,\nMembership_End_Date_3months__c,\nMembership_Start_Date_Was_Null__c,\nNew__c,\nNon_Financed_Flag__c,\nPPPKeyContactEmail__c,\nPPPKeyContactName__c,\nPPPMOU1Approved__c,\nPPPName__c,\nPPP__c,\nPreferredName__c,\nPreviousMembership__c,\nProgram__c,\nRelatedAccountEmail__c,\nRenewalProcessed__c,\nSister_Society_Member_Grade__c,\nSister_Society_Membership_Expiry_Date__c,\nSister_Society_Membership_Number__c,\nSister_Society_Name__c,\nStartDatePlus12Months__c,\nSubscriptionNoticeSent__c,\nUpdatedViaFlow__c,\nWelcomeEmailSent__c,\nZeroCostMembership__c,\nTermination_Reason__c,\nGrading_Date__c,\nDate_Resigned__c,\nPPP_Account_Name__c,\nBulk_PPP_Renewed_as_Active__c,\nRe_Order_Cards__c,\nRe_Order_Cards_Date__c,\nRe_Order_Last_week__c,\nSkillsMembershipAgent__c,\nPY_Second_Year_Email_Sent__c,\nMembership_Expiry_Discrepancy__c,\nDetach_from_PPP__c,\nMembership_Expiry_Within_30_days__c,\nSkillsMembershipApplicationOrigin__c,\nSkillsMembershipDuplicateAccountUser__c,\nSkillsMembershipOptOut__c,\nZipline_Mobile__c,\nApproval_URL_Link__c,\nApproval_URL__c,\nCertification_Level__c,\nDetached__c,\nFor_Renewal__c,\nLast_Login_Date__c,\nMOU_Type__c,\nProduct_Selected__c,\nPendula_Test__c,\nMembership_Expiry_Date_As_Text__c,\nCOVID_19__c"
		},
		"TR_SF_Refresh_properties_SF Assessment History Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "Assessment__history"
		},
		"TR_SF_Refresh_properties_SF Assessment History Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "assessment__history"
		},
		"TR_SF_Refresh_properties_SF Assessment History Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, ParentId, CreatedById, CreatedDate, Field, DataType, OldValue, NewValue"
		},
		"TR_SF_Refresh_properties_SF Assessment History Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforce"
		},
		"TR_SF_Refresh_properties_SF AccreditedCourse__c Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "AccreditedCourse__c"
		},
		"TR_SF_Refresh_properties_SF AccreditedCourse__c Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "AccreditedCourse__c"
		},
		"TR_SF_Refresh_properties_SF AccreditedCourse__c Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, OwnerId, IsDeleted, Name, CurrencyIsoCode, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, AccreditationAssessment__c, Campus__c, Course_ID__c, Course__c, DisplayonWebsite__c, ExpiryDate__c, Notes__c, Outcomes__c, Start_Date__c, SEOUL_Accord__c, Engineers_Australia__c, Specialism__c, Conditions__c, Conditions_Due_Date__c, Conditions_Notes__c, Provisional__c, Provisional_Due_Date__c, Provisional_Notes__c\n"
		},
		"TR_SF_Refresh_properties_SF AccreditedCourse__c Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforce"
		},
		"TR_SF_Refresh_properties_SF AccreditedCourse__c Refresh_parameters_brpExtractFrom": {
			"type": "string",
			"defaultValue": "1900-12-31 00:00:00"
		},
		"TR_SF_Refresh_properties_SF AccreditedCourse__c Refresh_parameters_brpExtractTo": {
			"type": "string",
			"defaultValue": "1900-12-31 00:00:00"
		},
		"TR_SF_Refresh_properties_SF Accreditation Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "Accreditation__c"
		},
		"TR_SF_Refresh_properties_SF Accreditation Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "Accreditation__c"
		},
		"TR_SF_Refresh_properties_SF Accreditation Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": " Id, OwnerId, IsDeleted, Name, CurrencyIsoCode, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, LastViewedDate, LastReferencedDate, AccommodationBooked__c, AccreditationManager__c, ApplicationType__c, DueDate__c, ExtraMembers__c, FlightsBooked__c, HeadofSchoolEmail__c, HeadofSchoolPhone__c, HeadofSchool__c, InvoiceSent__c, Location__c, LogisticNotes__c, NextActionDueDate__c, NextAction__c, Notes__c, OtherApplicationInformation__c, OtherVisitManager__c, PanelAppointed__c, PanelChair__c, PanelMembers__c, Postcode__c, PrimaryContactEmail__c, PrimaryContactName__c, PrimaryContactPhone__c, RenewDate__c, RenewYear__c, School__c, State__c, StatusIndicator__c, Status__c, Street__c, Suburb__c, UniversityName__c, VisitDate12Weeks__c, VisitDate8weeks__c, VisitDate9weeks__c, VisitDate__c, VisitEmailSent__c, VisitLocation__c, VisitManager__c, Visit_Date_End__c, X2YearsBeforeRenewal__c, UniversityId__c, UniversityCountry__c, Renew_Date_Override__c\n "
		},
		"TR_SF_Refresh_properties_SF Accreditation Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforce"
		},
		"TR_SF_Refresh_properties_SF Accreditation Refresh_parameters_brpExtractFrom": {
			"type": "string",
			"defaultValue": "1900-12-31 00:00:00"
		},
		"TR_SF_Refresh_properties_SF Accreditation Refresh_parameters_brpExtractTo": {
			"type": "string",
			"defaultValue": "1900-12-31 00:00:00"
		},
		"TR_SF_Refresh_properties_SF Qualification History Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "Qualification__c"
		},
		"TR_SF_Refresh_properties_SF Qualification History Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "Qualification__c"
		},
		"TR_SF_Refresh_properties_SF Qualification History Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "\nId,\nIsDeleted,\nName,\nCurrencyIsoCode,\nRecordTypeId,\nCreatedDate,\nCreatedById,\nLastModifiedDate,\nLastModifiedById,\nSystemModstamp,\nLastActivityDate,\nAssessment__c,\nANZSCO_Code__c,\nAQFComparability__c,\nApplicant_Name__c,\nAssessorNotes__c,\nAttachedTranscriptAssessor__c,\nAustralianQualification__c,\nCEPReference__c,\nCalculationErrorMessages__c,\nCloselyRelatedICTUnitCountMajor__c,\nCloselyRelatedICTUnitCountMinor__c,\nCloselyRelated__c,\nCoreUnitsMajor__c,\nCoreUnitsMinor__c,\nCountString__c,\nCountry__c,\nCourseAccredited__c,\nCourse__c,\nData_Migrated_from_XEN__c,\nDateAwarded__c,\nDateOfCommencement__c,\nDateOfCompletion__c,\nICTContent__c,\nICTUnitCountMajor__c,\nICTUnitCountMinor__c,\nInstitution__c,\nLastCountsCalculatedOn__c,\nNormalDurationOfCourse__c,\nNotACSCourse__c,\nOASCalculator__c,\nPotential_RMD_2_or_5_yrs__c,\nPotential_RMD_4_of_6_yrs__c,\nQual_sited_at_Interview__c,\nQualificationCategory__c,\nTimeTaken__c,\nTotalNumberOfUnitsCRPoints__c,\nTranscriptRollup__c,\nXEN_Qualification_Name__c,\nApplicantAttachmentsBoxFolderId__c,\nAssessorAttachmentsBoxFolderId__c,\nBoxFolderId__c,\nCmsApplicantBoxDocumentDetails__c,\nCmsBoxApplicantFileIdsToMove__c,\nCreateBoxFolder__c,\nUniqueRecordIdentifier__c,\nFullOrPartTime__c,\nRecordLocked__c,\nXenId_Qualification__c,\nResetUnitCounts__c,\nCalculation_Duration__c,\nBypassValidation__c,\nQualification_18_Digits_ID__c,\nApplicantName__c"
		},
		"TR_SF_Refresh_properties_SF Qualification History Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforce"
		},
		"TR_SF_Refresh_properties_SF task Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "task"
		},
		"TR_SF_Refresh_properties_SF task Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "task"
		},
		"TR_SF_Refresh_properties_SF task Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id ,RecordTypeId ,WhoId ,WhatId ,Subject ,ActivityDate ,Status ,Priority ,IsHighPriority ,OwnerId ,Description ,CurrencyIsoCode ,Type ,IsDeleted ,AccountId ,IsClosed ,CreatedDate ,CreatedById ,LastModifiedDate ,LastModifiedById ,SystemModstamp ,IsArchived ,IsVisibleInSelfService ,CallDurationInSeconds ,CallType ,CallDisposition ,CallObject ,ReminderDateTime ,IsReminderSet ,RecurrenceActivityId ,IsRecurrence ,RecurrenceStartDateOnly ,RecurrenceEndDateOnly ,RecurrenceTimeZoneSidKey ,RecurrenceType ,RecurrenceInterval ,RecurrenceDayOfWeekMask ,RecurrenceDayOfMonth ,RecurrenceInstance ,RecurrenceMonthOfYear ,RecurrenceRegeneratedType ,TaskSubtype ,CompletedDateTime ,Data_Migrated_from_XEN__c ,XEN_Activity_Type__c ,XenId_Activities__c ,WFD_Project_Outputs_Activities__c ,Facebook_Message__c ,Interaction_Type__c ,Pendula__Message__c"
		},
		"TR_SF_Refresh_properties_SF task Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "dbo"
		},
		"TR_SF_Refresh_properties_SF OpportunityLineItem Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "OpportunityLineItem"
		},
		"TR_SF_Refresh_properties_SF OpportunityLineItem Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "OpportunityLineItem"
		},
		"TR_SF_Refresh_properties_SF OpportunityLineItem Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id ,OpportunityId ,SortOrder ,PricebookEntryId ,Product2Id ,ProductCode ,Name ,CurrencyIsoCode ,Quantity ,Discount ,Subtotal ,TotalPrice, UnitPrice, ListPrice, ServiceDate, HasRevenueSchedule, HasQuantitySchedule, Description, HasSchedule, CanUseQuantitySchedule, CanUseRevenueSchedule, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, IsDeleted, LastViewedDate, LastReferencedDate, Assessment__c, BalanceDue__c, Course__c, Data_Migrated_from_XEN__c, EventPricing__c, Event__c, GST__c, Income_Schedule_Start_Date__c, Membership__c, OpportunityNumber__c, Optional__c, Program__c, SponsorshipFutureDate__c, Tax_Code_ID__c, Total_Price_GST__c, Total_Price_Incl_GST__c, Opportunity_Stage__c, Sales_Price_Excl_GST__c, Sales_Price_Override__c, Total_Price_Excl_GST__c, Opportunity_Line_Item_ID__c, Refund_Amount_Excl_GST__c, XenId_OpportunityProduct__c, Accreditation__c, ProductName__c, Membership_Id_18_Digits__c, MembershipBillingGrade__c, AssessmentResult__c, AssessmentStatus__c, AssessmentSubmissionDate__c, AssessmentFinalisedDate__c, AssessmentAppTypeSubType__c, AssessmentApplicantName__c, AssessmentRecordType__c, Opportunity_Related_Program__c, Add_to_FF_Invoice__c, Billing_Grade__c, End_Date__c, Exempt_From_WFD_Validations__c, Is_Closed_Won__c, Product_Family_Value__c, Product_Family__c, Project_Deliverable__c, Project__c, ROI_Budget_Calculation__c, Refund_Amount__c, Tax_Rate__c, Has_Refund_Amount__c, Event_Name__c, Disable_Validation__c"
		},
		"TR_SF_Refresh_properties_SF OpportunityLineItem Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforce"
		},
		"TR_SF_Refresh_properties_SF AccountHistoryCstm Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "Account_History__c"
		},
		"TR_SF_Refresh_properties_SF AccountHistoryCstm Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "AccountHistory__c"
		},
		"TR_SF_Refresh_properties_SF AccountHistoryCstm Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, Name, CurrencyIsoCode, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, Member_Account__c, Edit_Date__c, Modified_Field_Name__c, New_Value__c, Old_Value__c, User__c"
		},
		"TR_SF_Refresh_properties_SF AccountHistoryCstm Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforce"
		},
		"TR_SF_Refresh_properties_SF AccountHistoryStd Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "AccountHistory"
		},
		"TR_SF_Refresh_properties_SF AccountHistoryStd Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "AccountHistory_s"
		},
		"TR_SF_Refresh_properties_SF AccountHistoryStd Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id ,IsDeleted ,AccountId ,CreatedById ,CreatedDate ,Field ,DataType ,OldValue, NewValue"
		},
		"TR_SF_Refresh_properties_SF AccountHistoryStd Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforce"
		},
		"TR_SF_Refresh_properties_SF Account Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "Account"
		},
		"TR_SF_Refresh_properties_SF Account Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "Account"
		},
		"TR_SF_Refresh_properties_SF Account Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id ,IsDeleted ,MasterRecordId ,Name ,Type ,RecordTypeId ,ParentId ,BillingStreet ,BillingCity ,BillingState ,BillingPostalCode ,BillingCountry ,BillingLatitude ,BillingLongitude ,BillingGeocodeAccuracy ,ShippingStreet ,ShippingCity ,ShippingState ,ShippingPostalCode ,ShippingCountry ,ShippingLatitude ,ShippingLongitude ,ShippingGeocodeAccuracy ,Phone ,Fax ,AccountNumber ,Website ,PhotoUrl ,Sic ,Industry ,AnnualRevenue ,NumberOfEmployees ,Ownership ,TickerSymbol ,Description ,Rating ,Site ,CurrencyIsoCode ,OwnerId ,CreatedDate ,CreatedById ,LastModifiedDate ,LastModifiedById ,SystemModstamp ,LastActivityDate ,LastViewedDate ,LastReferencedDate ,IsCustomerPortal ,Jigsaw ,JigsawCompanyId ,AccountSource ,SicDesc ,ffbf__AccountParticulars__c ,ffbf__BankBIC__c ,ffbf__PaymentCode__c ,ffbf__PaymentCountryISO__c ,ffbf__PaymentPriority__c ,ffbf__PaymentRoutingMethod__c ,Purchase_Order_Contact__c ,Service_Category__c ,ABN__c ,ANZSCOCode__c ,AccountManager__c ,AccountType__c ,Account_18_Digits_ID__c ,Account_Support__c ,Active_Certification_ID__c ,AdditionalAccountType__c ,AllergyOtherDietaryRequirements__c ,BillingContact__c ,BillingGradeChangeDate__c ,BillingGrade__c ,Billing_Grade1_Change_Date__c ,Billing_Grade2_Change_Date__c ,BoxFolderId__c ,Branch_Newsletters__c ,Branch_Overridden__c ,Branch__c ,Bulk_Upload_PPP_ID__c ,CertificationBadge__c ,CertificationLevel__c ,CommunityUser__c ,Completion_Points_Anzsco__c ,Completion_Points_Bio__c ,Completion_Points_DOB__c ,Completion_Points_Email__c ,Completion_Points_Employer_Name__c ,Completion_Points_Expertise__c ,Completion_Points_FL_Name__c ,Completion_Points_Gender__c ,Completion_Points_H_Address__c ,Completion_Points_Industry__c ,Completion_Points_Languages__c ,Completion_Points_Mobile__c ,Completion_Points_Phone__c ,Completion_Points_Position__c ,Completion_Points_Sec_Email__c ,Completion_Points_Skills__c ,Completion_Points_Specialism__c ,Completion_Points_Sub_Industry__c ,Completion_Points_W_Address__c ,CongaCTCPFormula__c ,CongaCTCPTemplateID__c ,CongaCitySys__c ,CongaCountrySys__c ,CongaMemberCertificate__c ,CongaPostCodeSys__c ,CongaStateSys__c ,CongaStreetSys__c ,ConsultantsDirectory__c ,CreateBoxFolders__c ,Create_User_and_Send_New_Password__c ,CreditCardLast4Digits__c ,CreditCardPaymentToken__c ,CreditCardType__c ,CurrentMembershipExpiry__c ,CurrentYearAmountSpent__c ,Data_Migrated_from_XEN__c ,DateOfBirthText__c ,DateOfBirth__c ,Default_Address__c ,DietaryRequirements__c ,Email__c ,Employer_Name__c ,ExcludeCommercialEmail__c ,ExcludeSMSCommunication__c ,ExcludeThirdPartyMailings__c ,Expertise__c ,Face_to_Face_Interview__c ,Facebook__c ,Former_Billing_Grade1__c ,Former_Billing_Grade2__c ,Gender__c ,Geography__c ,ITWorkforceSize__c ,IndustrySubtype__c ,Membership_Opt_Out__c ,IsLead__c ,KeepCertificationStatusPrivate__c ,KeyContactEmail__c ,KeyContactName__c ,Key_ICT_Skills__c ,Languages__c ,LastContactDate__c ,LinkedIn__c ,LogoImageId__c ,MARARegistrationCode__c ,Manual_Data_Entry__c ,MemberGrade__c ,Member_Role__c ,MembershipDocumentsBoxFolderId__c ,MembershipNumberAutoGen__c ,MembershipNumber__c ,Membership_Status__c ,MigrationAgentPrimaryBusinessName__c ,Mobile__c ,NationalSignificance__c ,New_Membership_Signup_created__c ,PPP__c ,Partial_Copy_of_Person_Bio__c ,PaymentAutoRenew__c ,PaymentFrequency__c ,PaymentMethod__c ,PersonAccountDoNotCall__c ,PersonAccountEmailOptOut__c ,PersonAccountFirstName__c ,PersonAccountJoinedDate__c ,PersonAccountLastName__c ,PersonAccountMiddleName__c ,PersonAccountPositionTitle__c ,PersonAccountPublish__c ,PersonAccountSecondaryEmail__c ,PersonAccountSuffix__c ,PersonBio__c ,PersonImageId__c ,PleaseNote__c ,PreferredContactMethod__c ,PreferredName__c ,ProductArticle__c ,ProfessionalDocumentsBoxFolderId__c ,Professional_Interest__c ,Profile_Completion_Rate__c ,Program_Account_for_Current_Membership__c ,ROIAvailableCurrentFY__c ,ROIAvailableNextFY__c ,ReinvestmentAmount__c ,ReinvestmentRemaining__c ,ReinvestmentSpent__c ,Sister_Society_Member__c ,SkillsAgentIDAssignment__c ,SkillsAgentID__c ,SkillsAgentStatus__c ,SpecialBillingExpiryDate__c ,Specialisms__c ,Title__c ,TotalWorkforceSize__c ,TradingName__c ,Twitter__c ,UENumber__c ,WebsiteRole__c ,WorkHistory__c ,Work_Phone__c ,XEN_User_Type__c ,XenDocumentsBoxFolderId__c ,XenEncryptedPassword__c ,XenId__c ,Skill_Record_Count__c ,Staff_ID__c ,GradingDate__c ,Branch_Newsletters_Change__c ,Credit_Card_Expiry_Date__c ,BPay_CRN__c ,CertificationExpiryDate__c ,Nov_Recurring_Email__c ,Post_Nominals__c ,JoinedLastWeek__c ,Name_With_First_Name_Suffix__c ,Valid_Until_End__c ,CMSJoinNowApplicationType__c ,CmsBoxMembershipFileIdsToMove__c ,CmsDirectDepositBoxDocumentDetails__c ,CmsDirectDepositBoxFileIdsToMove__c ,CmsICTBoxDocumentDetails__c ,CmsICTBoxFileIdsToMove__c ,CmsMembershipBoxDocumentDetails__c ,CmsProfessionBoxFileIdsToMove__c ,CountryOfEducation__c ,CreateUserRecordOnly__c ,DateOfCommencement__c ,DateOfExpectedCompletion__c ,NameOfInstitution__c ,NameOnCreditCard__c ,QualificationName__c ,RememberForFuturePayments__c ,EmployeeId__c ,Identified_for_Merge__c ,Member_Since__c ,JoinedThisMonth__c ,Enrolment_Status__c ,PY_Completion_Date__c ,Provider_Student_Number__c ,VETrack_Number__c ,AccountImage__c ,RecordSource__c ,PostNominalsForCP__c ,AccreditedUniversityFacultySchool__c ,Exclude_from_Email_Communication__c ,SkillsMembershipDuplicateAccount_User__c ,Information_Age__c ,UniqueId__c ,ACS_Newsletter__c ,ACS_Marketing_Communication__c ,SMS_Communications__c ,ThirdParty_Communications__c ,Create_Free_Skills_Membership__c ,SkillsAgentApplication__c ,Number_of_Certifications__c ,Password_Token_Expiry_Date__c ,Password_Token_Used__c ,Password_Token__c ,Days_Until_CC_Expiry__c ,Eligible_for_CC_Expiry_Reminder__c ,Outfit_Certificates_Last_Update__c ,Outfit_Membeship_Cert_Last_Update__c ,Disable_Validation__c ,Short_Name__c ,No_of_Programs_With_Active_Memberships__c ,Total_Active_ROI_Budget__c ,Total_ROI_Balance_Remaining__c ,Total_ROI_Spend__c ,fferpcore__ExemptionCertificate__c ,fferpcore__IsBillingAddressValidated__c ,fferpcore__IsShippingAddressValidated__c ,fferpcore__OutputVatCode__c ,fferpcore__SalesTaxStatus__c ,fferpcore__TaxCode1__c ,fferpcore__TaxCode2__c ,fferpcore__TaxCode3__c ,fferpcore__TaxCountryCode__c ,fferpcore__ValidatedBillingCity__c ,fferpcore__ValidatedBillingCountry__c ,fferpcore__ValidatedBillingPostalCode__c ,fferpcore__ValidatedBillingState__c ,fferpcore__ValidatedBillingStreet__c ,fferpcore__ValidatedShippingCity__c ,fferpcore__ValidatedShippingCountry__c ,fferpcore__ValidatedShippingPostalCode__c ,fferpcore__ValidatedShippingState__c ,fferpcore__ValidatedShippingStreet__c ,fferpcore__VatRegistrationNumber__c ,fferpcore__VatStatus__c ,Facebook_Messenger_Id__c ,Total_Membership_Years__c ,Membership_Balance_Amount__c ,Education_Level__c ,Certificate_Specialism__c ,Is_Active__c ,Elected_Official__c ,Confirmation_of_PSS_Enrollment__c ,Employment_Category__c ,Employment_Type__c ,Higher_Cap__c ,PSS_Insurance_Cover__c ,PSS_Member__c ,Certification_Outfit_Document_Id__c ,Pendula_Test__c ,Current_Membership_Expiry_As_Text__c ,Days_since_Current_Membership_Expiry__c ,Age__c ,Private__c ,Elected_Official_Count__c ,Is_Elected_Official__c ,Member_Tier__c ,Litmos__Active__c ,Litmos__CustomerPriority__c ,Litmos__Litmos_Id__c ,Litmos__NumberofLocations__c ,Litmos__SLAExpirationDate__c ,Litmos__SLASerialNumber__c ,Litmos__SLA__c ,Litmos__UpsellOpportunity__c ,Student_ID__c ,Access_to_Canvas__c ,fferpcore__MaterializedBillingAddressValidated__c ,fferpcore__MaterializedShippingAddressValidated__c ,EU_Applicants_Flag__c ,Is_New_User__c ,Brand__c ,MC_Applicant__c ,Is_Changed__c ,User_Change_Error__c ,PartiallyCompletedMicroCredentialId__c ,Pendula_Resend__c ,Community_Name__c ,HiddenUserLocationState__c ,HiddenFullName__c ,Industry__c, Azure_Email__c, Azure_ID__c\n"
		},
		"TR_SF_Refresh_properties_SF Account Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforce"
		},
		"TR_SF_Refresh_properties_SF Program Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "Programs__c"
		},
		"TR_SF_Refresh_properties_SF Program Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "Programs__c"
		},
		"TR_SF_Refresh_properties_SF Program Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": " Id ,IsDeleted ,Name ,CurrencyIsoCode ,RecordTypeId ,CreatedDate ,CreatedById ,LastModifiedDate ,LastModifiedById ,SystemModstamp ,LastActivityDate ,LastViewedDate ,LastReferencedDate, Account__c, BatchDate__c, BatchProcessed__c, Capacity__c, CappedOrMembershipBased__c, DateFilter__c, Description__c, EndDate__c, MOUType__c, MembershipsAllocated__c, MembershipsRemaining__c, PPPRegistrationLink__c, Program_18_Digits_ID__c, StartDate__c, TotalMemberships__c, Account_18_Digit_ID__c, PPP_MOU1_Link__c, PPP_MOU2_Link__c, PPP_Friendly_Link__c, AccountOwnerId__c, DaysRemaining__c, IsCloned__c, PreviousProgram__c, Subscriber__c, IsOverseasSubscriber__c, Count_ACS_Event_Hours__c, Count_Other_Hours__c, Count_PD_Video_Hours__c, Create_Validation_Task__c, End_Date_Within_90_Days__c, Has_Paid__c, Inactive__c, Include_in_ROI_Rollup__c, Is_Current__c, KeyContactEmail__c, KeyContactName__c, Last_Task_Review_Date__c, Membership_Remaining_Upsell_Formula__c, Num_Members_Certified__c, Num_Members_Logged_In__c, Num_Members_with_CPD_Hour_s__c, Originating_Opportunity__c, Over_Capacity_Email_Sent__c, Over_Capacity__c, PPP_Registration_Full_URL__c, PPP_Registration_Link__c, Payment_Due_Date__c, Percent_Members_Certified__c, Percent_Members_Logged_In__c, Percent_Members_with_CPD_Hours__c, ROI_Balance_Remaining__c, ROI_Budget__c, Renewal_Opportunity__c, Send_Registration_URL__c, Student_Group__c, Total_ACS_Events_Hours__c, Total_Active_Memberships__c, Total_Balance__c, Total_CPD_Hours__c, Total_Charge_Amount__c, Total_Count_CPD_Hours__c, Total_Other_Hours__c, Total_PD_Video_Hours__c, Total_Transactions_Amount__c, ROI_Spend__c\n \n "
		},
		"TR_SF_Refresh_properties_SF Program Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforce"
		},
		"TR_SF_Refresh_properties_SF new Experience Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "Experience__c"
		},
		"TR_SF_Refresh_properties_SF new Experience Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "Experience__c"
		},
		"TR_SF_Refresh_properties_SF new Experience Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id,\nIsDeleted,\nName,\nRecordTypeId,\nCreatedDate,\nCreatedById,\nLastModifiedDate,\nLastModifiedById,\nSystemModstamp,\nAssessment__c,\nDoYouHaveARegisteredBusiness__c,\nEmploymentOccupationEndDate__c,\nEmploymentOccupationOngoing__c,\nEmploymentOccupationStartDate__c,\nExperienceAccepted__c,\nExperienceComments__c,\nExperienceStatus__c,\nHoursWorkedPerWeek__c,\nLocationOfEmploymentOccupation__c,\nNatureOfWorkExperience__c,\nPositionOccupationOrRoleTitle__c,\nCountableExperienceDays__c,\nCountableExperienceMonths__c,\nCountableExperienceYears__c,\nCountableExperience__c,\nReasonExperienceNotAccepted__c,\nTotalExperience__c"
		},
		"TR_SF_Refresh_properties_SF new Experience Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"TR_SF_Refresh_properties_SF new Account Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "Account"
		},
		"TR_SF_Refresh_properties_SF new Account Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "Account"
		},
		"TR_SF_Refresh_properties_SF new Account Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, MasterRecordId, Name, LastName, FirstName, Salutation, MiddleName, Type, RecordTypeId, ParentId,      BillingStreet, BillingCity, BillingState, BillingPostalCode, BillingCountry, BillingLatitude, BillingLongitude,      BillingGeocodeAccuracy, ShippingStreet, ShippingCity, ShippingState, ShippingPostalCode, ShippingCountry,      ShippingLatitude, ShippingLongitude, ShippingGeocodeAccuracy, Phone, Fax, Website, PhotoUrl, Industry,      AnnualRevenue, NumberOfEmployees, Description, OwnerId, CreatedDate, CreatedById, LastModifiedDate,      LastModifiedById, SystemModstamp, LastActivityDate, LastViewedDate, LastReferencedDate, PersonContactId,      IsPersonAccount, PersonMailingStreet, PersonMailingCity, PersonMailingState, PersonMailingPostalCode,      PersonMailingCountry, PersonMailingLatitude, PersonMailingLongitude, PersonMailingGeocodeAccuracy,      PersonOtherStreet, PersonOtherCity, PersonOtherState, PersonOtherPostalCode, PersonOtherCountry,      PersonOtherLatitude, PersonOtherLongitude, PersonOtherGeocodeAccuracy, PersonMobilePhone, PersonHomePhone,      PersonOtherPhone, PersonAssistantPhone, PersonEmail, PersonTitle, PersonDepartment, PersonAssistantName,      PersonLeadSource, PersonBirthdate, PersonLastCURequestDate, PersonLastCUUpdateDate, PersonEmailBouncedReason,      PersonEmailBouncedDate, PersonIndividualId, Jigsaw, JigsawCompanyId, AccountSource, SicDesc, BillingGrade__c,      CountryOfBirth__c, Gender__c, IdVerificationSectionStatus__c, PassportCountryOfIssue__c,      PersonalDetailsSectionCompleted__c, Pronouns__c, VerifiedDateOfBirthText__c, VerifiedDateofBirth__c,      VerifiedFirstName__c, VerifiedLastName__c, VerifiedMiddleName__c, WebRoles__c, AzureId__c, BoxFolderId__c,      BusinessName__c, ConsentDateTimeofInitiatingAgent__c, Create_Free_Skills_Membership__c, DateOfBirth__c,      HasActiveMSAApplication__c, InitiatingMigrationAgent__c, LeadId__c, OldSalesforceRecordId__c, PassportNumber__c,      PreferredName__c, ABN__c, WebRoles__pc, MARANumber__pc, AzureId__pc, OldOrgContactID__pc, OldOrgSkillAgentId__pc,      SkillAgentId__pc, AgentId__pc, UnreadMessageCountbyAgent__pc, UnreadMessageCountbyApplicant__pc"
		},
		"TR_SF_Refresh_properties_SF new Account Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"TR_SF_Refresh_properties_SF new ANZSCOGroup__c refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "ANZSCOGroup__c"
		},
		"TR_SF_Refresh_properties_SF new ANZSCOGroup__c refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "ANZSCOGroup__c"
		},
		"TR_SF_Refresh_properties_SF new ANZSCOGroup__c refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, OwnerId, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastViewedDate, LastReferencedDate, Code__c"
		},
		"TR_SF_Refresh_properties_SF new ANZSCOGroup__c refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"TR_SF_Refresh_properties_SF new ANZSCOSkill__c Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "ANZSCOSkill__c"
		},
		"TR_SF_Refresh_properties_SF new ANZSCOSkill__c Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "ANZSCOSkill__c"
		},
		"TR_SF_Refresh_properties_SF new ANZSCOSkill__c Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastViewedDate, LastReferencedDate, ANZSCO__c, Skill__c, MinimumSkillLevel__c"
		},
		"TR_SF_Refresh_properties_SF new ANZSCOSkill__c Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"TR_SF_Refresh_properties_SF new Assessment_Comment__c Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "Assessment_Comment__c"
		},
		"TR_SF_Refresh_properties_SF new Assessment_Comment__c Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "Assessment_Comment__c"
		},
		"TR_SF_Refresh_properties_SF new Assessment_Comment__c Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, Name, RecordTypeId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastViewedDate, LastReferencedDate, Contact__c, Assessment__c, Qualification__c, ApplicantResponse__c, AzureId__c, Case__c, DeadlineDate__c, DocumentType__c, Experience__c, Message__c, NotificationType__c, ReadByAgent__c, ReadByApplicant__c, Reason__c, ResultLetterFileId__c, Sender__c, Status__c, Subject__c, SupportingInfo__c"
		},
		"TR_SF_Refresh_properties_SF new Assessment_Comment__c Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"TR_SF_Refresh_properties_SF new AssessmentANZSCO__c Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "AssessmentANZSCO__c"
		},
		"TR_SF_Refresh_properties_SF new AssessmentANZSCO__c Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "AssessmentANZSCO__c"
		},
		"TR_SF_Refresh_properties_SF new AssessmentANZSCO__c Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, ANZSCO__c, Assessment__c, ANZSCOOutcome__c, CurrentAttemptCount__c, DateOfKnowledgeMet__c, EAANoText__c, EAAYesText__c, ExternalId__c, GenerateOutcomeLetterConga__c, IsChosen__c, QAANoText__c, QAAYesText__c, RMDLogic__c, RPLQualificationText__c, RequirementMetDate__c, ResultLetterFileId__c, ResultLetterFileName__c, ANZSCOforUnitCountText__c, AnzscoName__c, AssessmentName__c, Conga_Trigger_Generate_Suitable_Letters__c, SuitableTemplateId__c"
		},
		"TR_SF_Refresh_properties_SF new AssessmentANZSCO__c Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"TR_SF_Refresh_properties_SF new AssessmentANZSCOSkill Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "AssessmentANZSCOSkill__c"
		},
		"TR_SF_Refresh_properties_SF new AssessmentANZSCOSkill Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "AssessmentANZSCOSkill__c"
		},
		"TR_SF_Refresh_properties_SF new AssessmentANZSCOSkill Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, Experience__c, ApplicantSelectedLevel__c, ApplicantSelected__c, assessmentANZSCO__c, assessmentSkill__c, assessorComments__c, assessorSelectedLevel__c, assessorSelected__c, SkillName__c"
		},
		"TR_SF_Refresh_properties_SF new AssessmentANZSCOSkill Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"TR_SF_Refresh_properties_SF new AssessmentSkill__c Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "AssessmentSkill__c"
		},
		"TR_SF_Refresh_properties_SF new AssessmentSkill__c Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "AssessmentSkill__c"
		},
		"TR_SF_Refresh_properties_SF new AssessmentSkill__c Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, Assessment__c, Skill__c, ApplicantSelectedLevel__c, ApplicantSelected__c, AttemptNumber__c"
		},
		"TR_SF_Refresh_properties_SF new AssessmentSkill__c Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"TR_SF_Refresh_properties_SF new Case Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "case"
		},
		"TR_SF_Refresh_properties_SF new Case Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "case_c"
		},
		"TR_SF_Refresh_properties_SF new Case Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, MasterRecordId, CaseNumber, ContactId, AccountId, ParentId, SuppliedName, SuppliedEmail, SuppliedPhone, SuppliedCompany, Type, RecordTypeId, Status, Reason, Origin, Language, Subject, Priority, Description, IsClosed, ClosedDate, IsEscalated, OwnerId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, ContactPhone, ContactMobile, ContactEmail, ContactFax, Comments, LastViewedDate, LastReferencedDate, Assessment__c, Deadline_Within__c, Lead__c, Topic__c"
		},
		"TR_SF_Refresh_properties_SF new Case Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"TR_SF_Refresh_properties_SF new Contact Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "Contact"
		},
		"TR_SF_Refresh_properties_SF new Contact Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "Contact"
		},
		"TR_SF_Refresh_properties_SF new Contact Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, MasterRecordId, AccountId, IsPersonAccount, LastName, FirstName, Salutation, MiddleName, Name, RecordTypeId, OtherStreet, OtherCity, OtherState, OtherPostalCode, OtherCountry, OtherLatitude, OtherLongitude, OtherGeocodeAccuracy, MailingStreet, MailingCity, MailingState, MailingPostalCode, MailingCountry, MailingLatitude, MailingLongitude, MailingGeocodeAccuracy, Phone, Fax, MobilePhone, HomePhone, OtherPhone, AssistantPhone, ReportsToId, Email, Title, Department, AssistantName, LeadSource, Birthdate, Description, OwnerId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, LastCURequestDate, LastCUUpdateDate, LastViewedDate, LastReferencedDate, EmailBouncedReason, EmailBouncedDate, IsEmailBounced, PhotoUrl, Jigsaw, JigsawContactId, IndividualId, WebRoles__c, MARANumber__c, AzureId__c, OldOrgContactID__c, OldOrgSkillAgentId__c, SkillAgentId__c, AgentId__c, UnreadMessageCountbyAgent__c, UnreadMessageCountbyApplicant__c"
		},
		"TR_SF_Refresh_properties_SF new Contact Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"TR_SF_Refresh_properties_SF new Experience_Assessment_ANZSCO__c Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "Experience_Assessment_ANZSCO__c"
		},
		"TR_SF_Refresh_properties_SF new Experience_Assessment_ANZSCO__c Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "Experience_Assessment_ANZSCO__c"
		},
		"TR_SF_Refresh_properties_SF new Experience_Assessment_ANZSCO__c Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, Experience__c, assessmentANZSCO__c, CloselyRelated__c, ANZSCOName_c__c "
		},
		"TR_SF_Refresh_properties_SF new Experience_Assessment_ANZSCO__c Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"TR_SF_Refresh_properties_SF new IdentityVerification Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "IdentityVerification__c"
		},
		"TR_SF_Refresh_properties_SF new IdentityVerification Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "IdentityVerification__c"
		},
		"TR_SF_Refresh_properties_SF new IdentityVerification Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id,\nOwnerId,\nIsDeleted,\nName,\nCreatedDate,\nCreatedById,\nLastModifiedDate,\nLastModifiedById,\nSystemModstamp,\nLastViewedDate,\nLastReferencedDate,\nApplicant__c,\nIdVerificationResult__c,\nLead__c,\nPassportCountryofIssue__c,\nPassportExpiryDate__c,\nPassportNumber__c,\nTransactionCompletionDate__c,\nTransactionID__c,\nTransactionStatus__c,\nVerifiedDateofBirth__c,\nVerifiedFirstName__c,\nVerifiedLastName__c,\nVerifiedMiddleName__c,\ncreatedAt__c,\nPassportExpired__c,\nCitizenship_Number__c,\nComputerised_National_Identity_Card__c"
		},
		"TR_SF_Refresh_properties_SF new IdentityVerification Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"TR_SF_Refresh_properties_SF new lead Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "lead"
		},
		"TR_SF_Refresh_properties_SF new lead Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "lead"
		},
		"TR_SF_Refresh_properties_SF new lead Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, MasterRecordId, LastName, FirstName, Salutation, MiddleName, Name, RecordTypeId, Title, Company, Street, City, State, PostalCode, Country, Latitude, Longitude, GeocodeAccuracy, Phone, Email, Website, PhotoUrl, Description, LeadSource, Status, Industry, Rating, AnnualRevenue, NumberOfEmployees, OwnerId, IsConverted, ConvertedDate, ConvertedAccountId, ConvertedContactId, ConvertedOpportunityId, IsUnreadByOwner, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, LastViewedDate, LastReferencedDate, Jigsaw, JigsawContactId, EmailBouncedReason, EmailBouncedDate, IndividualId, CountryOfBirth__c, IdVerificationSectionStatus__c, PassportCountryOfIssue__c, PersonalDetailsSectionCompleted__c, Pronouns__c, VerifiedDateOfBirthText__c, VerifiedDateofBirth__c, VerifiedFirstName__c, VerifiedLastName__c, VerifiedMiddleName__c, WebsiteRole__c, AzureId__c, ConsentDateTimeofInitiatingAgent__c, DateOfBirth__c, HasActiveMSAApplication__c, InitiatingMigrationAgent__c, LeadId__c, PassportNumber__c, PreferredName__c\n"
		},
		"TR_SF_Refresh_properties_SF new lead Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"TR_SF_Refresh_properties_SF new Order product refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "orderitem"
		},
		"TR_SF_Refresh_properties_SF new Order product refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "orderitem"
		},
		"TR_SF_Refresh_properties_SF new Order product refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, Product2Id, IsDeleted, OrderId, PricebookEntryId, OriginalOrderItemId, AvailableQuantity, Quantity, UnitPrice, ListPrice, TotalPrice, ServiceDate, EndDate, Description, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, OrderItemNumber"
		},
		"TR_SF_Refresh_properties_SF new Order product refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"TR_SF_Refresh_properties_SF new Order Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "order"
		},
		"TR_SF_Refresh_properties_SF new Order Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "order_c"
		},
		"TR_SF_Refresh_properties_SF new Order Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, OwnerId, ContractId, AccountId, Pricebook2Id, OriginalOrderId, EffectiveDate, EndDate, IsReductionOrder, Status, Description, CustomerAuthorizedById, CompanyAuthorizedById, Type, BillingStreet, BillingCity, BillingState, BillingPostalCode, BillingCountry, BillingLatitude, BillingLongitude, BillingGeocodeAccuracy, ShippingStreet, ShippingCity, ShippingState, ShippingPostalCode, ShippingCountry, ShippingLatitude, ShippingLongitude, ShippingGeocodeAccuracy, ActivatedDate, ActivatedById, StatusCode, OrderNumber, TotalAmount, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, IsDeleted, SystemModstamp, LastViewedDate, LastReferencedDate, AccountName__c, AssessmentId__c, Email__c"
		},
		"TR_SF_Refresh_properties_SF new Order Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"TR_SF_Refresh_properties_SF new Qualification Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "Qualification__c"
		},
		"TR_SF_Refresh_properties_SF new Qualification Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "Qualification__c"
		},
		"TR_SF_Refresh_properties_SF new Qualification Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, Name, RecordTypeId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, LastViewedDate, LastReferencedDate, Assessment__c, AQFComparability__c, CEPPortalLink__c, CEPReference__c, CalculationDuration__c, CloselyRelatedMajor__c, CloselyRelatedMinor__c, CompletionDate__c, CoreUnitsMajor__c, CoreUnitsMinor__c, CountryOfStudy__c, CourseDuration__c, CourseLoad__c, CreditPointsAwarded__c, DetailsOnResultLetter__c, FulltimeOrParttime__c, ICTContent__c, ICTUnitCountMajor__c, ICTUnitCountMinor__c, Institution__c, IsAffiliatedtoAustralianUniversity__c, IsthisAResearchBasedQualification__c, NotAssessed__c, PotentialRDM4Of6Yrs__c, PotentialRMD2Or5Yrs__c, QualificationCategory__c, QualificationStatus__c, ReasonsAQFNotRecognised__c, ShowRichText__c, TotalNumberOfUnit__c, UnitCountErrors__c, Unit_Count_Text_Long__c, AustralianQualification__c, ReasonsAQFNotRecognisedText__c, RejectedQualificationReasons__c, UnitCountText__c"
		},
		"TR_SF_Refresh_properties_SF new Qualification Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"TR_SF_Refresh_properties_SF new Skill__c  Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "Skill__c"
		},
		"TR_SF_Refresh_properties_SF new Skill__c  Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "Skill__c"
		},
		"TR_SF_Refresh_properties_SF new Skill__c  Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, OwnerId, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastViewedDate, LastReferencedDate, SkillCode__c, SkillLevels__c"
		},
		"TR_SF_Refresh_properties_SF new Skill__c  Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"TR_SF_Refresh_properties_SF new SupportingInfo__c Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "SupportingInfo__c"
		},
		"TR_SF_Refresh_properties_SF new SupportingInfo__c Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "SupportingInfo__c"
		},
		"TR_SF_Refresh_properties_SF new SupportingInfo__c Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, Name, RecordTypeId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, Assessment__c, DetailsonResultLetter__c, ExperienceForProject1__c, ExperienceForProject2__c, Plagiarism_Detected__c, RPLAccepted__c, RPLOutcome__c, RPLRejectionReason__c"
		},
		"TR_SF_Refresh_properties_SF new SupportingInfo__c Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"TR_SF_Refresh_properties_SF new User Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "user"
		},
		"TR_SF_Refresh_properties_SF new User Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "user"
		},
		"TR_SF_Refresh_properties_SF new User Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id\t, Username\t, LastName\t, FirstName\t, MiddleName\t, Name\t, CompanyName\t, Division\t, Department\t, Title\t, Street\t, City\t, State\t, PostalCode\t, Country\t, Latitude\t, Longitude\t, GeocodeAccuracy\t, Email\t, EmailPreferencesAutoBcc\t, EmailPreferencesAutoBccStayInTouch\t, EmailPreferencesStayInTouchReminder\t, SenderEmail\t, SenderName\t, Signature\t, StayInTouchSubject\t, StayInTouchSignature\t, StayInTouchNote\t, Phone\t, Fax\t, MobilePhone\t, Alias\t, CommunityNickname\t, BadgeText\t, IsActive\t, TimeZoneSidKey\t, UserRoleId\t, LocaleSidKey\t, ReceivesInfoEmails\t, ReceivesAdminInfoEmails\t, EmailEncodingKey\t, ProfileId\t, UserType\t, LanguageLocaleKey\t, EmployeeNumber\t, DelegatedApproverId\t, ManagerId\t, LastLoginDate\t, LastPasswordChangeDate\t, CreatedDate\t, CreatedById\t, LastModifiedDate\t, LastModifiedById\t, SystemModstamp\t, NumberOfFailedLogins\t, OfflineTrialExpirationDate\t, OfflinePdaTrialExpirationDate\t, UserPermissionsMarketingUser\t, UserPermissionsOfflineUser\t, UserPermissionsAvantgoUser\t, UserPermissionsCallCenterAutoLogin\t, UserPermissionsSFContentUser\t, UserPermissionsInteractionUser\t, UserPermissionsSupportUser\t, ForecastEnabled\t, UserPreferencesActivityRemindersPopup\t, UserPreferencesEventRemindersCheckboxDefault\t, UserPreferencesTaskRemindersCheckboxDefault\t, UserPreferencesReminderSoundOff\t, UserPreferencesDisableAllFeedsEmail\t, UserPreferencesDisableFollowersEmail\t, UserPreferencesDisableProfilePostEmail\t, UserPreferencesDisableChangeCommentEmail\t, UserPreferencesDisableLaterCommentEmail\t, UserPreferencesDisProfPostCommentEmail\t, UserPreferencesApexPagesDeveloperMode\t, UserPreferencesReceiveNoNotificationsAsApprover\t, UserPreferencesReceiveNotificationsAsDelegatedApprover\t, UserPreferencesHideCSNGetChatterMobileTask\t, UserPreferencesDisableMentionsPostEmail\t, UserPreferencesDisMentionsCommentEmail\t, UserPreferencesHideCSNDesktopTask\t, UserPreferencesHideChatterOnboardingSplash\t, UserPreferencesHideSecondChatterOnboardingSplash\t, UserPreferencesDisCommentAfterLikeEmail\t, UserPreferencesDisableLikeEmail\t, UserPreferencesSortFeedByComment\t, UserPreferencesDisableMessageEmail\t, UserPreferencesDisableBookmarkEmail\t, UserPreferencesDisableSharePostEmail\t, UserPreferencesEnableAutoSubForFeeds\t, UserPreferencesDisableFileShareNotificationsForApi\t, UserPreferencesShowTitleToExternalUsers\t, UserPreferencesShowManagerToExternalUsers\t, UserPreferencesShowEmailToExternalUsers\t, UserPreferencesShowWorkPhoneToExternalUsers\t, UserPreferencesShowMobilePhoneToExternalUsers\t, UserPreferencesShowFaxToExternalUsers\t, UserPreferencesShowStreetAddressToExternalUsers\t, UserPreferencesShowCityToExternalUsers\t, UserPreferencesShowStateToExternalUsers\t, UserPreferencesShowPostalCodeToExternalUsers\t, UserPreferencesShowCountryToExternalUsers\t, UserPreferencesShowProfilePicToGuestUsers\t, UserPreferencesShowTitleToGuestUsers\t, UserPreferencesShowCityToGuestUsers\t, UserPreferencesShowStateToGuestUsers\t, UserPreferencesShowPostalCodeToGuestUsers\t, UserPreferencesShowCountryToGuestUsers\t, UserPreferencesHideInvoicesRedirectConfirmation\t, UserPreferencesHideStatementsRedirectConfirmation\t, UserPreferencesHideS1BrowserUI\t, UserPreferencesDisableEndorsementEmail\t, UserPreferencesPathAssistantCollapsed\t, UserPreferencesCacheDiagnostics\t, UserPreferencesShowEmailToGuestUsers\t, UserPreferencesShowManagerToGuestUsers\t, UserPreferencesShowWorkPhoneToGuestUsers\t, UserPreferencesShowMobilePhoneToGuestUsers\t, UserPreferencesShowFaxToGuestUsers\t, UserPreferencesShowStreetAddressToGuestUsers\t, UserPreferencesLightningExperiencePreferred\t, UserPreferencesPreviewLightning\t, UserPreferencesHideEndUserOnboardingAssistantModal\t, UserPreferencesHideLightningMigrationModal\t, UserPreferencesHideSfxWelcomeMat\t, UserPreferencesHideBiggerPhotoCallout\t, UserPreferencesGlobalNavBarWTShown\t, UserPreferencesGlobalNavGridMenuWTShown\t, UserPreferencesCreateLEXAppsWTShown\t, UserPreferencesFavoritesWTShown\t, UserPreferencesRecordHomeSectionCollapseWTShown\t, UserPreferencesRecordHomeReservedWTShown\t, UserPreferencesFavoritesShowTopFavorites\t, UserPreferencesExcludeMailAppAttachments\t, UserPreferencesSuppressTaskSFXReminders\t, UserPreferencesSuppressEventSFXReminders\t, UserPreferencesPreviewCustomTheme\t, UserPreferencesHasCelebrationBadge\t, UserPreferencesUserDebugModePref\t, UserPreferencesSRHOverrideActivities\t, UserPreferencesNewLightningReportRunPageEnabled\t, UserPreferencesNativeEmailClient\t, UserPreferencesHideBrowseProductRedirectConfirmation\t, ContactId\t, AccountId\t, CallCenterId\t, Extension\t, FederationIdentifier\t, AboutMe\t, FullPhotoUrl\t, SmallPhotoUrl\t, IsExtIndicatorVisible\t, OutOfOfficeMessage\t, MediumPhotoUrl\t, DigestFrequency\t, DefaultGroupNotificationFrequency\t, LastViewedDate\t, LastReferencedDate\t, BannerPhotoUrl\t, SmallBannerPhotoUrl\t, MediumBannerPhotoUrl\t, IsProfilePhotoActive\t, IndividualId\t, dfsle__CanManageAccount__c\t, dfsle__Provisioned__c\t, dfsle__Status__c\t, dfsle__Username__c\t"
		},
		"TR_SF_Refresh_properties_SF new User Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"TR_SF_Refresh_properties_SF new Assessment History Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "Assessment__History"
		},
		"TR_SF_Refresh_properties_SF new Assessment History Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "Assessment__History"
		},
		"TR_SF_Refresh_properties_SF new Assessment History Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, IsDeleted, ParentId, CreatedById, CreatedDate, Field, DataType, OldValue, NewValue"
		},
		"TR_SF_Refresh_properties_SF new Assessment History Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"TR_SF_Refresh_properties_SF new Product Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "Product2"
		},
		"TR_SF_Refresh_properties_SF new Product Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "Product2"
		},
		"TR_SF_Refresh_properties_SF new Product Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "   Id ,Name ,ProductCode ,Description ,IsActive ,CreatedDate ,CreatedById ,LastModifiedDate ,LastModifiedById ,SystemModstamp ,Family ,ExternalDataSourceId ,ExternalId ,DisplayUrl ,QuantityUnitOfMeasure ,IsDeleted ,IsArchived ,LastViewedDate ,LastReferencedDate ,StockKeepingUnit "
		},
		"TR_SF_Refresh_properties_SF new Product Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"TR_SF_Refresh_properties_SF Contact Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "contact"
		},
		"TR_SF_Refresh_properties_SF Contact Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "contact"
		},
		"TR_SF_Refresh_properties_SF Contact Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id,\nIsDeleted,\nMasterRecordId,\nAccountId,\nLastName,\nFirstName,\nSalutation,\nName,\nOtherStreet,\nOtherCity,\nOtherState,\nOtherPostalCode,\nOtherCountry,\nOtherLatitude,\nOtherLongitude,\nOtherGeocodeAccuracy,\nMailingStreet,\nMailingCity,\nMailingState,\nMailingPostalCode,\nMailingCountry,\nMailingLatitude,\nMailingLongitude,\nMailingGeocodeAccuracy,\nPhone,\nFax,\nMobilePhone,\nHomePhone,\nOtherPhone,\nAssistantPhone,\nReportsToId,\nEmail,\nTitle,\nDepartment,\nAssistantName,\nLeadSource,\nBirthdate,\nDescription,\nCurrencyIsoCode,\nOwnerId,\nHasOptedOutOfEmail,\nHasOptedOutOfFax,\nDoNotCall,\nCreatedDate,\nCreatedById,\nLastModifiedDate,\nLastModifiedById,\nSystemModstamp,\nLastActivityDate,\nLastCURequestDate,\nLastCUUpdateDate,\nLastViewedDate,\nLastReferencedDate,\nEmailBouncedReason,\nEmailBouncedDate,\nIsEmailBounced,\nPhotoUrl,\nJigsaw,\nJigsawContactId,\nIndividualId,\nAssessment__c,\nIsLead__c,\nMembershipPPP__c,\nPreferredName__c,\nShadowAccount__c,\nContact_18_Digits_ID__c,\nMembership_Number__c,\nLogin_Generation_Error__c,\nLogin_Generation_Status__c,\nLitmos__Access_Level__c,\nLitmos__Completed_Percentage__c,\nLitmos__Courses_Assigned__c,\nLitmos__Courses_Completed__c,\nLitmos__Deactivate_From_Litmos__c,\nLitmos__Full_Name__c,\nLitmos__Languages__c,\nLitmos__Level__c,\nLitmos__LitmosID__c,\nLitmos__Litmos_Activated__c,\nLitmos__Litmos_Login_Access__c,\nLitmos__Litmos_UserId__c,\nLitmos__OriginalId__c,\nLitmos__Sync_Litmos__c,\nLitmos__Total_Sum_Percentages__c,\nLitmos__User_Id__c,\nLitmos__p_Completed_Percentage__c"
		},
		"TR_SF_Refresh_properties_SF Contact Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforce"
		},
		"TR_SF_Refresh_properties_SF new Assessment Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "assessment__c"
		},
		"TR_SF_Refresh_properties_SF new Assessment Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "assessment__c"
		},
		"TR_SF_Refresh_properties_SF new Assessment Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": " Id, OwnerId, IsDeleted, Name, RecordTypeId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, LastViewedDate, LastReferencedDate, AgentEmailAddress__c, AgentName__c, AllocationDate__c, AppealAllocationDate__c, AppealAssessor__c, AppealCaseOfficer__c, AppealDate__c, AppealFinalisedDate__c, AppealLetterContent__c, AppealLetterFileId__c, AppealLetterFileName__c, AppealOutcome__c, ApplicantEmailAddress__c, ApplicantNameChange__c, ApplicantOtherName__c, Applicant__c, ApplicationStatus__c, ApplicationType__c, AppliedANZSCOs__c, ApplicationOutcome__c, Assessor__c, AuthorisedAgent__c, CalculatedDeadlineDate__c, CaseOfficer__c, CongaLettersGenerated__c, Conga_Trigger_Appeal_Result_Letters__c, Contact__c, CurrentAttemptCount__c, DetailsOnResultLetter__c, DocusignProcessCompleted__c, EligibleforAppeal__c, ExperienceSectionStatus__c, FinaliseDate__c, FraudFlagDate__c, GenerateOutcomeLetterConga__c, GraduationDate__c, History__c, IDVerification__c, InvestigationOutcome__c, NameChangeRequested__c, NameHistorySectionStatus__c, NextActionDueDate__c, NumberOfResultLetters__c, OnHoldDate__c, PriorityRange__c, ProfessionalYearStudentID__c, Professional_Year_Complete__c, QAAssessor__c, QAFlagDate__c, RPLSectionStatus__c, ReasonforAppeal__c, ResultLetterContent__c, ResultLetterFileId__c, ResultLetterFileName__c, ResultLetterGenerated__c, SelectYourSkillsSectionStatus__c, SubmissionDate__c, SuitableANZSCOs__c, VEVOValidationFailed__c, VisaExpirationDate__c, VisaGrantNumber__c, Additional_docs_requested__c, AppealProcessingTime__c, ApplicantName__c, Applicantpreferredname__c, Conga_Trigger_Unsuitable_Result_Letters__c, CountryOfBirth__c, History_Indicator__c, IsRessignedApplication__c, ListViewFilter__c, ProcessingTime__c, UnsuitableTemplateId__c, MaxAttemptCount__c, QualificationsSectionStatus__c, ANZSCOsSelection__c, RejectedRPLCount__c, CongaTemplateId__c, Conga_Trigger_FraudPlagiarismRejected__c, Change_Since_RMD__c, RMD_Calculate_Run_Timestamp__c, ReasonApplicationUnsuitable__c, Trigger_RPL_Validation__c, RMD_Validation__c, On_Hold_Reason__c"
		},
		"TR_SF_Refresh_properties_SF new Assessment Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		},
		"TR_SF_Refresh_properties_SF new AccountContactRelation Refresh_parameters_SourceTableName": {
			"type": "string",
			"defaultValue": "AccountContactRelation"
		},
		"TR_SF_Refresh_properties_SF new AccountContactRelation Refresh_parameters_TargetTableName": {
			"type": "string",
			"defaultValue": "AccountContactRelation"
		},
		"TR_SF_Refresh_properties_SF new AccountContactRelation Refresh_parameters_ColumnList": {
			"type": "string",
			"defaultValue": "Id, AccountId, ContactId, Roles, IsDirect, IsActive, StartDate, EndDate, IsDeleted, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, Status__c"
		},
		"TR_SF_Refresh_properties_SF new AccountContactRelation Refresh_parameters_schemaname": {
			"type": "string",
			"defaultValue": "salesforcenew"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Active Financial Forecast')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL TO DataLake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "StartDatabricksCluster",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from   [membership].[members_ActivefinancialDaily]  \nOPTION (MAXRECURSION 0)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSQLSP",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_DatabricksPremiumFolder",
								"type": "DatasetReference",
								"parameters": {
									"filename": "ActiveFinancial",
									"Foldername": "Membership"
								}
							}
						]
					},
					{
						"name": "StartDatabricksCluster",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "StartDatabricksCluster",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Prophet  ActiveMembers forecast",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "SQL TO DataLake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/prashant.yadvendra@acs.org.au/Machine Learning ACS/Forecasting Membership/ActiveFinancialDaily forecast"
						},
						"linkedServiceName": {
							"referenceName": "ACS Databricks Premium",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ACS/Membership/Forecasting"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSQLSP')]",
				"[concat(variables('factoryId'), '/datasets/ds_DatabricksPremiumFolder')]",
				"[concat(variables('factoryId'), '/pipelines/StartDatabricksCluster')]",
				"[concat(variables('factoryId'), '/linkedServices/ACS Databricks Premium')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Active Unfinancial')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Active Unfinacial Members",
						"description": "",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set end of the month as Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\n---[ Creating Data For  Active Unfinancial Cummulative V 0.2]-\n---Versioning starts with V0.1 (It means this is second version of the original script)\n-- A is the the Account table Output while B is the contract table here \n--30 columns in CTE \n\n\nWITH CTE AS (\n    SELECT \n\tcategory='Active Unfinancial', \n\tB.AccountID  , \n\tEOMONTH(GETDATE()) as MonthDate, \n\n     CASE \n\t WHEN A.MemberGrade__c  IS NULL \n\t  Then B.Grade__c\n\t  Else A.MemberGrade__c \n\t END \n\t AS [MemberGrade],\n\n\tCASE \n\t  WHEN A.BillingGrade__c  IS NULL \n\t\tTHEN  B.MemberBillingGrade__c \n\t\tWHEN A.BillingGrade__c IN ( '14 - Student - PYear' ,  '14 – Student – PYear' , '16 - Student - PYear',  '17 - Student - PYear' , '18 - Student - PYear' ) \n\t\tThen  '14 - Student - PYear'         \n\t  ELSE  A.BillingGrade__c \n\t\tEND \n\t\tAS [BillingGrade], \n\n       --We create BranchGroup from Branch Infromation avaialble in Account table  \n\t\tCASE            \n\t\twhen A.branch__c ='Canberra'  then  'CANB'          \n\t\twhen A.branch__c ='New South Wales'  then  'NSW'          \n\t\twhen A.branch__c ='Northern Territory' then  'NT'          \n\t\twhen A.branch__c ='Overseas' then  'os'          \n\t\twhen A.branch__c IN  ('Queensland' , 'South Pacific Overseas')  then  'QLD'          \n\t\twhen A.branch__c ='South Australia' then  'SA'          \n\t\twhen A.branch__c ='Tasmania' then  'TAS'          \n\t\twhen A.branch__c ='Victoria' then  'VIC'          \n\t\twhen A.branch__c ='Western Australia' then  'WA'          \n\t\twhen A.branch__C is NULL and HiddenUserLocationState__c ='Overseas' then 'os'          \n\t\tELSE null          \n       END as [BranchGroup]  , \n\t\t\n\n\t\t-- Codifying the gender from Account table & assessment Table where ever Present \n\t\tCASE           \n\t\tWhen A.Gender__c in ('F', 'Female' )  or  A.Title__c  in ('Miss', 'Mrs', 'Ms')  Then 'Female'          \n\t\tWhen A.Gender__c in ('MALE', 'M')  or  A.Title__c  in ('Mr.', 'Sir', 'Ms')   then 'Male'          \n\t\tWhen A.Gender__c is NULL then (select DISTINCT(c.Applicant_Title__c) from  [dbo].[assessment] c  where B.accountid = c.applicantname__C  )          \n\t\telse A.Gender__c          \n\t\tend as [Gender]    , \n\n\t\t\n\t\t\n\t\t--Codifying certification level into [certificationGroup] from Account object \n\t\tCASE          \n\t\twhen  CertificationLevel__c in ('CP','CP Lapsed') then 'CP'          \n\t\twhen CertificationLevel__c in ('CT','CT Lapsed') then 'CT'          \n\t\twhen CertificationLevel__c in ('Not Certified') then 'Not Certified'          \n\t\telse NULL          \n\t\tend as [certificationGroup],\n\t\t\n\t\t---Fetching Attributes from Account table \n\n\t\tCertificationLevel__c as  [CertificationLevel] ,           \n\t\t A.PPP__c as PPP ,              \n\t\t A.id as [AccountObjID],           \n\t\t A.email__c as [Email],           \n\t\t A.type as [AccountType],          \n\t\t A.MembershipNumber__c as [MembershipNumber],    \n\t\t A.DateOfBirth__c, \n\t\tA.Days_since_Current_Membership_Expiry__c, \n\t\tA.HiddenFullName__c as [PersonFullName],          \n\t\tA.CurrentMembershipExpiry__c as [CurrentMembershipExpiry],          \n\t\tA.PersonAccountJoinedDate__c as [JoinedDate],  \n\t\tA.branch__c as [Branch],           \n\t\tA.Geography__c as [Geography],           \n\t\tA.[ShippingCountry] as [WorkCountry],           \n\t\tA.[BillingCountry] as [HomeCountry],       \n\t\tA.Former_Billing_Grade1__c  ,    \n\t\t\n\t\tA.Membership_Status__c as AccountStatus,\n\t\tB.status as contractStatus, \n\n\t  CASE \n\t   WHEN A.Membership_Status__c  IS NULL \n\t   Then B.Status \n\t   ELSE A.Membership_Status__c\n\t   END as Membership_Status,       \n\t\t\n\t\t\n\n\t--Concanating Billing Grade & Former Billing Grades into BillingGradeConcat , To be used in next CTE \n\t\tCONCAT(A.BillingGrade__c, '_',A.Former_Billing_Grade1__c) as BillingGradeConcat ,  \n\t\t\t   \n\t\tCONVERT(DATE, DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0)) AS ExtractDate,  --it will return the First Day of the month on any day , '2024-06-01'\n\t\t\n\t\t LEFT(DATENAME(MONTH, GETDATE()), 3) + '-' + RIGHT(CONVERT(VARCHAR(4), YEAR(GETDATE())), 2) AS [FYYear],  --It will return month & Year , exmaple Jun-24 \n\n\n\t\t--Case statement will look for financial year \n\t    CASE\n\t\tWHEN CONVERT(DATE, DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0))  between '2024-07-01' and '2025-06-30'\n\t\tTHEN 'FY 25'\n\t\tWHEN CONVERT(DATE, DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0))  between '2023-07-01' and '2024-06-30'\n\t\tTHEN 'FY 24'\n\t\t ELSE NULL \n\t\tEND \n\t\tas [FY],\t\n\t\t\n\t\tLEFT(LEFT(DATENAME(MONTH, GETDATE()), 3) + '-' + RIGHT(CONVERT(VARCHAR(4), YEAR(GETDATE())), 2),3)   AS [Month]     --it will return the current month \n\t  \t  \n\n\t    from [salesforce].[Contract]  B\n\t   Inner join  [salesforce].[Account] A \n\t   on   B.AccountId=A.id\n\t   where  B.currentmembership__c =1\n\t   and  B.Status IN ('Active unfinancial') \n      and   B.currentmembership__c =1\n\n\n)\n,\n-----Updating the Billing Grade Values -------\n\n\nCTE1 \nAS\n(\nselect \ncategory,\nAccountID,\nMonthDate,\n[MemberGrade]\t,\nBranchGroup,\t\nGender\t,\ncertificationGroup\t,\nCertificationLevel,\n[PPP],\nAccountObjID,\n[Email]\t,\nAccountType\t,\nMembershipNumber,\n DateOfBirth__c\t,\nDays_since_Current_Membership_Expiry__c,\nPersonFullName\t,\nCurrentMembershipExpiry\t,\nJoinedDate\t,\nBranch\t,\nGeography,\nWorkCountry,\nHomeCountry\t,\nFormer_Billing_Grade1__c\t,\nMembership_Status,\nBillingGradeConcat,\nExtractDate\t,\n[FYYear]\t,\nFY\t,\nMonth, \n\n--Updating Billing Grade based on Previous Billing Grades \nCASE     \n   WHEN   Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30  and billinggradeconcat ='3 - Full Fee_2 - PPP Full fee' \n   Then  '2 - PPP Full fee'    \n   WHEN Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and  billinggradeconcat ='3 - Full Fee_1 - Continuing'\n   Then   '1 - Continuing'    \n   WHEN Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and  billinggradeconcat ='7 - Graduate - 2nd Year_4 - Graduate - 1st Year' \n   Then    '4 - Graduate - 1st Year'    \n   WHEN   Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and   billinggradeconcat ='3 - Full Fee_7 - Graduate - 2nd Year' \n   Then   '7 - Graduate - 2nd Year'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='4 - Graduate - 1st Year_10 - Student - PPP' \n   Then  '10 - Student - PPP'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='4 - Graduate - 1st Year_11 - Student' \n   Then   '11 - Student'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and   billinggradeconcat ='3 - Full Fee_12 - Complimentary' \n   Then  '12 - Complimentary'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='3 - Full Fee 13 - Honoured' \n   Then  '13 - Honoured'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and   billinggradeconcat ='4 - Graduate - 1st Year_14 - Student - PYear'  \n   Then  '14 - Student - PYear'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='4 - Graduate - 1st Year_15 - Student - ACSF' \n   Then   '15 - Student - ACSF'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='3 - Full Fee_16 - Unemployed / On Hiatus' \n   Then  '16 - Unemployed / On Hiatus'    \n  WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='18 - Digital Subscriber 20 - Skills Applicant' \n  Then  '20 - Skills Applicant'    \n  ELSE [BillingGrade]\n   END    \n   AS [BillingGrade]\n\n\nfrom CTE\n\n)\n\n, \n\n----- Transofromation Heirarchy & Subsegment  --------------------\n----- we have upgraded billing grade in previous CTE  which is also used by BGG , create  BGG in this cte \n--30 columns \n--we are using this CTE to create the BGG column using billing grade\nCTE2 \nAS (\n    SELECT \n\t\ncategory,\nAccountID,\nMonthDate,\n[MemberGrade]\t,\nBranchGroup,\t\nGender\t,\ncertificationGroup\t,\nCertificationLevel,\n[PPP],\nAccountObjID,\n[Email]\t,\nAccountType\t,\nMembershipNumber,\nDateOfBirth__c\t,\nDays_since_Current_Membership_Expiry__c,\nPersonFullName\t,\nCurrentMembershipExpiry\t,\nJoinedDate\t,\nBranch\t,\nGeography,\nWorkCountry,\nHomeCountry\t,\nFormer_Billing_Grade1__c\t,\nMembership_Status,\nBillingGradeConcat,\nExtractDate\t,\n[FYYear]\t,\nFY\t,\nMonth, \nBillingGrade,\n\n\n\t\t--Codifying Billing grade into BGG from Account Object \n\t    CASE           \n\t\tWhen [BillingGrade] in ('0 - n/a', '1 - Continuing' , '12 - Complimentary','13 - Honoured', '16 - Unemployed / On Hiatus', '5 - Life Member')   Then 'Other'          \n\t\tWhen [BillingGrade] in ('10 - Student - PPP', '11 - Student', '15 - Student - ACSF', '15 – Student – ACSF')   then 'Student'          \n\t\tWhen [BillingGrade] in ('14 - Student - PYear', '14 – Student – PYear', '16 - Student - PYear', '17 - Student - PYear', '18 - Student - PYear') then 'Professional Year'          \n\t\tWhen [BillingGrade] in ('17 - PPP MOU2', '2 - PPP Full fee') then 'PPP'          \n\t\tWhen [BillingGrade] in ('19 - Subscriber - PPP') then 'Subscriber'          \n\t\tWhen [BillingGrade] in ('20 - Skills Applicant') then 'Overseas'          \n\t\tWhen [BillingGrade] in ('7 - Graduate - 2nd Year') then 'Graduate'          \n\t\tWhen [BillingGrade] in ('3 - Full Fee') then 'Full Fee'          \n\t\tWhen [BillingGrade] in ('8 - Retired') then 'Retired'          \n\t\telse NULL           \n\t\tend as [BGG]\n\n         from CTE1), \n\n\n--We create  Heirarchy based on MemberGrade & Billing Grade \n-- we Update Branch Group based on BGG again\n\n\n\t\tCTE3 as (\n\n\n\t\tselect \ncategory,\nAccountID,\nMonthDate,\n[MemberGrade]\t,\nGender\t,\ncertificationGroup\t,\nCertificationLevel,\n[PPP],\nAccountObjID,\n[Email]\t,\nAccountType\t,\nMembershipNumber,\nDateOfBirth__c\t,\nDays_since_Current_Membership_Expiry__c,\nPersonFullName\t,\nCurrentMembershipExpiry\t,\nJoinedDate\t,\nBranch\t,\nGeography,\nWorkCountry,\nHomeCountry\t,\nFormer_Billing_Grade1__c\t,\nMembership_Status,\nBillingGradeConcat,\nExtractDate\t,\n[FYYear]\t,\nFY\t,\nMonth, \nBillingGrade,\nBGG, \n\n\nCASE \nWhen BGG ='Overseas' THEN  'OS'\n       ELSE BranchGroup \n\t END  as BranchGroup , \n\n\n        CASE    \n            WHEN [MemberGrade] IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow')\n\t\t\tTHEN 'Professional'    \n\n            WHEN [MemberGrade] IN ( 'Associate' )\n\t\t\t AND \n\t\t\t[BillingGrade] IN (    \n                '1 - Continuing', \n\t\t\t\t'3 - Full Fee', \n\t\t\t\t'5 - Life Member',    \n                '2 - PPP Full Fee',\n\t\t\t\t'3 - Full Fee',\n\t\t\t\t'17 - PPP MOU2',    \n                '8 - Retired'  \n            ) THEN 'Full Fee Associates'    \n\n            WHEN ( [MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber', 'Honorary Member')    OR  [MemberGrade] in ('Associate') )\n                AND [BillingGrade] IN (    \n                    '4 - Graduate - 1st Year', \n\t\t\t\t\t'7 - Graduate - 2nd Year',    \n                    '10 - Student - PPP',\n\t\t\t\t\t'11 - Student',    \n                    '15 - Student - ACSF',\n\t\t\t\t\t'16 - Unemployed / On Hiatus'    \n                ) THEN 'Discounted (Full Benefits)'    \n\n            WHEN  ( [MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber', 'Honorary Member')   OR  [MemberGrade] in ('Associate') )\n                AND [BillingGrade]\n\t\t\t\tIN ('20 - Skills Applicant') \n\t\t\t\tTHEN 'Skills Applicants'  \n\n            WHEN  ( [MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber') OR  [MemberGrade] in ('Associate', 'Honorary Member') )\n\t\t\t                AND [BillingGrade] IN \n\t\t\t\t\t\t\t('11 - Complimentary', \n\t\t\t\t\t\t\t'12 - Complimentary', \n\t\t\t\t\t\t\t'13 - Honoured')\n\t\t\t\t\t\t\tTHEN 'Complimentary (Full Benefits)'  \n\n            WHEN  ( [MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber', 'Honorary Member')  OR  [MemberGrade] in ('Associate') )\n                AND [BillingGrade] IN \n\t\t\t\t('14 - Student - PYear') \n\t\t\t\tTHEN 'Professional Year'  \n\n            WHEN  ([MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber', 'Honorary Member')   OR  [MemberGrade] in ('Associate', 'Subscriber'))\n                AND [BillingGrade] IN (\n                    '18 - Digital Subscriber',\n\t\t\t\t\t'19 - Subscriber - PPP', \n\t\t\t\t\t'18 - Subscriber - PPP'    \n                ) THEN 'Subscribers (Discounted Limited Benefits)'\n            ELSE NULL -- Set Heirarchy to NULL if none of the conditions are met\n        END AS Heirarchy\n    FROM CTE2\n), \n\n\n\nCTE4\nAs (\n\nSELECT \n\ncategory,\nAccountID,\nMonthDate,\n[MemberGrade]\t,\nBranchGroup,\t\nGender\t,\ncertificationGroup\t,\nCertificationLevel,\n[PPP],\nAccountObjID,\n[Email]\t,\nAccountType\t,\nMembershipNumber,\nDateOfBirth__c\t,\nDays_since_Current_Membership_Expiry__c,\nPersonFullName\t,\nCurrentMembershipExpiry\t,\nJoinedDate\t,\nBranch\t,\nGeography,\nWorkCountry,\nHomeCountry\t,\nFormer_Billing_Grade1__c\t,\nMembership_Status,\nBillingGradeConcat,\nExtractDate\t,\n[FYYear]\t,\nFY\t,\nMonth, \nBillingGrade,\nBGG, \nHeirarchy, \n\n \n    CASE  \n\t--Professinal Segments\n        WHEN [Heirarchy] = 'Professional'\n\t\tAND\n\t\t[BillingGrade] NOT IN ('5 - Life Member', \n\t\t'13 - Honoured', \n\t\t'1 - Continuing', \n\t\t'8 - Retired', \n\t\t'3 - Full Fee',\n\t\t'2 - PPP Full Fee',\n\t\t'17 - PPP MOU2', \n\t\t'16 - PPP MOU2') \n\t\tTHEN 'Member, Senior Member, Fellow'  \n   \n        WHEN [Heirarchy] = 'Professional' \n\t\tAND\n\t\t[BillingGrade] \n\t\tIN \n\t\t('5 - Life Member', \n\t\t'13 - Honoured', \n\t\t'1 - Continuing') \n\t\tTHEN 'Life Members, Hon Members'        \n\n        WHEN [Heirarchy] = 'Professional'\n\t\tAND\n\t\t[BillingGrade] = '3 - Full Fee' \n\t\tTHEN 'Full Fee (Individual)'        \n\n        WHEN [Heirarchy] = 'Professional'\n\t\tAND\n\t\t[BillingGrade] IN (\n\t\t'2 - PPP Full Fee', \n\t\t'17 - PPP MOU2', \n\t\t'16 - PPP MOU2')\n\t\tTHEN 'Full Fee (PPP)'        \n\n        WHEN [Heirarchy] IN ( 'Professional', 'Full Fee Associates')\n\t\tAND \n\t\t[BillingGrade] = '8 - Retired' \n\t\tTHEN 'Retired'        \n  \n      --Full Fee Segments      \n        WHEN [Heirarchy] = 'Full Fee Associates' \n\t\tAND \n\t\t[BillingGrade] \n\t\tIN ('3 - Full Fee',\n\t\t'5 - Life Member',\n\t\t'1 - Continuing') \n\t\tTHEN 'Full Fee Associates (Individual)'  \n\t\t\n        WHEN [Heirarchy] = 'Full Fee Associates' \n\t\tAND \n\t\t[BillingGrade] \n\t\tIN ('2 - PPP Full Fee',\n\t\t'17 - PPP MOU2', \n\t\t'16 - PPP MOU2')\n\t\tTHEN 'Full Fee Associates (PPP)'        \n\n            \n\n\t   --Discounted \n              \n        WHEN [Heirarchy] = 'Discounted (Full Benefits)'\n\t\tAND\n\t\t[BillingGrade] IN\n\t\t('10 - Student - PPP',\n\t\t'11 - Student', \n\t\t'15 - Student - ACSF') \n\t\tTHEN 'Students'        \n\n        WHEN [Heirarchy] = 'Discounted (Full Benefits)'\n\t\tAND \n\t\t[BillingGrade] \n\t\tIN ('4 - Graduate - 1st Year',\n\t\t'7 - Graduate - 2nd Year')\n\t\tTHEN 'Graduate'        \n\n        WHEN [Heirarchy] = 'Discounted (Full Benefits)' \n\t\tAND \n\t\t[BillingGrade] = '16 - Unemployed / On Hiatus' \n\t\tTHEN 'Unemployed'   \n \n --Subscriber\n            \n        WHEN [Heirarchy] = 'Subscribers (Discounted Limited Benefits)'\n\t\tAND \n\t\t[BillingGrade] NOT IN\n\t\t('19 - Subscriber - PPP',\n\t\t'18 - Subscriber - PPP') \n\t\tTHEN 'Individuals'     \n\t\t\n        WHEN [Heirarchy] = 'Subscribers (Discounted Limited Benefits)'\n\t\tAND\n\t\t[BillingGrade] IN\n\t\t('19 - Subscriber - PPP', \n\t\t'18 - Subscriber - PPP')\n\t\tTHEN 'PPP'        \n\n        WHEN [Heirarchy] = 'Professional Year'\n\t\tTHEN 'Professional Year'        \n\n        WHEN [Heirarchy] = 'Complimentary (Full Benefits)' \n\t\tTHEN 'Complimentary'        \n\n        WHEN [Heirarchy] = 'Skills Applicants'\n\t\tTHEN 'Skills Applicants'        \n\n\t\t  WHEN [BGG] = 'Overseas' AND [Heirarchy] != 'Professional' \n\t\t  THEN 'Skills Applicants'  \n\n    END as subsegments\nFROM CTE3)\n\n\nselect * from CTE4\n\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "delete from membership.Mem_dashboard01\nwhere monthdate ='@{variables('date')}'\nand  category ='Active Unfinancial'",
									"type": "Expression"
								},
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "category",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "category",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MonthDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "MonthDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "MemberGrade",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MemberGrade",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BranchGroup",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BranchGroup",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "certificationGroup",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "certificationGroup",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CertificationLevel",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CertificationLevel",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PPP",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PPP",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountObjID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountObjID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DateOfBirth__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "DateOfBirth__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Days_since_Current_Membership_Expiry__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Days_since_Current_Membership_Expiry__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "PersonFullName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PersonFullName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CurrentMembershipExpiry",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "CurrentMembershipExpiry",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "JoinedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "JoinedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Branch",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Branch",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Geography",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Geography",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WorkCountry",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "WorkCountry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HomeCountry",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "HomeCountry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Former_Billing_Grade1__c",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Former_Billing_Grade1__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BGG",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BGG",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BillingGradeConcat",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BillingGradeConcat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExtractDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "ExtractDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "FYYear",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FYYear",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BillingGrade",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BillingGrade",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Heirarchy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Heirarchy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "subsegments",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "subsegments",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Membership_Status",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Membership_Status",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSQLSP",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "Mem_dashboard01",
									"schemaname": "membership"
								}
							}
						]
					},
					{
						"name": "Set end of the month as Date",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "date",
							"value": {
								"value": "@formatDateTime(addDays(startOfMonth(addToTime(utcnow(), 1, 'Month')), -1), 'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"date": {
						"type": "String",
						"defaultValue": "'2024-12-31'"
					}
				},
				"folder": {
					"name": "ACS/Membership/Monthly"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSQLSP')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Case Finalised Forecast')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL TO DataLake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "StartDatabricksCluster",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select date, count(*) as total  from [psas].[V_MetricLC_FromAssessor_CaseFinalised] where date > '2018-01-01'\ngroup by date \norder by date ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSQLSP",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_DatabricksPremiumFolder",
								"type": "DatasetReference",
								"parameters": {
									"filename": "casefinalised",
									"Foldername": null
								}
							}
						]
					},
					{
						"name": "Prophet Case finalised",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "SQL TO DataLake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/prashant.yadvendra@acs.org.au/Machine Learning ACS/Prophet Case Finalised Best Notebook"
						},
						"linkedServiceName": {
							"referenceName": "ACS Databricks Premium",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "StartDatabricksCluster",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "StartDatabricksCluster",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ACS/MSA Forecasting"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSQLSP')]",
				"[concat(variables('factoryId'), '/datasets/ds_DatabricksPremiumFolder')]",
				"[concat(variables('factoryId'), '/linkedServices/ACS Databricks Premium')]",
				"[concat(variables('factoryId'), '/pipelines/StartDatabricksCluster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Continuing Monthly')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Continuing Members",
						"description": "",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set end of the month as Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\n---[ Creating Data For  Continuing V 0.2]\n---Versioning starts with V0.1 (It means this is second version of the original script)\n-- A is the the Account table Output while B is the contract table here \n--30 columns in CTE \n\n\nWITH CTE AS (\n    SELECT \n\tcategory='Continuing', \n\tB.AccountID  , \n\tEOMONTH(GETDATE()) as MonthDate, \n\n     CASE \n\t WHEN A.MemberGrade__c  IS NULL \n\t  Then B.Grade__c\n\t  Else A.MemberGrade__c \n\t END \n\t AS [MemberGrade],\n\n\tCASE \n\t  WHEN A.BillingGrade__c  IS NULL \n\t\tTHEN  B.MemberBillingGrade__c \n\t\tWHEN A.BillingGrade__c IN ( '14 - Student - PYear' ,  '14 – Student – PYear' , '16 - Student - PYear',  '17 - Student - PYear' , '18 - Student - PYear' ) \n\t\tThen  '14 - Student - PYear'         \n\t  ELSE  A.BillingGrade__c \n\t\tEND \n\t\tAS [BillingGrade], \n\n       --We create BranchGroup from Branch Infromation avaialble in Account table  \n\t\tCASE            \n\t\twhen A.branch__c ='Canberra'  then  'CANB'          \n\t\twhen A.branch__c ='New South Wales'  then  'NSW'          \n\t\twhen A.branch__c ='Northern Territory' then  'NT'          \n\t\twhen A.branch__c ='Overseas' then  'os'          \n\t\twhen A.branch__c IN  ('Queensland' , 'South Pacific Overseas')  then  'QLD'          \n\t\twhen A.branch__c ='South Australia' then  'SA'          \n\t\twhen A.branch__c ='Tasmania' then  'TAS'          \n\t\twhen A.branch__c ='Victoria' then  'VIC'          \n\t\twhen A.branch__c ='Western Australia' then  'WA'          \n\t\twhen A.branch__C is NULL and HiddenUserLocationState__c ='Overseas' then 'os'          \n\t\tELSE null          \n       END as [BranchGroup]  , \n\t\t\n\n\t\t-- Codifying the gender from Account table & assessment Table where ever Present \n\t\tCASE           \n\t\tWhen A.Gender__c in ('F', 'Female' )  or  A.Title__c  in ('Miss', 'Mrs', 'Ms')  Then 'Female'          \n\t\tWhen A.Gender__c in ('MALE', 'M')  or  A.Title__c  in ('Mr.', 'Sir', 'Ms')   then 'Male'          \n\t\tWhen A.Gender__c is NULL then (select DISTINCT(c.Applicant_Title__c) from  [dbo].[assessment] c  where B.accountid = c.applicantname__C  )          \n\t\telse A.Gender__c          \n\t\tend as [Gender]    , \n\n\t\t\n\t\t\n\t\t--Codifying certification level into [certificationGroup] from Account object \n\t\tCASE          \n\t\twhen  CertificationLevel__c in ('CP','CP Lapsed') then 'CP'          \n\t\twhen CertificationLevel__c in ('CT','CT Lapsed') then 'CT'          \n\t\twhen CertificationLevel__c in ('Not Certified') then 'Not Certified'          \n\t\telse NULL          \n\t\tend as [certificationGroup],\n\t\t\n\t\t---Fetching Attributes from Account table \n\n\t\tCertificationLevel__c as  [CertificationLevel] ,           \n\t\t A.PPP__c as PPP ,              \n\t\t A.id as [AccountObjID],           \n\t\t A.email__c as [Email],           \n\t\t A.type as [AccountType],          \n\t\t A.MembershipNumber__c as [MembershipNumber],    \n\t\t A.DateOfBirth__c, \n\t\tA.Days_since_Current_Membership_Expiry__c, \n\t\tA.HiddenFullName__c as [PersonFullName],          \n\t\tA.CurrentMembershipExpiry__c as [CurrentMembershipExpiry],          \n\t\tA.PersonAccountJoinedDate__c as [JoinedDate],  \n\t\tA.branch__c as [Branch],           \n\t\tA.Geography__c as [Geography],           \n\t\tA.[ShippingCountry] as [WorkCountry],           \n\t\tA.[BillingCountry] as [HomeCountry],       \n\t\tA.Former_Billing_Grade1__c  ,    \n\t\t\n\t\tA.Membership_Status__c as AccountStatus,\n\t\tB.status as contractStatus, \n\n\t  CASE \n\t   WHEN A.Membership_Status__c  IS NULL \n\t   Then B.Status \n\t   ELSE A.Membership_Status__c\n\t   END as Membership_Status,       \n\t\t\n\t\t\n\n\t--Concanating Billing Grade & Former Billing Grades into BillingGradeConcat , To be used in next CTE \n\t\tCONCAT(A.BillingGrade__c, '_',A.Former_Billing_Grade1__c) as BillingGradeConcat ,  \n\t\t\t   \n\t\tCONVERT(DATE, DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0)) AS ExtractDate,  --it will return the First Day of the month on any day , '2024-06-01'\n\t\t\n\t\t LEFT(DATENAME(MONTH, GETDATE()), 3) + '-' + RIGHT(CONVERT(VARCHAR(4), YEAR(GETDATE())), 2) AS [FYYear],  --It will return month & Year , exmaple Jun-24 \n\n\n\t\t--Case statement will look for financial year \n\t    CASE\n\t\tWHEN CONVERT(DATE, DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0))  between '2024-07-01' and '2025-06-30'\n\t\tTHEN 'FY 25'\n\t\tWHEN CONVERT(DATE, DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0))  between '2023-07-01' and '2024-06-30'\n\t\tTHEN 'FY 24'\n\t\t ELSE NULL \n\t\tEND \n\t\tas [FY],\t\n\t\t\n\t\tLEFT(LEFT(DATENAME(MONTH, GETDATE()), 3) + '-' + RIGHT(CONVERT(VARCHAR(4), YEAR(GETDATE())), 2),3)   AS [Month]     --it will return the current month \n\t  \t  \n\t --update the Function here \n      from [salesforce].[Contract]  B\n\t  Inner join  [salesforce].[Account] A \n\t  on B.AccountId=A.id\n\t  where  B.currentmembership__c =1\n\t  and  B.Status IN ('Active Financial') \n\t-- and B.accountid not in  ( select Newmembers  from  [membership].[members_renew12months_A](('@{variables('date')}')  )\n\t and B.accountid not in  ( select Newmembers  from  [membership].[members_renew12months_A]('2024-12-31'))\n     -- and B.accountid not in  ( select Newmembers from   [membership].[members_new12month_A]('@{variables('date')}')  )\n\t and B.accountid not in  ( select Newmembers from   [membership].[members_new12month_A]('2024-12-31'))\n\t  \n\n\n\n)\n,\n-----Updating the Billing Grade Values -------\n\n\nCTE1 \nAS\n(\nselect \ncategory,\nAccountID,\nMonthDate,\n[MemberGrade]\t,\nBranchGroup,\t\nGender\t,\ncertificationGroup\t,\nCertificationLevel,\n[PPP],\nAccountObjID,\n[Email]\t,\nAccountType\t,\nMembershipNumber,\n DateOfBirth__c\t,\nDays_since_Current_Membership_Expiry__c,\nPersonFullName\t,\nCurrentMembershipExpiry\t,\nJoinedDate\t,\nBranch\t,\nGeography,\nWorkCountry,\nHomeCountry\t,\nFormer_Billing_Grade1__c\t,\nMembership_Status,\nBillingGradeConcat,\nExtractDate\t,\n[FYYear]\t,\nFY\t,\nMonth, \n\n--Updating Billing Grade based on Previous Billing Grades \nCASE     \n   WHEN   Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30  and billinggradeconcat ='3 - Full Fee_2 - PPP Full fee' \n   Then  '2 - PPP Full fee'    \n   WHEN Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and  billinggradeconcat ='3 - Full Fee_1 - Continuing'\n   Then   '1 - Continuing'    \n   WHEN Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and  billinggradeconcat ='7 - Graduate - 2nd Year_4 - Graduate - 1st Year' \n   Then    '4 - Graduate - 1st Year'    \n   WHEN   Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and   billinggradeconcat ='3 - Full Fee_7 - Graduate - 2nd Year' \n   Then   '7 - Graduate - 2nd Year'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='4 - Graduate - 1st Year_10 - Student - PPP' \n   Then  '10 - Student - PPP'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='4 - Graduate - 1st Year_11 - Student' \n   Then   '11 - Student'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and   billinggradeconcat ='3 - Full Fee_12 - Complimentary' \n   Then  '12 - Complimentary'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='3 - Full Fee 13 - Honoured' \n   Then  '13 - Honoured'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and   billinggradeconcat ='4 - Graduate - 1st Year_14 - Student - PYear'  \n   Then  '14 - Student - PYear'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='4 - Graduate - 1st Year_15 - Student - ACSF' \n   Then   '15 - Student - ACSF'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='3 - Full Fee_16 - Unemployed / On Hiatus' \n   Then  '16 - Unemployed / On Hiatus'    \n  WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='18 - Digital Subscriber 20 - Skills Applicant' \n  Then  '20 - Skills Applicant'    \n  ELSE [BillingGrade]\n   END    \n   AS [BillingGrade]\n\n\nfrom CTE\n\n)\n\n, \n\n----- Transofromation Heirarchy & Subsegment  --------------------\n----- we have upgraded billing grade in previous CTE  which is also used by BGG , create  BGG in this cte \n--30 columns \n--we are using this CTE to create the BGG column using billing grade\nCTE2 \nAS (\n    SELECT \n\t\ncategory,\nAccountID,\nMonthDate,\n[MemberGrade]\t,\nBranchGroup,\t\nGender\t,\ncertificationGroup\t,\nCertificationLevel,\n[PPP],\nAccountObjID,\n[Email]\t,\nAccountType\t,\nMembershipNumber,\nDateOfBirth__c\t,\nDays_since_Current_Membership_Expiry__c,\nPersonFullName\t,\nCurrentMembershipExpiry\t,\nJoinedDate\t,\nBranch\t,\nGeography,\nWorkCountry,\nHomeCountry\t,\nFormer_Billing_Grade1__c\t,\nMembership_Status,\nBillingGradeConcat,\nExtractDate\t,\n[FYYear]\t,\nFY\t,\nMonth, \nBillingGrade,\n\n\n\t\t--Codifying Billing grade into BGG from Account Object \n\t    CASE           \n\t\tWhen [BillingGrade] in ('0 - n/a', '1 - Continuing' , '12 - Complimentary','13 - Honoured', '16 - Unemployed / On Hiatus', '5 - Life Member')   Then 'Other'          \n\t\tWhen [BillingGrade] in ('10 - Student - PPP', '11 - Student', '15 - Student - ACSF', '15 – Student – ACSF')   then 'Student'          \n\t\tWhen [BillingGrade] in ('14 - Student - PYear', '14 – Student – PYear', '16 - Student - PYear', '17 - Student - PYear', '18 - Student - PYear') then 'Professional Year'          \n\t\tWhen [BillingGrade] in ('17 - PPP MOU2', '2 - PPP Full fee') then 'PPP'          \n\t\tWhen [BillingGrade] in ('19 - Subscriber - PPP') then 'Subscriber'          \n\t\tWhen [BillingGrade] in ('20 - Skills Applicant') then 'Overseas'          \n\t\tWhen [BillingGrade] in ('7 - Graduate - 2nd Year') then 'Graduate'          \n\t\tWhen [BillingGrade] in ('3 - Full Fee') then 'Full Fee'          \n\t\tWhen [BillingGrade] in ('8 - Retired') then 'Retired'          \n\t\telse NULL           \n\t\tend as [BGG]\n\n         from CTE1), \n\n\n--We create  Heirarchy based on MemberGrade & Billing Grade \n-- we Update Branch Group based on BGG again\n\n\n\t\tCTE3 as (\n\n\n\t\tselect \ncategory,\nAccountID,\nMonthDate,\n[MemberGrade]\t,\nGender\t,\ncertificationGroup\t,\nCertificationLevel,\n[PPP],\nAccountObjID,\n[Email]\t,\nAccountType\t,\nMembershipNumber,\nDateOfBirth__c\t,\nDays_since_Current_Membership_Expiry__c,\nPersonFullName\t,\nCurrentMembershipExpiry\t,\nJoinedDate\t,\nBranch\t,\nGeography,\nWorkCountry,\nHomeCountry\t,\nFormer_Billing_Grade1__c\t,\nMembership_Status,\nBillingGradeConcat,\nExtractDate\t,\n[FYYear]\t,\nFY\t,\nMonth, \nBillingGrade,\nBGG, \n\n\nCASE \nWhen BGG ='Overseas' THEN  'OS'\n       ELSE BranchGroup \n\t END  as BranchGroup , \n\n\n        CASE    \n            WHEN [MemberGrade] IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow')\n\t\t\tTHEN 'Professional'    \n\n            WHEN [MemberGrade] IN ( 'Associate' )\n\t\t\t AND \n\t\t\t[BillingGrade] IN (    \n                '1 - Continuing', \n\t\t\t\t'3 - Full Fee', \n\t\t\t\t'5 - Life Member',    \n                '2 - PPP Full Fee',\n\t\t\t\t'3 - Full Fee',\n\t\t\t\t'17 - PPP MOU2',    \n                '8 - Retired'  \n            ) THEN 'Full Fee Associates'    \n\n            WHEN ( [MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber', 'Honorary Member')    OR  [MemberGrade] in ('Associate') )\n                AND [BillingGrade] IN (    \n                    '4 - Graduate - 1st Year', \n\t\t\t\t\t'7 - Graduate - 2nd Year',    \n                    '10 - Student - PPP',\n\t\t\t\t\t'11 - Student',    \n                    '15 - Student - ACSF',\n\t\t\t\t\t'16 - Unemployed / On Hiatus'    \n                ) THEN 'Discounted (Full Benefits)'    \n\n            WHEN  ( [MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber', 'Honorary Member')   OR  [MemberGrade] in ('Associate') )\n                AND [BillingGrade]\n\t\t\t\tIN ('20 - Skills Applicant') \n\t\t\t\tTHEN 'Skills Applicants'  \n\n            WHEN  ( [MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber') OR  [MemberGrade] in ('Associate', 'Honorary Member') )\n\t\t\t                AND [BillingGrade] IN \n\t\t\t\t\t\t\t('11 - Complimentary', \n\t\t\t\t\t\t\t'12 - Complimentary', \n\t\t\t\t\t\t\t'13 - Honoured')\n\t\t\t\t\t\t\tTHEN 'Complimentary (Full Benefits)'  \n\n            WHEN  ( [MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber', 'Honorary Member')  OR  [MemberGrade] in ('Associate') )\n                AND [BillingGrade] IN \n\t\t\t\t('14 - Student - PYear') \n\t\t\t\tTHEN 'Professional Year'  \n\n            WHEN  ([MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber', 'Honorary Member')   OR  [MemberGrade] in ('Associate', 'Subscriber'))\n                AND [BillingGrade] IN (\n                    '18 - Digital Subscriber',\n\t\t\t\t\t'19 - Subscriber - PPP', \n\t\t\t\t\t'18 - Subscriber - PPP'    \n                ) THEN 'Subscribers (Discounted Limited Benefits)'\n            ELSE NULL -- Set Heirarchy to NULL if none of the conditions are met\n        END AS Heirarchy\n    FROM CTE2\n), \n\n\n\nCTE4\nAs (\n\nSELECT \n\ncategory,\nAccountID,\nMonthDate,\n[MemberGrade]\t,\nBranchGroup,\t\nGender\t,\ncertificationGroup\t,\nCertificationLevel,\n[PPP],\nAccountObjID,\n[Email]\t,\nAccountType\t,\nMembershipNumber,\nDateOfBirth__c\t,\nDays_since_Current_Membership_Expiry__c,\nPersonFullName\t,\nCurrentMembershipExpiry\t,\nJoinedDate\t,\nBranch\t,\nGeography,\nWorkCountry,\nHomeCountry\t,\nFormer_Billing_Grade1__c\t,\nMembership_Status,\nBillingGradeConcat,\nExtractDate\t,\n[FYYear]\t,\nFY\t,\nMonth, \nBillingGrade,\nBGG, \nHeirarchy, \n\n \n    CASE  \n\t--Professinal Segments\n        WHEN [Heirarchy] = 'Professional'\n\t\tAND\n\t\t[BillingGrade] NOT IN ('5 - Life Member', \n\t\t'13 - Honoured', \n\t\t'1 - Continuing', \n\t\t'8 - Retired', \n\t\t'3 - Full Fee',\n\t\t'2 - PPP Full Fee',\n\t\t'17 - PPP MOU2', \n\t\t'16 - PPP MOU2') \n\t\tTHEN 'Member, Senior Member, Fellow'  \n   \n        WHEN [Heirarchy] = 'Professional' \n\t\tAND\n\t\t[BillingGrade] \n\t\tIN \n\t\t('5 - Life Member', \n\t\t'13 - Honoured', \n\t\t'1 - Continuing') \n\t\tTHEN 'Life Members, Hon Members'        \n\n        WHEN [Heirarchy] = 'Professional'\n\t\tAND\n\t\t[BillingGrade] = '3 - Full Fee' \n\t\tTHEN 'Full Fee (Individual)'        \n\n        WHEN [Heirarchy] = 'Professional'\n\t\tAND\n\t\t[BillingGrade] IN (\n\t\t'2 - PPP Full Fee', \n\t\t'17 - PPP MOU2', \n\t\t'16 - PPP MOU2')\n\t\tTHEN 'Full Fee (PPP)'        \n\n        WHEN [Heirarchy] IN ( 'Professional', 'Full Fee Associates')\n\t\tAND \n\t\t[BillingGrade] = '8 - Retired' \n\t\tTHEN 'Retired'        \n  \n      --Full Fee Segments      \n        WHEN [Heirarchy] = 'Full Fee Associates' \n\t\tAND \n\t\t[BillingGrade] \n\t\tIN ('3 - Full Fee',\n\t\t'5 - Life Member',\n\t\t'1 - Continuing') \n\t\tTHEN 'Full Fee Associates (Individual)'  \n\t\t\n        WHEN [Heirarchy] = 'Full Fee Associates' \n\t\tAND \n\t\t[BillingGrade] \n\t\tIN ('2 - PPP Full Fee',\n\t\t'17 - PPP MOU2', \n\t\t'16 - PPP MOU2')\n\t\tTHEN 'Full Fee Associates (PPP)'        \n\n            \n\n\t   --Discounted \n              \n        WHEN [Heirarchy] = 'Discounted (Full Benefits)'\n\t\tAND\n\t\t[BillingGrade] IN\n\t\t('10 - Student - PPP',\n\t\t'11 - Student', \n\t\t'15 - Student - ACSF') \n\t\tTHEN 'Students'        \n\n        WHEN [Heirarchy] = 'Discounted (Full Benefits)'\n\t\tAND \n\t\t[BillingGrade] \n\t\tIN ('4 - Graduate - 1st Year',\n\t\t'7 - Graduate - 2nd Year')\n\t\tTHEN 'Graduate'        \n\n        WHEN [Heirarchy] = 'Discounted (Full Benefits)' \n\t\tAND \n\t\t[BillingGrade] = '16 - Unemployed / On Hiatus' \n\t\tTHEN 'Unemployed'   \n \n --Subscriber\n            \n        WHEN [Heirarchy] = 'Subscribers (Discounted Limited Benefits)'\n\t\tAND \n\t\t[BillingGrade] NOT IN\n\t\t('19 - Subscriber - PPP',\n\t\t'18 - Subscriber - PPP') \n\t\tTHEN 'Individuals'     \n\t\t\n        WHEN [Heirarchy] = 'Subscribers (Discounted Limited Benefits)'\n\t\tAND\n\t\t[BillingGrade] IN\n\t\t('19 - Subscriber - PPP', \n\t\t'18 - Subscriber - PPP')\n\t\tTHEN 'PPP'        \n\n        WHEN [Heirarchy] = 'Professional Year'\n\t\tTHEN 'Professional Year'        \n\n        WHEN [Heirarchy] = 'Complimentary (Full Benefits)' \n\t\tTHEN 'Complimentary'        \n\n        WHEN [Heirarchy] = 'Skills Applicants'\n\t\tTHEN 'Skills Applicants'        \n\n\t\t  WHEN [BGG] = 'Overseas' AND [Heirarchy] != 'Professional' \n\t\t  THEN 'Skills Applicants'  \n\n    END as subsegments\nFROM CTE3)\n\n\nselect * from CTE4\n\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "delete from  [membership].[Mem_dashboard01]\nwhere  monthdate ='@{variables('date')}'\nand  category ='Continuing'",
									"type": "Expression"
								},
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "category",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "category",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MonthDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "MonthDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "MemberGrade",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MemberGrade",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BranchGroup",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BranchGroup",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "certificationGroup",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "certificationGroup",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CertificationLevel",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CertificationLevel",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PPP",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PPP",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountObjID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountObjID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DateOfBirth__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "DateOfBirth__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Days_since_Current_Membership_Expiry__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Days_since_Current_Membership_Expiry__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "PersonFullName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PersonFullName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CurrentMembershipExpiry",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "CurrentMembershipExpiry",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "JoinedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "JoinedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Branch",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Branch",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Geography",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Geography",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WorkCountry",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "WorkCountry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HomeCountry",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "HomeCountry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Former_Billing_Grade1__c",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Former_Billing_Grade1__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BGG",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BGG",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BillingGradeConcat",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BillingGradeConcat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExtractDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "ExtractDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "FYYear",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FYYear",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BillingGrade",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BillingGrade",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Heirarchy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Heirarchy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "subsegments",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "subsegments",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Membership_Status",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Membership_Status",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSQLSP",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "Mem_dashboard01",
									"schemaname": "membership"
								}
							}
						]
					},
					{
						"name": "Set end of the month as Date",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "date",
							"value": {
								"value": "@formatDateTime(addDays(startOfMonth(addToTime(utcnow(), 1, 'Month')), -1), 'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"date": {
						"type": "String",
						"defaultValue": "@formatDateTime(addDays(startOfMonth(addToTime(utcnow(), 1, 'Month')), -1), 'yyyy-MM-dd')"
					}
				},
				"folder": {
					"name": "ACS/Membership/Monthly"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSQLSP')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dummy Test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "select LastModifiedDate from Assessment__c\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "assessment__c"
								}
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n\t[salesforcenew].[Assessment__c]\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "Assessment__c",
										"type": "Expression"
									},
									"schemaname": {
										"value": "salesforcenew",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lost Members Forecasting')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL TO DataLake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "StartDatabricksCluster",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from  [membership].[members_Lost_h]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSQLSP",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_DatabricksPremiumFolder",
								"type": "DatasetReference",
								"parameters": {
									"filename": "LostMembers",
									"Foldername": "Membership"
								}
							}
						]
					},
					{
						"name": "Prophet Lost Members forecast",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "SQL TO DataLake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/prashant.yadvendra@acs.org.au/Machine Learning ACS/Forecasting Membership/Lost Member Forecast"
						},
						"linkedServiceName": {
							"referenceName": "ACS Databricks Premium",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "StartDatabricksCluster",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "StartDatabricksCluster",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ACS/Membership/Forecasting"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSQLSP')]",
				"[concat(variables('factoryId'), '/datasets/ds_DatabricksPremiumFolder')]",
				"[concat(variables('factoryId'), '/linkedServices/ACS Databricks Premium')]",
				"[concat(variables('factoryId'), '/pipelines/StartDatabricksCluster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lost Monthly')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update dashboard_category Lost",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set end of the month as Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\n------Creating Data For Lost Numbers Monthly ---------------\n\n-- A is the the Account table Output while B is the Account ID's we get from our TVF \n--TVF [membership].[members_Lost_A]  : It will give how many members did we loose in current month, takes date as Parameter \n-- Question : if it takes timestamp till 11:59:00:00 or just the day thing  ?\n\n--We create EOM from the created date so even is created date is \"2024-05-31 23:59:00.000 \" when we do reporting and run scripts, this entry will have EOM as 2024-05-31, hence covered is previous month calculation\n\n--30 columns in CTE \nWITH CTE AS (\n    SELECT \n\tcategory='Lost',   --- categorise the Data as LosT \n\tB.LostMembers AS AccountID  , --From TVF we get account id's which were lost in that month \n\tB.DateStart as MonthDate, --TVF are based on EOM dates, it will always have EOM date coz of ALL months CTE logic used in TVF \n\n\n\t--If we do not see MemberGrade in Account table we try to find it from contract table, else use whatever we have in Account table \n     CASE \n\t WHEN A.MemberGrade__c  IS NULL \n\t  Then (select  C.Grade__c from [salesforce].[Contract] C  where C.accountid =B.LostMembers and  c.currentmembership__c =1)\n\t  Else A.MemberGrade__c \n\t END \n\t AS [MemberGrade], \n\n\t --If we do not see BillingGrade__c in Account table we try to find it from contract table, else use whatever we have in Account table \n      CASE \n\t  WHEN A.BillingGrade__c  IS NULL \n\t\tTHEN   (select  C.MemberBillingGrade__c from [salesforce].[Contract] C  where C.accountid =B.LostMembers and  c.currentmembership__c =1)\n\t\tWHEN A.BillingGrade__c IN ( '14 - Student - PYear' ,  '14 – Student – PYear' , '16 - Student - PYear',  '17 - Student - PYear' , '18 - Student - PYear' ) \n\t\tThen  '14 - Student - PYear'         \n\t  ELSE  A.BillingGrade__c \n\t\tEND \n\t\tAS [BillingGrade], \n\n       --We create BranchGroup from Branch Infromation avaialble in Account table  \n\t\tCASE            \n\t\twhen A.branch__c ='Canberra'  then  'CANB'          \n\t\twhen A.branch__c ='New South Wales'  then  'NSW'          \n\t\twhen A.branch__c ='Northern Territory' then  'NT'          \n\t\twhen A.branch__c ='Overseas' then  'os'          \n\t\twhen A.branch__c IN  ('Queensland' , 'South Pacific Overseas')  then  'QLD'          \n\t\twhen A.branch__c ='South Australia' then  'SA'          \n\t\twhen A.branch__c ='Tasmania' then  'TAS'          \n\t\twhen A.branch__c ='Victoria' then  'VIC'          \n\t\twhen A.branch__c ='Western Australia' then  'WA'          \n\t\twhen A.branch__C is NULL and HiddenUserLocationState__c ='Overseas' then 'os'          \n\t\tELSE null          \n       END as [BranchGroup]  , \n\t\t\n\n\t\t-- Codifying the gender from Account table & assessment Table where ever Present \n\t\tCASE           \n\t\tWhen A.Gender__c in ('F', 'Female' )  or  A.Title__c  in ('Miss', 'Mrs', 'Ms')  Then 'Female'          \n\t\tWhen A.Gender__c in ('MALE', 'M')  or  A.Title__c  in ('Mr.', 'Sir', 'Ms')   then 'Male'          \n\t\tWhen A.Gender__c is NULL then (select DISTINCT(c.Applicant_Title__c) from  [dbo].[assessment] c  where B.LostMembers = c.applicantname__C )          \n\t\telse A.Gender__c          \n\t\tend as [Gender]    , \n\n\t\t\n\t\t\n\t\t--Codifying certification level into [certificationGroup] from Account object \n\t\tCASE          \n\t\twhen  CertificationLevel__c in ('CP','CP Lapsed') then 'CP'          \n\t\twhen CertificationLevel__c in ('CT','CT Lapsed') then 'CT'          \n\t\twhen CertificationLevel__c in ('Not Certified') then 'Not Certified'          \n\t\telse NULL          \n\t\tend as [certificationGroup],\n\t\t\n\t\t---Fetching Attributes from Account table \n\n\t\tCertificationLevel__c as  [CertificationLevel] ,           \n\t\t A.PPP__c as PPP ,              \n\t\t A.id as [AccountObjID],           \n\t\t A.email__c as [Email],           \n\t\t A.type as [AccountType],          \n\t\t A.MembershipNumber__c as [MembershipNumber],    \n\t\t A.DateOfBirth__c, \n\t\tA.Days_since_Current_Membership_Expiry__c, \n\t\tA.HiddenFullName__c as [PersonFullName],          \n\t\tA.CurrentMembershipExpiry__c as [CurrentMembershipExpiry],          \n\t\tA.PersonAccountJoinedDate__c as [JoinedDate],  \n\t\tA.branch__c as [Branch],           \n\t\tA.Geography__c as [Geography],           \n\t\tA.[ShippingCountry] as [WorkCountry],           \n\t\tA.[BillingCountry] as [HomeCountry],           \n\t\tA.Former_Billing_Grade1__c  ,           \n\t\t\n\n\t\t---Fetching Membership_Status of the account from Account object and if not present doing a lookup in Contract table \n\t   CASE \n\t   WHEN A.Membership_Status__c  IS NULL \n\t   Then (select  C.Status from [salesforce].[Contract] C  where C.accountid =B.LostMembers and  c.currentmembership__c =1)\n\t   ELSE A.Membership_Status__c\n\t   END \n\t   as Membership_Status,       \n\t\t\n\n\t--Concanating Billing Grade & Former Billing Grades into BillingGradeConcat , To be used in next CTE \n\t\tCONCAT(A.BillingGrade__c, '_',A.Former_Billing_Grade1__c) as BillingGradeConcat ,  \n\n\n\n\t\tCONVERT(DATE, DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0)) AS ExtractDate,  --it will return the First Day of the month on any day , '2024-06-01'\n\t\t\n\t\t LEFT(DATENAME(MONTH, GETDATE()), 3) + '-' + RIGHT(CONVERT(VARCHAR(4), YEAR(GETDATE())), 2) AS [FYYear],  --It will return month & Year , exmaple Jun-24 \n\n\n\t\t--Case statement will look for financial year \n\t    CASE\n\t\tWHEN CONVERT(DATE, DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0))  between '2024-07-01' and '2025-06-30'\n\t\tTHEN 'FY 25'\n\t\tWHEN CONVERT(DATE, DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0))  between '2023-07-01' and '2024-06-30'\n\t\tTHEN 'FY 24'\n\t\t ELSE NULL \n\t\tEND \n\t\tas [FY],\t\n\t\t\n\t\tLEFT(LEFT(DATENAME(MONTH, GETDATE()), 3) + '-' + RIGHT(CONVERT(VARCHAR(4), YEAR(GETDATE())), 2),3)   AS [Month]     --it will return the current month \n\t  \t  \n\t\t  --update the Function here \n\t      \tFROM  [membership].[members_Lost_A]('@{variables('date')}') B\n\t\t  --FROM  [membership].[members_Lost_A]('2024-06-30') B\n\t\t\tINNER JOIN [salesforce].[Account] A \n\t\t\tON B.LostMembers = A.id\n)\n,\n-----Updating the Billing Grade Values -------\n\n\nCTE1 \nAS\n(\nselect \ncategory,\nAccountID,\nMonthDate,\n[MemberGrade]\t,\nBranchGroup,\t\nGender\t,\ncertificationGroup\t,\nCertificationLevel,\n[PPP],\nAccountObjID,\n[Email]\t,\nAccountType\t,\nMembershipNumber,\n DateOfBirth__c\t,\nDays_since_Current_Membership_Expiry__c,\nPersonFullName\t,\nCurrentMembershipExpiry\t,\nJoinedDate\t,\nBranch\t,\nGeography,\nWorkCountry,\nHomeCountry\t,\nFormer_Billing_Grade1__c\t,\nMembership_Status,\nBillingGradeConcat,\nExtractDate\t,\n[FYYear]\t,\nFY\t,\nMonth, \n\n--Updating Billing Grade based on Previous Billing Grades \nCASE     \n   WHEN   Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30  and billinggradeconcat ='3 - Full Fee_2 - PPP Full fee' \n   Then  '2 - PPP Full fee'    \n   WHEN Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and  billinggradeconcat ='3 - Full Fee_1 - Continuing'\n   Then   '1 - Continuing'    \n   WHEN Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and  billinggradeconcat ='7 - Graduate - 2nd Year_4 - Graduate - 1st Year' \n   Then    '4 - Graduate - 1st Year'    \n   WHEN   Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and   billinggradeconcat ='3 - Full Fee_7 - Graduate - 2nd Year' \n   Then   '7 - Graduate - 2nd Year'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='4 - Graduate - 1st Year_10 - Student - PPP' \n   Then  '10 - Student - PPP'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='4 - Graduate - 1st Year_11 - Student' \n   Then   '11 - Student'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and   billinggradeconcat ='3 - Full Fee_12 - Complimentary' \n   Then  '12 - Complimentary'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='3 - Full Fee 13 - Honoured' \n   Then  '13 - Honoured'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and   billinggradeconcat ='4 - Graduate - 1st Year_14 - Student - PYear'  \n   Then  '14 - Student - PYear'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='4 - Graduate - 1st Year_15 - Student - ACSF' \n   Then   '15 - Student - ACSF'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='3 - Full Fee_16 - Unemployed / On Hiatus' \n   Then  '16 - Unemployed / On Hiatus'    \n  WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='18 - Digital Subscriber 20 - Skills Applicant' \n  Then  '20 - Skills Applicant'    \n  ELSE [BillingGrade]\n   END    \n   AS [BillingGrade]\n\n\nfrom CTE\n\n)\n\n, \n\n----- Transofromation Heirarchy & Subsegment  --------------------\n----- we have upgraded billing grade in previous CTE  which is also used by BGG , create  BGG in this cte \n--30 columns \n--we are using this CTE to create the BGG column using billing grade\nCTE2 \nAS (\n    SELECT \n\t\ncategory,\nAccountID,\nMonthDate,\n[MemberGrade]\t,\nBranchGroup,\t\nGender\t,\ncertificationGroup\t,\nCertificationLevel,\n[PPP],\nAccountObjID,\n[Email]\t,\nAccountType\t,\nMembershipNumber,\nDateOfBirth__c\t,\nDays_since_Current_Membership_Expiry__c,\nPersonFullName\t,\nCurrentMembershipExpiry\t,\nJoinedDate\t,\nBranch\t,\nGeography,\nWorkCountry,\nHomeCountry\t,\nFormer_Billing_Grade1__c\t,\nMembership_Status,\nBillingGradeConcat,\nExtractDate\t,\n[FYYear]\t,\nFY\t,\nMonth, \nBillingGrade,\n\n\n\t\t--Codifying Billing grade into BGG from Account Object \n\t    CASE           \n\t\tWhen [BillingGrade] in ('0 - n/a', '1 - Continuing' , '12 - Complimentary','13 - Honoured', '16 - Unemployed / On Hiatus', '5 - Life Member')   Then 'Other'          \n\t\tWhen [BillingGrade] in ('10 - Student - PPP', '11 - Student', '15 - Student - ACSF', '15 – Student – ACSF')   then 'Student'          \n\t\tWhen [BillingGrade] in ('14 - Student - PYear', '14 – Student – PYear', '16 - Student - PYear', '17 - Student - PYear', '18 - Student - PYear') then 'Professional Year'          \n\t\tWhen [BillingGrade] in ('17 - PPP MOU2', '2 - PPP Full fee') then 'PPP'          \n\t\tWhen [BillingGrade] in ('19 - Subscriber - PPP') then 'Subscriber'          \n\t\tWhen [BillingGrade] in ('20 - Skills Applicant') then 'Overseas'          \n\t\tWhen [BillingGrade] in ('7 - Graduate - 2nd Year') then 'Graduate'          \n\t\tWhen [BillingGrade] in ('3 - Full Fee') then 'Full Fee'          \n\t\tWhen [BillingGrade] in ('8 - Retired') then 'Retired'          \n\t\telse NULL           \n\t\tend as [BGG]\n\n         from CTE1), \n\n\n--We create  Heirarchy based on MemberGrade & Billing Grade \n-- we Update Branch Group based on BGG again\n\n\n\t\tCTE3 as (\n\n\n\t\tselect \ncategory,\nAccountID,\nMonthDate,\n[MemberGrade]\t,\nGender\t,\ncertificationGroup\t,\nCertificationLevel,\n[PPP],\nAccountObjID,\n[Email]\t,\nAccountType\t,\nMembershipNumber,\nDateOfBirth__c\t,\nDays_since_Current_Membership_Expiry__c,\nPersonFullName\t,\nCurrentMembershipExpiry\t,\nJoinedDate\t,\nBranch\t,\nGeography,\nWorkCountry,\nHomeCountry\t,\nFormer_Billing_Grade1__c\t,\nMembership_Status,\nBillingGradeConcat,\nExtractDate\t,\n[FYYear]\t,\nFY\t,\nMonth, \nBillingGrade,\nBGG, \n\n\nCASE \nWhen BGG ='Overseas' THEN  'OS'\n       ELSE BranchGroup \n\t END  as BranchGroup , \n\n\n        CASE    \n            WHEN [MemberGrade] IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow')\n\t\t\tTHEN 'Professional'    \n\n            WHEN [MemberGrade] IN ( 'Associate' )\n\t\t\t AND \n\t\t\t[BillingGrade] IN (    \n                '1 - Continuing', \n\t\t\t\t'3 - Full Fee', \n\t\t\t\t'5 - Life Member',    \n                '2 - PPP Full Fee',\n\t\t\t\t'3 - Full Fee',\n\t\t\t\t'17 - PPP MOU2',    \n                '8 - Retired'  \n            ) THEN 'Full Fee Associates'    \n\n            WHEN ( [MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber', 'Honorary Member')    OR  [MemberGrade] in ('Associate') )\n                AND [BillingGrade] IN (    \n                    '4 - Graduate - 1st Year', \n\t\t\t\t\t'7 - Graduate - 2nd Year',    \n                    '10 - Student - PPP',\n\t\t\t\t\t'11 - Student',    \n                    '15 - Student - ACSF',\n\t\t\t\t\t'16 - Unemployed / On Hiatus'    \n                ) THEN 'Discounted (Full Benefits)'    \n\n            WHEN  ( [MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber', 'Honorary Member')   OR  [MemberGrade] in ('Associate') )\n                AND [BillingGrade]\n\t\t\t\tIN ('20 - Skills Applicant') \n\t\t\t\tTHEN 'Skills Applicants'  \n\n            WHEN  ( [MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber') OR  [MemberGrade] in ('Associate', 'Honorary Member') )\n\t\t\t                AND [BillingGrade] IN \n\t\t\t\t\t\t\t('11 - Complimentary', \n\t\t\t\t\t\t\t'12 - Complimentary', \n\t\t\t\t\t\t\t'13 - Honoured')\n\t\t\t\t\t\t\tTHEN 'Complimentary (Full Benefits)'  \n\n            WHEN  ( [MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber', 'Honorary Member')  OR  [MemberGrade] in ('Associate') )\n                AND [BillingGrade] IN \n\t\t\t\t('14 - Student - PYear') \n\t\t\t\tTHEN 'Professional Year'  \n\n            WHEN  ([MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber', 'Honorary Member')   OR  [MemberGrade] in ('Associate', 'Subscriber'))\n                AND [BillingGrade] IN (\n                    '18 - Digital Subscriber',\n\t\t\t\t\t'19 - Subscriber - PPP', \n\t\t\t\t\t'18 - Subscriber - PPP'    \n                ) THEN 'Subscribers (Discounted Limited Benefits)'\n            ELSE NULL -- Set Heirarchy to NULL if none of the conditions are met\n        END AS Heirarchy\n    FROM CTE2\n), \n\n\n\nCTE4\nAs (\n\nSELECT \n\ncategory,\nAccountID,\nMonthDate,\n[MemberGrade]\t,\nBranchGroup,\t\nGender\t,\ncertificationGroup\t,\nCertificationLevel,\n[PPP],\nAccountObjID,\n[Email]\t,\nAccountType\t,\nMembershipNumber,\nDateOfBirth__c\t,\nDays_since_Current_Membership_Expiry__c,\nPersonFullName\t,\nCurrentMembershipExpiry\t,\nJoinedDate\t,\nBranch\t,\nGeography,\nWorkCountry,\nHomeCountry\t,\nFormer_Billing_Grade1__c\t,\nMembership_Status,\nBillingGradeConcat,\nExtractDate\t,\n[FYYear]\t,\nFY\t,\nMonth, \nBillingGrade,\nBGG, \nHeirarchy, \n\n \n    CASE  \n\t--Professinal Segments\n        WHEN [Heirarchy] = 'Professional'\n\t\tAND\n\t\t[BillingGrade] NOT IN ('5 - Life Member', \n\t\t'13 - Honoured', \n\t\t'1 - Continuing', \n\t\t'8 - Retired', \n\t\t'3 - Full Fee',\n\t\t'2 - PPP Full Fee',\n\t\t'17 - PPP MOU2', \n\t\t'16 - PPP MOU2') \n\t\tTHEN 'Member, Senior Member, Fellow'  \n   \n        WHEN [Heirarchy] = 'Professional' \n\t\tAND\n\t\t[BillingGrade] \n\t\tIN \n\t\t('5 - Life Member', \n\t\t'13 - Honoured', \n\t\t'1 - Continuing') \n\t\tTHEN 'Life Members, Hon Members'        \n\n        WHEN [Heirarchy] = 'Professional'\n\t\tAND\n\t\t[BillingGrade] = '3 - Full Fee' \n\t\tTHEN 'Full Fee (Individual)'        \n\n        WHEN [Heirarchy] = 'Professional'\n\t\tAND\n\t\t[BillingGrade] IN (\n\t\t'2 - PPP Full Fee', \n\t\t'17 - PPP MOU2', \n\t\t'16 - PPP MOU2')\n\t\tTHEN 'Full Fee (PPP)'        \n\n        WHEN [Heirarchy] IN ( 'Professional', 'Full Fee Associates')\n\t\tAND \n\t\t[BillingGrade] = '8 - Retired' \n\t\tTHEN 'Retired'        \n  \n      --Full Fee Segments      \n        WHEN [Heirarchy] = 'Full Fee Associates' \n\t\tAND \n\t\t[BillingGrade] \n\t\tIN ('3 - Full Fee',\n\t\t'5 - Life Member',\n\t\t'1 - Continuing') \n\t\tTHEN 'Full Fee Associates (Individual)'  \n\t\t\n        WHEN [Heirarchy] = 'Full Fee Associates' \n\t\tAND \n\t\t[BillingGrade] \n\t\tIN ('2 - PPP Full Fee',\n\t\t'17 - PPP MOU2', \n\t\t'16 - PPP MOU2')\n\t\tTHEN 'Full Fee Associates (PPP)'        \n\n            \n\n\t   --Discounted \n              \n        WHEN [Heirarchy] = 'Discounted (Full Benefits)'\n\t\tAND\n\t\t[BillingGrade] IN\n\t\t('10 - Student - PPP',\n\t\t'11 - Student', \n\t\t'15 - Student - ACSF') \n\t\tTHEN 'Students'        \n\n        WHEN [Heirarchy] = 'Discounted (Full Benefits)'\n\t\tAND \n\t\t[BillingGrade] \n\t\tIN ('4 - Graduate - 1st Year',\n\t\t'7 - Graduate - 2nd Year')\n\t\tTHEN 'Graduate'        \n\n        WHEN [Heirarchy] = 'Discounted (Full Benefits)' \n\t\tAND \n\t\t[BillingGrade] = '16 - Unemployed / On Hiatus' \n\t\tTHEN 'Unemployed'   \n \n --Subscriber\n            \n        WHEN [Heirarchy] = 'Subscribers (Discounted Limited Benefits)'\n\t\tAND \n\t\t[BillingGrade] NOT IN\n\t\t('19 - Subscriber - PPP',\n\t\t'18 - Subscriber - PPP') \n\t\tTHEN 'Individuals'     \n\t\t\n        WHEN [Heirarchy] = 'Subscribers (Discounted Limited Benefits)'\n\t\tAND\n\t\t[BillingGrade] IN\n\t\t('19 - Subscriber - PPP', \n\t\t'18 - Subscriber - PPP')\n\t\tTHEN 'PPP'        \n\n        WHEN [Heirarchy] = 'Professional Year'\n\t\tTHEN 'Professional Year'        \n\n        WHEN [Heirarchy] = 'Complimentary (Full Benefits)' \n\t\tTHEN 'Complimentary'        \n\n        WHEN [Heirarchy] = 'Skills Applicants'\n\t\tTHEN 'Skills Applicants'        \n\n\t\t  WHEN [BGG] = 'Overseas' AND [Heirarchy] != 'Professional' \n\t\t  THEN 'Skills Applicants'  \n\n    END as subsegments\nFROM CTE3)\n\n\nselect * from CTE4\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "delete from membership.Mem_dashboard01\nwhere monthdate ='@{variables('date')}'\nand  category ='Lost'",
									"type": "Expression"
								},
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "category",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "category",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MonthDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "MonthDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "MemberGrade",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MemberGrade",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BranchGroup",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BranchGroup",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "certificationGroup",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "certificationGroup",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CertificationLevel",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CertificationLevel",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PPP",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PPP",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountObjID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountObjID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DateOfBirth__c",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DateOfBirth__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Days_since_Current_Membership_Expiry__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Days_since_Current_Membership_Expiry__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "PersonFullName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PersonFullName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CurrentMembershipExpiry",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "CurrentMembershipExpiry",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "JoinedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "JoinedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Branch",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Branch",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Geography",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Geography",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WorkCountry",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "WorkCountry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HomeCountry",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "HomeCountry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Former_Billing_Grade1__c",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Former_Billing_Grade1__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BGG",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BGG",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BillingGradeConcat",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BillingGradeConcat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExtractDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "ExtractDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "FYYear",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FYYear",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BillingGrade",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BillingGrade",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Heirarchy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Heirarchy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "subsegments",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "subsegments",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Membership_Status",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Membership_Status",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSQLSP",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "Mem_dashboard01",
									"schemaname": "membership"
								}
							}
						]
					},
					{
						"name": "Set end of the month as Date",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "date",
							"value": {
								"value": "@formatDateTime(addDays(startOfMonth(addToTime(utcnow(), 1, 'Month')), -1), 'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"date": {
						"type": "String",
						"defaultValue": "'2024-12-31'"
					}
				},
				"folder": {
					"name": "ACS/Membership/Monthly"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSQLSP')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/New Cases Forecast')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL TO DataLake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "StartDatabricksCluster",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select date, count(*) as total  from [psas].[V_MetricLC_InPrep_TobeAllocated] where date > '2018-01-01'\n\ngroup by date \norder by date ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSQLSP",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_DatabricksPremiumFolder",
								"type": "DatasetReference",
								"parameters": {
									"filename": "NewCases",
									"Foldername": null
								}
							}
						]
					},
					{
						"name": "Prophet Case finalised",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "SQL TO DataLake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/prashant.yadvendra@acs.org.au/Machine Learning ACS/Prophet New Cases Best Notebook"
						},
						"linkedServiceName": {
							"referenceName": "ACS Databricks Premium",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "StartDatabricksCluster",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "StartDatabricksCluster",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ACS/MSA Forecasting"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSQLSP')]",
				"[concat(variables('factoryId'), '/datasets/ds_DatabricksPremiumFolder')]",
				"[concat(variables('factoryId'), '/linkedServices/ACS Databricks Premium')]",
				"[concat(variables('factoryId'), '/pipelines/StartDatabricksCluster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/New Members forecasting')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL TO DataLake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "StartDatabricksCluster",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from  [membership].[members_new12month_h]\n  where\ndateStart >  '2017-12-31'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSQLSP",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_DatabricksPremiumFolder",
								"type": "DatasetReference",
								"parameters": {
									"filename": "NewMembers",
									"Foldername": "Membership"
								}
							}
						]
					},
					{
						"name": "StartDatabricksCluster",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "StartDatabricksCluster",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Prophet  NewMembers forecast",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "SQL TO DataLake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/prashant.yadvendra@acs.org.au/Machine Learning ACS/Forecasting Membership/New Members Forecast"
						},
						"linkedServiceName": {
							"referenceName": "ACS Databricks Premium",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ACS/Membership/Forecasting"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSQLSP')]",
				"[concat(variables('factoryId'), '/datasets/ds_DatabricksPremiumFolder')]",
				"[concat(variables('factoryId'), '/pipelines/StartDatabricksCluster')]",
				"[concat(variables('factoryId'), '/linkedServices/ACS Databricks Premium')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/New Monthly')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "update dashboard_category New",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set end of the month as Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\n------Creating Data For NEW Numbers Monthly ---------------\n\n-- A is the the Account table Output while B is the Account ID's we get from our TVF \n--TVF [membership].[members_new12month_A]  : It will give how many members did get , if it more then 12 months being Moribund and he or she returns, its a New \n-- Question : if it takes timestamp till 11:59:00:00 or just the day thing  ?\n--We create EOM from the created date so even is created date is \"2024-05-31 23:59:00.000 \" when we do reporting and run scripts, this entry will have EOM as 2024-05-31, hence covered is previous month calculation\n\n--30 columns in CTE \nWITH CTE AS (\n    SELECT \n\tcategory='New',   --- categorise the Data as New \n\tB.NewMembers AS AccountID  , --From TVF we get account id's which are New in that month \n\tB.DateStart as MonthDate, --TVF are based on EOM dates, it will always have EOM date coz of ALL months CTE logic used in TVF \n\n\n\t--If we do not see MemberGrade in Account table we try to find it from contract table, else use whatever we have in Account table \n     CASE \n\t WHEN A.MemberGrade__c  IS NULL \n\t  Then (select  C.Grade__c from [salesforce].[Contract] C  where C.accountid =B.NewMembers and  c.currentmembership__c =1)\n\t  Else A.MemberGrade__c \n\t END \n\t AS [MemberGrade], \n\n\t --If we do not see BillingGrade__c in Account table we try to find it from contract table, else use whatever we have in Account table \n      CASE \n\t  WHEN A.BillingGrade__c  IS NULL \n\t\tTHEN   (select  C.MemberBillingGrade__c from [salesforce].[Contract] C  where C.accountid =B.NewMembers and  c.currentmembership__c =1)\n\t\tWHEN A.BillingGrade__c IN ( '14 - Student - PYear' ,  '14 – Student – PYear' , '16 - Student - PYear',  '17 - Student - PYear' , '18 - Student - PYear' ) \n\t\tThen  '14 - Student - PYear'         \n\t  ELSE  A.BillingGrade__c \n\t\tEND \n\t\tAS [BillingGrade], \n\n       --We create BranchGroup from Branch Infromation avaialble in Account table  \n\t\tCASE            \n\t\twhen A.branch__c ='Canberra'  then  'CANB'          \n\t\twhen A.branch__c ='New South Wales'  then  'NSW'          \n\t\twhen A.branch__c ='Northern Territory' then  'NT'          \n\t\twhen A.branch__c ='Overseas' then  'os'          \n\t\twhen A.branch__c IN  ('Queensland' , 'South Pacific Overseas')  then  'QLD'          \n\t\twhen A.branch__c ='South Australia' then  'SA'          \n\t\twhen A.branch__c ='Tasmania' then  'TAS'          \n\t\twhen A.branch__c ='Victoria' then  'VIC'          \n\t\twhen A.branch__c ='Western Australia' then  'WA'          \n\t\twhen A.branch__C is NULL and HiddenUserLocationState__c ='Overseas' then 'os'          \n\t\tELSE null          \n       END as [BranchGroup]  , \n\t\t\n\n\t\t-- Codifying the gender from Account table & assessment Table where ever Present \n\t\tCASE           \n\t\tWhen A.Gender__c in ('F', 'Female' )  or  A.Title__c  in ('Miss', 'Mrs', 'Ms')  Then 'Female'          \n\t\tWhen A.Gender__c in ('MALE', 'M')  or  A.Title__c  in ('Mr.', 'Sir', 'Ms')   then 'Male'          \n\t\tWhen A.Gender__c is NULL then (select DISTINCT(c.Applicant_Title__c) from  [dbo].[assessment] c  where B.NewMembers = c.applicantname__C )          \n\t\telse A.Gender__c          \n\t\tend as [Gender]    , \n\n\t\t\n\t\t\n\t\t--Codifying certification level into [certificationGroup] from Account object \n\t\tCASE          \n\t\twhen  CertificationLevel__c in ('CP','CP Lapsed') then 'CP'          \n\t\twhen CertificationLevel__c in ('CT','CT Lapsed') then 'CT'          \n\t\twhen CertificationLevel__c in ('Not Certified') then 'Not Certified'          \n\t\telse NULL          \n\t\tend as [certificationGroup],\n\t\t\n\t\t---Fetching Attributes from Account table \n\n\t\tCertificationLevel__c as  [CertificationLevel] ,           \n\t\t A.PPP__c as PPP ,              \n\t\t A.id as [AccountObjID],           \n\t\t A.email__c as [Email],           \n\t\t A.type as [AccountType],          \n\t\t A.MembershipNumber__c as [MembershipNumber],    \n\t\t A.DateOfBirth__c, \n\t\tA.Days_since_Current_Membership_Expiry__c, \n\t\tA.HiddenFullName__c as [PersonFullName],          \n\t\tA.CurrentMembershipExpiry__c as [CurrentMembershipExpiry],          \n\t\tA.PersonAccountJoinedDate__c as [JoinedDate],  \n\t\tA.branch__c as [Branch],           \n\t\tA.Geography__c as [Geography],           \n\t\tA.[ShippingCountry] as [WorkCountry],           \n\t\tA.[BillingCountry] as [HomeCountry],           \n\t\tA.Former_Billing_Grade1__c  ,           \n\t\t\n\n\t\t---Fetching Membership_Status of the account from Account object and if not present doing a lookup in Contract table \n\t   CASE \n\t   WHEN A.Membership_Status__c  IS NULL \n\t   Then (select  C.Status from [salesforce].[Contract] C  where C.accountid =B.NewMembers and  c.currentmembership__c =1)\n\t   ELSE A.Membership_Status__c\n\t   END \n\t   as Membership_Status,       \n\t\t\n\n\t--Concanating Billing Grade & Former Billing Grades into BillingGradeConcat , To be used in next CTE \n\t\tCONCAT(A.BillingGrade__c, '_',A.Former_Billing_Grade1__c) as BillingGradeConcat ,  \n\n\n\n\t\tCONVERT(DATE, DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0)) AS ExtractDate,  --it will return the First Day of the month on any day , '2024-06-01'\n\t\t\n\t\t LEFT(DATENAME(MONTH, GETDATE()), 3) + '-' + RIGHT(CONVERT(VARCHAR(4), YEAR(GETDATE())), 2) AS [FYYear],  --It will return month & Year , exmaple Jun-24 \n\n\n\t\t--Case statement will look for financial year \n\t    CASE\n\t\tWHEN CONVERT(DATE, DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0))  between '2024-07-01' and '2025-06-30'\n\t\tTHEN 'FY 25'\n\t\tWHEN CONVERT(DATE, DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0))  between '2023-07-01' and '2024-06-30'\n\t\tTHEN 'FY 24'\n\t\t ELSE NULL \n\t\tEND \n\t\tas [FY],\t\n\t\t\n\t\tLEFT(LEFT(DATENAME(MONTH, GETDATE()), 3) + '-' + RIGHT(CONVERT(VARCHAR(4), YEAR(GETDATE())), 2),3)   AS [Month]     --it will return the current month \n\t  \t  \n\t\tFROM [membership].[members_new12month_A]('@{variables('date')}') B\n\t\t--- FROM [membership].[members_new12month_A]('2024-06-30') B\n\t\t\tINNER JOIN [salesforce].[Account] A \n\t\t\tON B.NewMembers = A.id\n\n)\n,\n-----Updating the Billing Grade Values -------\n\n\nCTE1 \nAS\n(\nselect \ncategory,\nAccountID,\nMonthDate,\n[MemberGrade]\t,\nBranchGroup,\t\nGender\t,\ncertificationGroup\t,\nCertificationLevel,\n[PPP],\nAccountObjID,\n[Email]\t,\nAccountType\t,\nMembershipNumber,\n DateOfBirth__c\t,\nDays_since_Current_Membership_Expiry__c,\nPersonFullName\t,\nCurrentMembershipExpiry\t,\nJoinedDate\t,\nBranch\t,\nGeography,\nWorkCountry,\nHomeCountry\t,\nFormer_Billing_Grade1__c\t,\nMembership_Status,\nBillingGradeConcat,\nExtractDate\t,\n[FYYear]\t,\nFY\t,\nMonth, \n\n--Updating Billing Grade based on Previous Billing Grades \nCASE     \n   WHEN   Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30  and billinggradeconcat ='3 - Full Fee_2 - PPP Full fee' \n   Then  '2 - PPP Full fee'    \n   WHEN Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and  billinggradeconcat ='3 - Full Fee_1 - Continuing'\n   Then   '1 - Continuing'    \n   WHEN Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and  billinggradeconcat ='7 - Graduate - 2nd Year_4 - Graduate - 1st Year' \n   Then    '4 - Graduate - 1st Year'    \n   WHEN   Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and   billinggradeconcat ='3 - Full Fee_7 - Graduate - 2nd Year' \n   Then   '7 - Graduate - 2nd Year'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='4 - Graduate - 1st Year_10 - Student - PPP' \n   Then  '10 - Student - PPP'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='4 - Graduate - 1st Year_11 - Student' \n   Then   '11 - Student'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and   billinggradeconcat ='3 - Full Fee_12 - Complimentary' \n   Then  '12 - Complimentary'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='3 - Full Fee 13 - Honoured' \n   Then  '13 - Honoured'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and   billinggradeconcat ='4 - Graduate - 1st Year_14 - Student - PYear'  \n   Then  '14 - Student - PYear'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='4 - Graduate - 1st Year_15 - Student - ACSF' \n   Then   '15 - Student - ACSF'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='3 - Full Fee_16 - Unemployed / On Hiatus' \n   Then  '16 - Unemployed / On Hiatus'    \n  WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='18 - Digital Subscriber 20 - Skills Applicant' \n  Then  '20 - Skills Applicant'    \n  ELSE [BillingGrade]\n   END    \n   AS [BillingGrade]\n\n\nfrom CTE\n\n)\n\n, \n\n----- Transofromation Heirarchy & Subsegment  --------------------\n----- we have upgraded billing grade in previous CTE  which is also used by BGG , create  BGG in this cte \n--30 columns \n--we are using this CTE to create the BGG column using billing grade\nCTE2 \nAS (\n    SELECT \n\t\ncategory,\nAccountID,\nMonthDate,\n[MemberGrade]\t,\nBranchGroup,\t\nGender\t,\ncertificationGroup\t,\nCertificationLevel,\n[PPP],\nAccountObjID,\n[Email]\t,\nAccountType\t,\nMembershipNumber,\nDateOfBirth__c\t,\nDays_since_Current_Membership_Expiry__c,\nPersonFullName\t,\nCurrentMembershipExpiry\t,\nJoinedDate\t,\nBranch\t,\nGeography,\nWorkCountry,\nHomeCountry\t,\nFormer_Billing_Grade1__c\t,\nMembership_Status,\nBillingGradeConcat,\nExtractDate\t,\n[FYYear]\t,\nFY\t,\nMonth, \nBillingGrade,\n\n\n\t\t--Codifying Billing grade into BGG from Account Object \n\t    CASE           \n\t\tWhen [BillingGrade] in ('0 - n/a', '1 - Continuing' , '12 - Complimentary','13 - Honoured', '16 - Unemployed / On Hiatus', '5 - Life Member')   Then 'Other'          \n\t\tWhen [BillingGrade] in ('10 - Student - PPP', '11 - Student', '15 - Student - ACSF', '15 – Student – ACSF')   then 'Student'          \n\t\tWhen [BillingGrade] in ('14 - Student - PYear', '14 – Student – PYear', '16 - Student - PYear', '17 - Student - PYear', '18 - Student - PYear') then 'Professional Year'          \n\t\tWhen [BillingGrade] in ('17 - PPP MOU2', '2 - PPP Full fee') then 'PPP'          \n\t\tWhen [BillingGrade] in ('19 - Subscriber - PPP') then 'Subscriber'          \n\t\tWhen [BillingGrade] in ('20 - Skills Applicant') then 'Overseas'          \n\t\tWhen [BillingGrade] in ('7 - Graduate - 2nd Year') then 'Graduate'          \n\t\tWhen [BillingGrade] in ('3 - Full Fee') then 'Full Fee'          \n\t\tWhen [BillingGrade] in ('8 - Retired') then 'Retired'          \n\t\telse NULL           \n\t\tend as [BGG]\n\n         from CTE1), \n\n\n--We create  Heirarchy based on MemberGrade & Billing Grade \n-- we Update Branch Group based on BGG again\n\n\n\t\tCTE3 as (\n\n\n\t\tselect \ncategory,\nAccountID,\nMonthDate,\n[MemberGrade]\t,\nGender\t,\ncertificationGroup\t,\nCertificationLevel,\n[PPP],\nAccountObjID,\n[Email]\t,\nAccountType\t,\nMembershipNumber,\nDateOfBirth__c\t,\nDays_since_Current_Membership_Expiry__c,\nPersonFullName\t,\nCurrentMembershipExpiry\t,\nJoinedDate\t,\nBranch\t,\nGeography,\nWorkCountry,\nHomeCountry\t,\nFormer_Billing_Grade1__c\t,\nMembership_Status,\nBillingGradeConcat,\nExtractDate\t,\n[FYYear]\t,\nFY\t,\nMonth, \nBillingGrade,\nBGG, \n\n\nCASE \nWhen BGG ='Overseas' THEN  'OS'\n       ELSE BranchGroup \n\t END  as BranchGroup , \n\n\n        CASE    \n            WHEN [MemberGrade] IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow')\n\t\t\tTHEN 'Professional'    \n\n            WHEN [MemberGrade] IN ( 'Associate' )\n\t\t\t AND \n\t\t\t[BillingGrade] IN (    \n                '1 - Continuing', \n\t\t\t\t'3 - Full Fee', \n\t\t\t\t'5 - Life Member',    \n                '2 - PPP Full Fee',\n\t\t\t\t'3 - Full Fee',\n\t\t\t\t'17 - PPP MOU2',    \n                '8 - Retired'  \n            ) THEN 'Full Fee Associates'    \n\n            WHEN ( [MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber', 'Honorary Member')    OR  [MemberGrade] in ('Associate') )\n                AND [BillingGrade] IN (    \n                    '4 - Graduate - 1st Year', \n\t\t\t\t\t'7 - Graduate - 2nd Year',    \n                    '10 - Student - PPP',\n\t\t\t\t\t'11 - Student',    \n                    '15 - Student - ACSF',\n\t\t\t\t\t'16 - Unemployed / On Hiatus'    \n                ) THEN 'Discounted (Full Benefits)'    \n\n            WHEN  ( [MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber', 'Honorary Member')   OR  [MemberGrade] in ('Associate') )\n                AND [BillingGrade]\n\t\t\t\tIN ('20 - Skills Applicant') \n\t\t\t\tTHEN 'Skills Applicants'  \n\n            WHEN  ( [MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber') OR  [MemberGrade] in ('Associate', 'Honorary Member') )\n\t\t\t                AND [BillingGrade] IN \n\t\t\t\t\t\t\t('11 - Complimentary', \n\t\t\t\t\t\t\t'12 - Complimentary', \n\t\t\t\t\t\t\t'13 - Honoured')\n\t\t\t\t\t\t\tTHEN 'Complimentary (Full Benefits)'  \n\n            WHEN  ( [MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber', 'Honorary Member')  OR  [MemberGrade] in ('Associate') )\n                AND [BillingGrade] IN \n\t\t\t\t('14 - Student - PYear') \n\t\t\t\tTHEN 'Professional Year'  \n\n            WHEN  ([MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber', 'Honorary Member')   OR  [MemberGrade] in ('Associate', 'Subscriber'))\n                AND [BillingGrade] IN (\n                    '18 - Digital Subscriber',\n\t\t\t\t\t'19 - Subscriber - PPP', \n\t\t\t\t\t'18 - Subscriber - PPP'    \n                ) THEN 'Subscribers (Discounted Limited Benefits)'\n            ELSE NULL -- Set Heirarchy to NULL if none of the conditions are met\n        END AS Heirarchy\n    FROM CTE2\n), \n\n\n\nCTE4\nAs (\n\nSELECT \n\ncategory,\nAccountID,\nMonthDate,\n[MemberGrade]\t,\nBranchGroup,\t\nGender\t,\ncertificationGroup\t,\nCertificationLevel,\n[PPP],\nAccountObjID,\n[Email]\t,\nAccountType\t,\nMembershipNumber,\nDateOfBirth__c\t,\nDays_since_Current_Membership_Expiry__c,\nPersonFullName\t,\nCurrentMembershipExpiry\t,\nJoinedDate\t,\nBranch\t,\nGeography,\nWorkCountry,\nHomeCountry\t,\nFormer_Billing_Grade1__c\t,\nMembership_Status,\nBillingGradeConcat,\nExtractDate\t,\n[FYYear]\t,\nFY\t,\nMonth, \nBillingGrade,\nBGG, \nHeirarchy, \n\n \n    CASE  \n\t--Professinal Segments\n        WHEN [Heirarchy] = 'Professional'\n\t\tAND\n\t\t[BillingGrade] NOT IN ('5 - Life Member', \n\t\t'13 - Honoured', \n\t\t'1 - Continuing', \n\t\t'8 - Retired', \n\t\t'3 - Full Fee',\n\t\t'2 - PPP Full Fee',\n\t\t'17 - PPP MOU2', \n\t\t'16 - PPP MOU2') \n\t\tTHEN 'Member, Senior Member, Fellow'  \n   \n        WHEN [Heirarchy] = 'Professional' \n\t\tAND\n\t\t[BillingGrade] \n\t\tIN \n\t\t('5 - Life Member', \n\t\t'13 - Honoured', \n\t\t'1 - Continuing') \n\t\tTHEN 'Life Members, Hon Members'        \n\n        WHEN [Heirarchy] = 'Professional'\n\t\tAND\n\t\t[BillingGrade] = '3 - Full Fee' \n\t\tTHEN 'Full Fee (Individual)'        \n\n        WHEN [Heirarchy] = 'Professional'\n\t\tAND\n\t\t[BillingGrade] IN (\n\t\t'2 - PPP Full Fee', \n\t\t'17 - PPP MOU2', \n\t\t'16 - PPP MOU2')\n\t\tTHEN 'Full Fee (PPP)'        \n\n        WHEN [Heirarchy] IN ( 'Professional', 'Full Fee Associates')\n\t\tAND \n\t\t[BillingGrade] = '8 - Retired' \n\t\tTHEN 'Retired'        \n  \n      --Full Fee Segments      \n        WHEN [Heirarchy] = 'Full Fee Associates' \n\t\tAND \n\t\t[BillingGrade] \n\t\tIN ('3 - Full Fee',\n\t\t'5 - Life Member',\n\t\t'1 - Continuing') \n\t\tTHEN 'Full Fee Associates (Individual)'  \n\t\t\n        WHEN [Heirarchy] = 'Full Fee Associates' \n\t\tAND \n\t\t[BillingGrade] \n\t\tIN ('2 - PPP Full Fee',\n\t\t'17 - PPP MOU2', \n\t\t'16 - PPP MOU2')\n\t\tTHEN 'Full Fee Associates (PPP)'        \n\n            \n\n\t   --Discounted \n              \n        WHEN [Heirarchy] = 'Discounted (Full Benefits)'\n\t\tAND\n\t\t[BillingGrade] IN\n\t\t('10 - Student - PPP',\n\t\t'11 - Student', \n\t\t'15 - Student - ACSF') \n\t\tTHEN 'Students'        \n\n        WHEN [Heirarchy] = 'Discounted (Full Benefits)'\n\t\tAND \n\t\t[BillingGrade] \n\t\tIN ('4 - Graduate - 1st Year',\n\t\t'7 - Graduate - 2nd Year')\n\t\tTHEN 'Graduate'        \n\n        WHEN [Heirarchy] = 'Discounted (Full Benefits)' \n\t\tAND \n\t\t[BillingGrade] = '16 - Unemployed / On Hiatus' \n\t\tTHEN 'Unemployed'   \n \n --Subscriber\n            \n        WHEN [Heirarchy] = 'Subscribers (Discounted Limited Benefits)'\n\t\tAND \n\t\t[BillingGrade] NOT IN\n\t\t('19 - Subscriber - PPP',\n\t\t'18 - Subscriber - PPP') \n\t\tTHEN 'Individuals'     \n\t\t\n        WHEN [Heirarchy] = 'Subscribers (Discounted Limited Benefits)'\n\t\tAND\n\t\t[BillingGrade] IN\n\t\t('19 - Subscriber - PPP', \n\t\t'18 - Subscriber - PPP')\n\t\tTHEN 'PPP'        \n\n        WHEN [Heirarchy] = 'Professional Year'\n\t\tTHEN 'Professional Year'        \n\n        WHEN [Heirarchy] = 'Complimentary (Full Benefits)' \n\t\tTHEN 'Complimentary'        \n\n        WHEN [Heirarchy] = 'Skills Applicants'\n\t\tTHEN 'Skills Applicants'        \n\n\t\t  WHEN [BGG] = 'Overseas' AND [Heirarchy] != 'Professional' \n\t\t  THEN 'Skills Applicants'  \n\n    END as subsegments\nFROM CTE3)\n\n\nselect * from CTE4\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "delete from membership.Mem_dashboard01\nwhere monthdate ='@{variables('date')}'\nand\ncategory ='New'",
									"type": "Expression"
								},
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "category",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "category",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MonthDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "MonthDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "MemberGrade",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MemberGrade",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BranchGroup",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BranchGroup",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "certificationGroup",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "certificationGroup",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CertificationLevel",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CertificationLevel",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PPP",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PPP",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountObjID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountObjID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DateOfBirth__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "DateOfBirth__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Days_since_Current_Membership_Expiry__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Days_since_Current_Membership_Expiry__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "PersonFullName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PersonFullName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CurrentMembershipExpiry",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "CurrentMembershipExpiry",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "JoinedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "JoinedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Branch",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Branch",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Geography",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Geography",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WorkCountry",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "WorkCountry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HomeCountry",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "HomeCountry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Former_Billing_Grade1__c",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Former_Billing_Grade1__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BGG",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BGG",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BillingGradeConcat",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BillingGradeConcat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExtractDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "ExtractDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "FYYear",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FYYear",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BillingGrade",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BillingGrade",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Heirarchy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Heirarchy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "subsegments",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "subsegments",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Membership_Status",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Membership_Status",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSQLSP",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "Mem_dashboard01",
									"schemaname": "membership"
								}
							}
						]
					},
					{
						"name": "Set end of the month as Date",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "date",
							"value": {
								"value": "@formatDateTime(addDays(startOfMonth(addToTime(utcnow(), 1, 'Month')), -1), 'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"date": {
						"type": "String",
						"defaultValue": "'2024-12-31'"
					}
				},
				"folder": {
					"name": "ACS/Membership/Monthly"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSQLSP')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ObjectRefreshTemplate')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 4,
							"dataIntegrationUnits": 16,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "@pipeline().parameters.sourcetable"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.targettable",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"sourcetable": {
						"type": "string",
						"defaultValue": "AssessmentANZSCO__c"
					},
					"targettable": {
						"type": "string",
						"defaultValue": "AssessmentANZSCO__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"HWM": {
						"type": "String",
						"defaultValue": "2199-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Open Cases Forecast')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL TO DataLake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "StartDatabricksCluster",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from [psas].[opencasesdaily]\nOPTION (MAXRECURSION 32767)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSQLSP",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_DatabricksPremiumFolder",
								"type": "DatasetReference",
								"parameters": {
									"filename": "Opencases",
									"Foldername": {
										"value": "null",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "ARIMA Open Cases",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "SQL TO DataLake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/prashant.yadvendra@acs.org.au/Machine Learning ACS/ARIMADaily_OpenCases"
						},
						"linkedServiceName": {
							"referenceName": "ACS Databricks Premium",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "StartDatabricksCluster",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "StartDatabricksCluster",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ACS/MSA Forecasting"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSQLSP')]",
				"[concat(variables('factoryId'), '/datasets/ds_DatabricksPremiumFolder')]",
				"[concat(variables('factoryId'), '/linkedServices/ACS Databricks Premium')]",
				"[concat(variables('factoryId'), '/pipelines/StartDatabricksCluster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QualificationAssessmentANZSCO__c Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "QualificationAssessmentANZSCO__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "QualificationAssessmentANZSCO__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, Qualification__c, AssessmentANZSCO__c, CloselyRelated__c, ANZSCOName__c, CalculatedX__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Renew Monthly')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "update dashboard_category Renew",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set end of the month as Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\n------Creating Data For Renewed  Numbers Monthly  V0.2---------------\n\n-- A is the the Account table Output while B is the Account ID's we get from our TVF \n--TVF [membership].[members_renew12months_A]  : It will give how many members did get , if it more then 12 months being Moribund and he or she returns, its a New \n-- Question : if it takes timestamp till 11:59:00:00 or just the day thing  ?\n--We create EOM from the created date so even is created date is \"2024-05-31 23:59:00.000 \" when we do reporting and run scripts, this entry will have EOM as 2024-05-31, hence covered is previous month calculation\n\n--30 columns in CTE \nWITH CTE AS (\n    SELECT \n\tcategory='Renewed',   --- categorise the Data as New \n\tB.NewMembers AS AccountID  , --From TVF we get account id's which are New in that month \n\tB.DateStart as MonthDate, --TVF are based on EOM dates, it will always have EOM date coz of ALL months CTE logic used in TVF \n\n\n\t--If we do not see MemberGrade in Account table we try to find it from contract table, else use whatever we have in Account table \n     CASE \n\t WHEN A.MemberGrade__c  IS NULL \n\t  Then (select  C.Grade__c from [salesforce].[Contract] C  where C.accountid =B.NewMembers and  c.currentmembership__c =1)\n\t  Else A.MemberGrade__c \n\t END \n\t AS [MemberGrade], \n\n\t --If we do not see BillingGrade__c in Account table we try to find it from contract table, else use whatever we have in Account table \n      CASE \n\t  WHEN A.BillingGrade__c  IS NULL \n\t\tTHEN   (select  C.MemberBillingGrade__c from [salesforce].[Contract] C  where C.accountid =B.NewMembers and  c.currentmembership__c =1)\n\t\tWHEN A.BillingGrade__c IN ( '14 - Student - PYear' ,  '14 – Student – PYear' , '16 - Student - PYear',  '17 - Student - PYear' , '18 - Student - PYear' ) \n\t\tThen  '14 - Student - PYear'         \n\t  ELSE  A.BillingGrade__c \n\t\tEND \n\t\tAS [BillingGrade], \n\n       --We create BranchGroup from Branch Infromation avaialble in Account table  \n\t\tCASE            \n\t\twhen A.branch__c ='Canberra'  then  'CANB'          \n\t\twhen A.branch__c ='New South Wales'  then  'NSW'          \n\t\twhen A.branch__c ='Northern Territory' then  'NT'          \n\t\twhen A.branch__c ='Overseas' then  'os'          \n\t\twhen A.branch__c IN  ('Queensland' , 'South Pacific Overseas')  then  'QLD'          \n\t\twhen A.branch__c ='South Australia' then  'SA'          \n\t\twhen A.branch__c ='Tasmania' then  'TAS'          \n\t\twhen A.branch__c ='Victoria' then  'VIC'          \n\t\twhen A.branch__c ='Western Australia' then  'WA'          \n\t\twhen A.branch__C is NULL and HiddenUserLocationState__c ='Overseas' then 'os'          \n\t\tELSE null          \n       END as [BranchGroup]  , \n\t\t\n\n\t\t-- Codifying the gender from Account table & assessment Table where ever Present \n\t\tCASE           \n\t\tWhen A.Gender__c in ('F', 'Female' )  or  A.Title__c  in ('Miss', 'Mrs', 'Ms')  Then 'Female'          \n\t\tWhen A.Gender__c in ('MALE', 'M')  or  A.Title__c  in ('Mr.', 'Sir', 'Ms')   then 'Male'          \n\t\tWhen A.Gender__c is NULL then (select DISTINCT(c.Applicant_Title__c) from  [dbo].[assessment] c  where B.NewMembers = c.applicantname__C )          \n\t\telse A.Gender__c          \n\t\tend as [Gender]    , \n\n\t\t\n\t\t\n\t\t--Codifying certification level into [certificationGroup] from Account object \n\t\tCASE          \n\t\twhen  CertificationLevel__c in ('CP','CP Lapsed') then 'CP'          \n\t\twhen CertificationLevel__c in ('CT','CT Lapsed') then 'CT'          \n\t\twhen CertificationLevel__c in ('Not Certified') then 'Not Certified'          \n\t\telse NULL          \n\t\tend as [certificationGroup],\n\t\t\n\t\t---Fetching Attributes from Account table \n\n\t\tCertificationLevel__c as  [CertificationLevel] ,           \n\t\t A.PPP__c as PPP ,              \n\t\t A.id as [AccountObjID],           \n\t\t A.email__c as [Email],           \n\t\t A.type as [AccountType],          \n\t\t A.MembershipNumber__c as [MembershipNumber],    \n\t\t A.DateOfBirth__c, \n\t\tA.Days_since_Current_Membership_Expiry__c, \n\t\tA.HiddenFullName__c as [PersonFullName],          \n\t\tA.CurrentMembershipExpiry__c as [CurrentMembershipExpiry],          \n\t\tA.PersonAccountJoinedDate__c as [JoinedDate],  \n\t\tA.branch__c as [Branch],           \n\t\tA.Geography__c as [Geography],           \n\t\tA.[ShippingCountry] as [WorkCountry],           \n\t\tA.[BillingCountry] as [HomeCountry],           \n\t\tA.Former_Billing_Grade1__c  ,           \n\t\t\n\n\t\t---Fetching Membership_Status of the account from Account object and if not present doing a lookup in Contract table \n\t   CASE \n\t   WHEN A.Membership_Status__c  IS NULL \n\t   Then (select  C.Status from [salesforce].[Contract] C  where C.accountid =B.NewMembers and  c.currentmembership__c =1)\n\t   ELSE A.Membership_Status__c\n\t   END \n\t   as Membership_Status,       \n\t\t\n\n\t--Concanating Billing Grade & Former Billing Grades into BillingGradeConcat , To be used in next CTE \n\t\tCONCAT(A.BillingGrade__c, '_',A.Former_Billing_Grade1__c) as BillingGradeConcat ,  \n\n\n\n\t\tCONVERT(DATE, DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0)) AS ExtractDate,  --it will return the First Day of the month on any day , '2024-06-01'\n\t\t\n\t\t LEFT(DATENAME(MONTH, GETDATE()), 3) + '-' + RIGHT(CONVERT(VARCHAR(4), YEAR(GETDATE())), 2) AS [FYYear],  --It will return month & Year , exmaple Jun-24 \n\n\n\t\t--Case statement will look for financial year \n\t    CASE\n\t\tWHEN CONVERT(DATE, DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0))  between '2024-07-01' and '2025-06-30'\n\t\tTHEN 'FY 25'\n\t\tWHEN CONVERT(DATE, DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0))  between '2023-07-01' and '2024-06-30'\n\t\tTHEN 'FY 24'\n\t\t ELSE NULL \n\t\tEND \n\t\tas [FY],\t\n\t\t\n\t\tLEFT(LEFT(DATENAME(MONTH, GETDATE()), 3) + '-' + RIGHT(CONVERT(VARCHAR(4), YEAR(GETDATE())), 2),3)   AS [Month]     --it will return the current month \n\t  \t  \n\t\tFROM [membership].[members_renew12months_A]('@{variables('date')}') B\n\t\t-- FROM [membership].[members_renew12months_A]('2024-06-30') B\n\t\t\tINNER JOIN [salesforce].[Account] A \n\t\t\tON B.NewMembers = A.id\n\n)\n,\n-----Updating the Billing Grade Values -------\n\n\nCTE1 \nAS\n(\nselect \ncategory,\nAccountID,\nMonthDate,\n[MemberGrade]\t,\nBranchGroup,\t\nGender\t,\ncertificationGroup\t,\nCertificationLevel,\n[PPP],\nAccountObjID,\n[Email]\t,\nAccountType\t,\nMembershipNumber,\n DateOfBirth__c\t,\nDays_since_Current_Membership_Expiry__c,\nPersonFullName\t,\nCurrentMembershipExpiry\t,\nJoinedDate\t,\nBranch\t,\nGeography,\nWorkCountry,\nHomeCountry\t,\nFormer_Billing_Grade1__c\t,\nMembership_Status,\nBillingGradeConcat,\nExtractDate\t,\n[FYYear]\t,\nFY\t,\nMonth, \n\n--Updating Billing Grade based on Previous Billing Grades \nCASE     \n   WHEN   Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30  and billinggradeconcat ='3 - Full Fee_2 - PPP Full fee' \n   Then  '2 - PPP Full fee'    \n   WHEN Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and  billinggradeconcat ='3 - Full Fee_1 - Continuing'\n   Then   '1 - Continuing'    \n   WHEN Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and  billinggradeconcat ='7 - Graduate - 2nd Year_4 - Graduate - 1st Year' \n   Then    '4 - Graduate - 1st Year'    \n   WHEN   Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and   billinggradeconcat ='3 - Full Fee_7 - Graduate - 2nd Year' \n   Then   '7 - Graduate - 2nd Year'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='4 - Graduate - 1st Year_10 - Student - PPP' \n   Then  '10 - Student - PPP'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='4 - Graduate - 1st Year_11 - Student' \n   Then   '11 - Student'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and   billinggradeconcat ='3 - Full Fee_12 - Complimentary' \n   Then  '12 - Complimentary'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='3 - Full Fee 13 - Honoured' \n   Then  '13 - Honoured'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and   billinggradeconcat ='4 - Graduate - 1st Year_14 - Student - PYear'  \n   Then  '14 - Student - PYear'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='4 - Graduate - 1st Year_15 - Student - ACSF' \n   Then   '15 - Student - ACSF'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='3 - Full Fee_16 - Unemployed / On Hiatus' \n   Then  '16 - Unemployed / On Hiatus'    \n  WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='18 - Digital Subscriber 20 - Skills Applicant' \n  Then  '20 - Skills Applicant'    \n  ELSE [BillingGrade]\n   END    \n   AS [BillingGrade]\n\n\nfrom CTE\n\n)\n\n, \n\n----- Transofromation Heirarchy & Subsegment  --------------------\n----- we have upgraded billing grade in previous CTE  which is also used by BGG , create  BGG in this cte \n--30 columns \n--we are using this CTE to create the BGG column using billing grade\nCTE2 \nAS (\n    SELECT \n\t\ncategory,\nAccountID,\nMonthDate,\n[MemberGrade]\t,\nBranchGroup,\t\nGender\t,\ncertificationGroup\t,\nCertificationLevel,\n[PPP],\nAccountObjID,\n[Email]\t,\nAccountType\t,\nMembershipNumber,\nDateOfBirth__c\t,\nDays_since_Current_Membership_Expiry__c,\nPersonFullName\t,\nCurrentMembershipExpiry\t,\nJoinedDate\t,\nBranch\t,\nGeography,\nWorkCountry,\nHomeCountry\t,\nFormer_Billing_Grade1__c\t,\nMembership_Status,\nBillingGradeConcat,\nExtractDate\t,\n[FYYear]\t,\nFY\t,\nMonth, \nBillingGrade,\n\n\n\t\t--Codifying Billing grade into BGG from Account Object \n\t    CASE           \n\t\tWhen [BillingGrade] in ('0 - n/a', '1 - Continuing' , '12 - Complimentary','13 - Honoured', '16 - Unemployed / On Hiatus', '5 - Life Member')   Then 'Other'          \n\t\tWhen [BillingGrade] in ('10 - Student - PPP', '11 - Student', '15 - Student - ACSF', '15 – Student – ACSF')   then 'Student'          \n\t\tWhen [BillingGrade] in ('14 - Student - PYear', '14 – Student – PYear', '16 - Student - PYear', '17 - Student - PYear', '18 - Student - PYear') then 'Professional Year'          \n\t\tWhen [BillingGrade] in ('17 - PPP MOU2', '2 - PPP Full fee') then 'PPP'          \n\t\tWhen [BillingGrade] in ('19 - Subscriber - PPP') then 'Subscriber'          \n\t\tWhen [BillingGrade] in ('20 - Skills Applicant') then 'Overseas'          \n\t\tWhen [BillingGrade] in ('7 - Graduate - 2nd Year') then 'Graduate'          \n\t\tWhen [BillingGrade] in ('3 - Full Fee') then 'Full Fee'          \n\t\tWhen [BillingGrade] in ('8 - Retired') then 'Retired'          \n\t\telse NULL           \n\t\tend as [BGG]\n\n         from CTE1), \n\n\n--We create  Heirarchy based on MemberGrade & Billing Grade \n-- we Update Branch Group based on BGG again\n\n\n\t\tCTE3 as (\n\n\n\t\tselect \ncategory,\nAccountID,\nMonthDate,\n[MemberGrade]\t,\nGender\t,\ncertificationGroup\t,\nCertificationLevel,\n[PPP],\nAccountObjID,\n[Email]\t,\nAccountType\t,\nMembershipNumber,\nDateOfBirth__c\t,\nDays_since_Current_Membership_Expiry__c,\nPersonFullName\t,\nCurrentMembershipExpiry\t,\nJoinedDate\t,\nBranch\t,\nGeography,\nWorkCountry,\nHomeCountry\t,\nFormer_Billing_Grade1__c\t,\nMembership_Status,\nBillingGradeConcat,\nExtractDate\t,\n[FYYear]\t,\nFY\t,\nMonth, \nBillingGrade,\nBGG, \n\n\nCASE \nWhen BGG ='Overseas' THEN  'OS'\n       ELSE BranchGroup \n\t END  as BranchGroup , \n\n\n        CASE    \n            WHEN [MemberGrade] IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow')\n\t\t\tTHEN 'Professional'    \n\n            WHEN [MemberGrade] IN ( 'Associate' )\n\t\t\t AND \n\t\t\t[BillingGrade] IN (    \n                '1 - Continuing', \n\t\t\t\t'3 - Full Fee', \n\t\t\t\t'5 - Life Member',    \n                '2 - PPP Full Fee',\n\t\t\t\t'3 - Full Fee',\n\t\t\t\t'17 - PPP MOU2',    \n                '8 - Retired'  \n            ) THEN 'Full Fee Associates'    \n\n            WHEN ( [MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber', 'Honorary Member')    OR  [MemberGrade] in ('Associate') )\n                AND [BillingGrade] IN (    \n                    '4 - Graduate - 1st Year', \n\t\t\t\t\t'7 - Graduate - 2nd Year',    \n                    '10 - Student - PPP',\n\t\t\t\t\t'11 - Student',    \n                    '15 - Student - ACSF',\n\t\t\t\t\t'16 - Unemployed / On Hiatus'    \n                ) THEN 'Discounted (Full Benefits)'    \n\n            WHEN  ( [MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber', 'Honorary Member')   OR  [MemberGrade] in ('Associate') )\n                AND [BillingGrade]\n\t\t\t\tIN ('20 - Skills Applicant') \n\t\t\t\tTHEN 'Skills Applicants'  \n\n            WHEN  ( [MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber') OR  [MemberGrade] in ('Associate', 'Honorary Member') )\n\t\t\t                AND [BillingGrade] IN \n\t\t\t\t\t\t\t('11 - Complimentary', \n\t\t\t\t\t\t\t'12 - Complimentary', \n\t\t\t\t\t\t\t'13 - Honoured')\n\t\t\t\t\t\t\tTHEN 'Complimentary (Full Benefits)'  \n\n            WHEN  ( [MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber', 'Honorary Member')  OR  [MemberGrade] in ('Associate') )\n                AND [BillingGrade] IN \n\t\t\t\t('14 - Student - PYear') \n\t\t\t\tTHEN 'Professional Year'  \n\n            WHEN  ([MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber', 'Honorary Member')   OR  [MemberGrade] in ('Associate', 'Subscriber'))\n                AND [BillingGrade] IN (\n                    '18 - Digital Subscriber',\n\t\t\t\t\t'19 - Subscriber - PPP', \n\t\t\t\t\t'18 - Subscriber - PPP'    \n                ) THEN 'Subscribers (Discounted Limited Benefits)'\n            ELSE NULL -- Set Heirarchy to NULL if none of the conditions are met\n        END AS Heirarchy\n    FROM CTE2\n), \n\n\n\nCTE4\nAs (\n\nSELECT \n\ncategory,\nAccountID,\nMonthDate,\n[MemberGrade]\t,\nBranchGroup,\t\nGender\t,\ncertificationGroup\t,\nCertificationLevel,\n[PPP],\nAccountObjID,\n[Email]\t,\nAccountType\t,\nMembershipNumber,\nDateOfBirth__c\t,\nDays_since_Current_Membership_Expiry__c,\nPersonFullName\t,\nCurrentMembershipExpiry\t,\nJoinedDate\t,\nBranch\t,\nGeography,\nWorkCountry,\nHomeCountry\t,\nFormer_Billing_Grade1__c\t,\nMembership_Status,\nBillingGradeConcat,\nExtractDate\t,\n[FYYear]\t,\nFY\t,\nMonth, \nBillingGrade,\nBGG, \nHeirarchy, \n\n \n    CASE  \n\t--Professinal Segments\n        WHEN [Heirarchy] = 'Professional'\n\t\tAND\n\t\t[BillingGrade] NOT IN ('5 - Life Member', \n\t\t'13 - Honoured', \n\t\t'1 - Continuing', \n\t\t'8 - Retired', \n\t\t'3 - Full Fee',\n\t\t'2 - PPP Full Fee',\n\t\t'17 - PPP MOU2', \n\t\t'16 - PPP MOU2') \n\t\tTHEN 'Member, Senior Member, Fellow'  \n   \n        WHEN [Heirarchy] = 'Professional' \n\t\tAND\n\t\t[BillingGrade] \n\t\tIN \n\t\t('5 - Life Member', \n\t\t'13 - Honoured', \n\t\t'1 - Continuing') \n\t\tTHEN 'Life Members, Hon Members'        \n\n        WHEN [Heirarchy] = 'Professional'\n\t\tAND\n\t\t[BillingGrade] = '3 - Full Fee' \n\t\tTHEN 'Full Fee (Individual)'        \n\n        WHEN [Heirarchy] = 'Professional'\n\t\tAND\n\t\t[BillingGrade] IN (\n\t\t'2 - PPP Full Fee', \n\t\t'17 - PPP MOU2', \n\t\t'16 - PPP MOU2')\n\t\tTHEN 'Full Fee (PPP)'        \n\n        WHEN [Heirarchy] IN ( 'Professional', 'Full Fee Associates')\n\t\tAND \n\t\t[BillingGrade] = '8 - Retired' \n\t\tTHEN 'Retired'        \n  \n      --Full Fee Segments      \n        WHEN [Heirarchy] = 'Full Fee Associates' \n\t\tAND \n\t\t[BillingGrade] \n\t\tIN ('3 - Full Fee',\n\t\t'5 - Life Member',\n\t\t'1 - Continuing') \n\t\tTHEN 'Full Fee Associates (Individual)'  \n\t\t\n        WHEN [Heirarchy] = 'Full Fee Associates' \n\t\tAND \n\t\t[BillingGrade] \n\t\tIN ('2 - PPP Full Fee',\n\t\t'17 - PPP MOU2', \n\t\t'16 - PPP MOU2')\n\t\tTHEN 'Full Fee Associates (PPP)'        \n\n            \n\n\t   --Discounted \n              \n        WHEN [Heirarchy] = 'Discounted (Full Benefits)'\n\t\tAND\n\t\t[BillingGrade] IN\n\t\t('10 - Student - PPP',\n\t\t'11 - Student', \n\t\t'15 - Student - ACSF') \n\t\tTHEN 'Students'        \n\n        WHEN [Heirarchy] = 'Discounted (Full Benefits)'\n\t\tAND \n\t\t[BillingGrade] \n\t\tIN ('4 - Graduate - 1st Year',\n\t\t'7 - Graduate - 2nd Year')\n\t\tTHEN 'Graduate'        \n\n        WHEN [Heirarchy] = 'Discounted (Full Benefits)' \n\t\tAND \n\t\t[BillingGrade] = '16 - Unemployed / On Hiatus' \n\t\tTHEN 'Unemployed'   \n \n --Subscriber\n            \n        WHEN [Heirarchy] = 'Subscribers (Discounted Limited Benefits)'\n\t\tAND \n\t\t[BillingGrade] NOT IN\n\t\t('19 - Subscriber - PPP',\n\t\t'18 - Subscriber - PPP') \n\t\tTHEN 'Individuals'     \n\t\t\n        WHEN [Heirarchy] = 'Subscribers (Discounted Limited Benefits)'\n\t\tAND\n\t\t[BillingGrade] IN\n\t\t('19 - Subscriber - PPP', \n\t\t'18 - Subscriber - PPP')\n\t\tTHEN 'PPP'        \n\n        WHEN [Heirarchy] = 'Professional Year'\n\t\tTHEN 'Professional Year'        \n\n        WHEN [Heirarchy] = 'Complimentary (Full Benefits)' \n\t\tTHEN 'Complimentary'        \n\n        WHEN [Heirarchy] = 'Skills Applicants'\n\t\tTHEN 'Skills Applicants'        \n\n\t\t  WHEN [BGG] = 'Overseas' AND [Heirarchy] != 'Professional' \n\t\t  THEN 'Skills Applicants'  \n\n    END as subsegments\nFROM CTE3)\n\n\nselect * from CTE4\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "delete from  [membership].[Mem_dashboard01] where \nMonthdate = '@{variables('date')}'\nand category ='Renewed'",
									"type": "Expression"
								},
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "category",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "category",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MonthDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "MonthDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "MemberGrade",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MemberGrade",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BranchGroup",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BranchGroup",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "certificationGroup",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "certificationGroup",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CertificationLevel",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CertificationLevel",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PPP",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PPP",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountObjID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountObjID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DateOfBirth__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "DateOfBirth__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Days_since_Current_Membership_Expiry__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Days_since_Current_Membership_Expiry__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "PersonFullName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PersonFullName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CurrentMembershipExpiry",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "CurrentMembershipExpiry",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "JoinedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "JoinedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Branch",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Branch",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Geography",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Geography",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WorkCountry",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "WorkCountry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HomeCountry",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "HomeCountry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Former_Billing_Grade1__c",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Former_Billing_Grade1__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BGG",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BGG",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BillingGradeConcat",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BillingGradeConcat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExtractDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "ExtractDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "FYYear",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FYYear",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BillingGrade",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BillingGrade",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Heirarchy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Heirarchy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "subsegments",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "subsegments",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Membership_Status",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Membership_Status",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSQLSP",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "Mem_dashboard01",
									"schemaname": "membership"
								}
							}
						]
					},
					{
						"name": "Set end of the month as Date",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "date",
							"value": {
								"value": "@formatDateTime(addDays(startOfMonth(addToTime(utcnow(), 1, 'Month')), -1), 'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"date": {
						"type": "String",
						"defaultValue": "'2024-12-31'"
					}
				},
				"folder": {
					"name": "ACS/Membership/Monthly"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSQLSP')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Renewed Members Forecast')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL TO DataLake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "StartDatabricksCluster",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from  [membership].[members_renew12month_h]  \n  where\ndateStart >  '2017-12-31'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSQLSP",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_DatabricksPremiumFolder",
								"type": "DatasetReference",
								"parameters": {
									"filename": "RenewedMembers",
									"Foldername": "Membership"
								}
							}
						]
					},
					{
						"name": "StartDatabricksCluster",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "StartDatabricksCluster",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Prophet  Renewed forecast",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "SQL TO DataLake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/prashant.yadvendra@acs.org.au/Machine Learning ACS/Forecasting Membership/Renew members Forecast"
						},
						"linkedServiceName": {
							"referenceName": "ACS Databricks Premium",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ACS/Membership/Forecasting"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSQLSP')]",
				"[concat(variables('factoryId'), '/datasets/ds_DatabricksPremiumFolder')]",
				"[concat(variables('factoryId'), '/pipelines/StartDatabricksCluster')]",
				"[concat(variables('factoryId'), '/linkedServices/ACS Databricks Premium')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF Account Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IsDeleted",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsDeleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "MasterRecordId",
											"type": "String"
										},
										"sink": {
											"name": "MasterRecordId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RecordTypeId",
											"type": "String"
										},
										"sink": {
											"name": "RecordTypeId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ParentId",
											"type": "String"
										},
										"sink": {
											"name": "ParentId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BillingStreet",
											"type": "String"
										},
										"sink": {
											"name": "BillingStreet",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BillingCity",
											"type": "String"
										},
										"sink": {
											"name": "BillingCity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BillingState",
											"type": "String"
										},
										"sink": {
											"name": "BillingState",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BillingPostalCode",
											"type": "String"
										},
										"sink": {
											"name": "BillingPostalCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BillingCountry",
											"type": "String"
										},
										"sink": {
											"name": "BillingCountry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BillingLatitude",
											"type": "Decimal"
										},
										"sink": {
											"name": "BillingLatitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 15,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "BillingLongitude",
											"type": "Decimal"
										},
										"sink": {
											"name": "BillingLongitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 15,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "BillingGeocodeAccuracy",
											"type": "String"
										},
										"sink": {
											"name": "BillingGeocodeAccuracy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ShippingStreet",
											"type": "String"
										},
										"sink": {
											"name": "ShippingStreet",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ShippingCity",
											"type": "String"
										},
										"sink": {
											"name": "ShippingCity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ShippingState",
											"type": "String"
										},
										"sink": {
											"name": "ShippingState",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ShippingPostalCode",
											"type": "String"
										},
										"sink": {
											"name": "ShippingPostalCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ShippingCountry",
											"type": "String"
										},
										"sink": {
											"name": "ShippingCountry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ShippingLatitude",
											"type": "Decimal"
										},
										"sink": {
											"name": "ShippingLatitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 15,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "ShippingLongitude",
											"type": "Decimal"
										},
										"sink": {
											"name": "ShippingLongitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 15,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "ShippingGeocodeAccuracy",
											"type": "String"
										},
										"sink": {
											"name": "ShippingGeocodeAccuracy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String"
										},
										"sink": {
											"name": "Phone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Fax",
											"type": "String"
										},
										"sink": {
											"name": "Fax",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountNumber",
											"type": "String"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Website",
											"type": "String"
										},
										"sink": {
											"name": "Website",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PhotoUrl",
											"type": "String"
										},
										"sink": {
											"name": "PhotoUrl",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Sic",
											"type": "String"
										},
										"sink": {
											"name": "Sic",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Industry",
											"type": "String"
										},
										"sink": {
											"name": "Industry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AnnualRevenue",
											"type": "Decimal"
										},
										"sink": {
											"name": "AnnualRevenue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "NumberOfEmployees",
											"type": "Int32"
										},
										"sink": {
											"name": "NumberOfEmployees",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Ownership",
											"type": "String"
										},
										"sink": {
											"name": "Ownership",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TickerSymbol",
											"type": "String"
										},
										"sink": {
											"name": "TickerSymbol",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Rating",
											"type": "String"
										},
										"sink": {
											"name": "Rating",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Site",
											"type": "String"
										},
										"sink": {
											"name": "Site",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CurrencyIsoCode",
											"type": "String"
										},
										"sink": {
											"name": "CurrencyIsoCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OwnerId",
											"type": "String"
										},
										"sink": {
											"name": "OwnerId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CreatedById",
											"type": "String"
										},
										"sink": {
											"name": "CreatedById",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastModifiedById",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedById",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SystemModstamp",
											"type": "DateTime"
										},
										"sink": {
											"name": "SystemModstamp",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastActivityDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastActivityDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastViewedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastViewedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LastReferencedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastReferencedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "IsCustomerPortal",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsCustomerPortal",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Jigsaw",
											"type": "String"
										},
										"sink": {
											"name": "Jigsaw",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "JigsawCompanyId",
											"type": "String"
										},
										"sink": {
											"name": "JigsawCompanyId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountSource",
											"type": "String"
										},
										"sink": {
											"name": "AccountSource",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SicDesc",
											"type": "String"
										},
										"sink": {
											"name": "SicDesc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ffbf__AccountParticulars__c",
											"type": "String"
										},
										"sink": {
											"name": "ffbf__AccountParticulars__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ffbf__BankBIC__c",
											"type": "String"
										},
										"sink": {
											"name": "ffbf__BankBIC__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ffbf__PaymentCode__c",
											"type": "String"
										},
										"sink": {
											"name": "ffbf__PaymentCode__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ffbf__PaymentCountryISO__c",
											"type": "String"
										},
										"sink": {
											"name": "ffbf__PaymentCountryISO__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ffbf__PaymentPriority__c",
											"type": "String"
										},
										"sink": {
											"name": "ffbf__PaymentPriority__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ffbf__PaymentRoutingMethod__c",
											"type": "String"
										},
										"sink": {
											"name": "ffbf__PaymentRoutingMethod__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Purchase_Order_Contact__c",
											"type": "String"
										},
										"sink": {
											"name": "Purchase_Order_Contact__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Service_Category__c",
											"type": "String"
										},
										"sink": {
											"name": "Service_Category__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ABN__c",
											"type": "String"
										},
										"sink": {
											"name": "ABN__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ANZSCOCode__c",
											"type": "String"
										},
										"sink": {
											"name": "ANZSCOCode__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountManager__c",
											"type": "String"
										},
										"sink": {
											"name": "AccountManager__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountType__c",
											"type": "String"
										},
										"sink": {
											"name": "AccountType__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Account_18_Digits_ID__c",
											"type": "String"
										},
										"sink": {
											"name": "Account_18_Digits_ID__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Account_Support__c",
											"type": "String"
										},
										"sink": {
											"name": "Account_Support__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Active_Certification_ID__c",
											"type": "String"
										},
										"sink": {
											"name": "Active_Certification_ID__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AdditionalAccountType__c",
											"type": "String"
										},
										"sink": {
											"name": "AdditionalAccountType__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AllergyOtherDietaryRequirements__c",
											"type": "String"
										},
										"sink": {
											"name": "AllergyOtherDietaryRequirements__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BillingContact__c",
											"type": "String"
										},
										"sink": {
											"name": "BillingContact__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BillingGradeChangeDate__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "BillingGradeChangeDate__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "BillingGrade__c",
											"type": "String"
										},
										"sink": {
											"name": "BillingGrade__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Billing_Grade1_Change_Date__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "Billing_Grade1_Change_Date__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Billing_Grade2_Change_Date__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "Billing_Grade2_Change_Date__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "BoxFolderId__c",
											"type": "String"
										},
										"sink": {
											"name": "BoxFolderId__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Branch_Newsletters__c",
											"type": "String"
										},
										"sink": {
											"name": "Branch_Newsletters__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Branch_Overridden__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Branch_Overridden__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Branch__c",
											"type": "String"
										},
										"sink": {
											"name": "Branch__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Bulk_Upload_PPP_ID__c",
											"type": "String"
										},
										"sink": {
											"name": "Bulk_Upload_PPP_ID__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CertificationBadge__c",
											"type": "String"
										},
										"sink": {
											"name": "CertificationBadge__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CertificationLevel__c",
											"type": "String"
										},
										"sink": {
											"name": "CertificationLevel__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CommunityUser__c",
											"type": "String"
										},
										"sink": {
											"name": "CommunityUser__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Completion_Points_Anzsco__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Anzsco__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Completion_Points_Bio__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Bio__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Completion_Points_DOB__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_DOB__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Completion_Points_Email__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Email__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Completion_Points_Employer_Name__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Employer_Name__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Completion_Points_Expertise__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Expertise__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Completion_Points_FL_Name__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_FL_Name__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Completion_Points_Gender__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Gender__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Completion_Points_H_Address__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_H_Address__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Completion_Points_Industry__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Industry__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Completion_Points_Languages__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Languages__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Completion_Points_Mobile__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Mobile__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Completion_Points_Phone__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Phone__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Completion_Points_Position__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Position__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Completion_Points_Sec_Email__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Sec_Email__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Completion_Points_Skills__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Skills__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Completion_Points_Specialism__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Specialism__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Completion_Points_Sub_Industry__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_Sub_Industry__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Completion_Points_W_Address__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Completion_Points_W_Address__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "CongaCTCPFormula__c",
											"type": "String"
										},
										"sink": {
											"name": "CongaCTCPFormula__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CongaCTCPTemplateID__c",
											"type": "String"
										},
										"sink": {
											"name": "CongaCTCPTemplateID__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CongaCitySys__c",
											"type": "String"
										},
										"sink": {
											"name": "CongaCitySys__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CongaCountrySys__c",
											"type": "String"
										},
										"sink": {
											"name": "CongaCountrySys__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CongaMemberCertificate__c",
											"type": "String"
										},
										"sink": {
											"name": "CongaMemberCertificate__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CongaPostCodeSys__c",
											"type": "String"
										},
										"sink": {
											"name": "CongaPostCodeSys__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CongaStateSys__c",
											"type": "String"
										},
										"sink": {
											"name": "CongaStateSys__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CongaStreetSys__c",
											"type": "String"
										},
										"sink": {
											"name": "CongaStreetSys__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ConsultantsDirectory__c",
											"type": "String"
										},
										"sink": {
											"name": "ConsultantsDirectory__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreateBoxFolders__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "CreateBoxFolders__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Create_User_and_Send_New_Password__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Create_User_and_Send_New_Password__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CreditCardLast4Digits__c",
											"type": "String"
										},
										"sink": {
											"name": "CreditCardLast4Digits__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreditCardPaymentToken__c",
											"type": "String"
										},
										"sink": {
											"name": "CreditCardPaymentToken__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreditCardType__c",
											"type": "String"
										},
										"sink": {
											"name": "CreditCardType__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CurrentMembershipExpiry__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "CurrentMembershipExpiry__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CurrentYearAmountSpent__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "CurrentYearAmountSpent__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Data_Migrated_from_XEN__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Data_Migrated_from_XEN__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "DateOfBirthText__c",
											"type": "String"
										},
										"sink": {
											"name": "DateOfBirthText__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DateOfBirth__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "DateOfBirth__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Default_Address__c",
											"type": "String"
										},
										"sink": {
											"name": "Default_Address__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DietaryRequirements__c",
											"type": "String"
										},
										"sink": {
											"name": "DietaryRequirements__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Email__c",
											"type": "String"
										},
										"sink": {
											"name": "Email__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Employer_Name__c",
											"type": "String"
										},
										"sink": {
											"name": "Employer_Name__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExcludeCommercialEmail__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "ExcludeCommercialEmail__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ExcludeSMSCommunication__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "ExcludeSMSCommunication__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ExcludeThirdPartyMailings__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "ExcludeThirdPartyMailings__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Expertise__c",
											"type": "String"
										},
										"sink": {
											"name": "Expertise__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Face_to_Face_Interview__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Face_to_Face_Interview__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Facebook__c",
											"type": "String"
										},
										"sink": {
											"name": "Facebook__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Former_Billing_Grade1__c",
											"type": "String"
										},
										"sink": {
											"name": "Former_Billing_Grade1__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Former_Billing_Grade2__c",
											"type": "String"
										},
										"sink": {
											"name": "Former_Billing_Grade2__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Gender__c",
											"type": "String"
										},
										"sink": {
											"name": "Gender__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Geography__c",
											"type": "String"
										},
										"sink": {
											"name": "Geography__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ITWorkforceSize__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "ITWorkforceSize__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 8
										}
									},
									{
										"source": {
											"name": "IndustrySubtype__c",
											"type": "String"
										},
										"sink": {
											"name": "IndustrySubtype__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Membership_Opt_Out__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Membership_Opt_Out__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsLead__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsLead__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "KeepCertificationStatusPrivate__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "KeepCertificationStatusPrivate__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "KeyContactEmail__c",
											"type": "String"
										},
										"sink": {
											"name": "KeyContactEmail__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "KeyContactName__c",
											"type": "String"
										},
										"sink": {
											"name": "KeyContactName__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Key_ICT_Skills__c",
											"type": "String"
										},
										"sink": {
											"name": "Key_ICT_Skills__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Languages__c",
											"type": "String"
										},
										"sink": {
											"name": "Languages__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LastContactDate__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastContactDate__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LinkedIn__c",
											"type": "String"
										},
										"sink": {
											"name": "LinkedIn__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LogoImageId__c",
											"type": "String"
										},
										"sink": {
											"name": "LogoImageId__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MARARegistrationCode__c",
											"type": "String"
										},
										"sink": {
											"name": "MARARegistrationCode__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Manual_Data_Entry__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Manual_Data_Entry__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "MemberGrade__c",
											"type": "String"
										},
										"sink": {
											"name": "MemberGrade__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Member_Role__c",
											"type": "String"
										},
										"sink": {
											"name": "Member_Role__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MembershipDocumentsBoxFolderId__c",
											"type": "String"
										},
										"sink": {
											"name": "MembershipDocumentsBoxFolderId__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MembershipNumberAutoGen__c",
											"type": "String"
										},
										"sink": {
											"name": "MembershipNumberAutoGen__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MembershipNumber__c",
											"type": "String"
										},
										"sink": {
											"name": "MembershipNumber__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Membership_Status__c",
											"type": "String"
										},
										"sink": {
											"name": "Membership_Status__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MigrationAgentPrimaryBusinessName__c",
											"type": "String"
										},
										"sink": {
											"name": "MigrationAgentPrimaryBusinessName__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Mobile__c",
											"type": "String"
										},
										"sink": {
											"name": "Mobile__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NationalSignificance__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "NationalSignificance__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "New_Membership_Signup_created__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "New_Membership_Signup_created__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PPP__c",
											"type": "String"
										},
										"sink": {
											"name": "PPP__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Partial_Copy_of_Person_Bio__c",
											"type": "String"
										},
										"sink": {
											"name": "Partial_Copy_of_Person_Bio__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PaymentAutoRenew__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "PaymentAutoRenew__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PaymentFrequency__c",
											"type": "String"
										},
										"sink": {
											"name": "PaymentFrequency__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PaymentMethod__c",
											"type": "String"
										},
										"sink": {
											"name": "PaymentMethod__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PersonAccountDoNotCall__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "PersonAccountDoNotCall__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PersonAccountEmailOptOut__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "PersonAccountEmailOptOut__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PersonAccountFirstName__c",
											"type": "String"
										},
										"sink": {
											"name": "PersonAccountFirstName__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PersonAccountJoinedDate__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "PersonAccountJoinedDate__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "PersonAccountLastName__c",
											"type": "String"
										},
										"sink": {
											"name": "PersonAccountLastName__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PersonAccountMiddleName__c",
											"type": "String"
										},
										"sink": {
											"name": "PersonAccountMiddleName__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PersonAccountPositionTitle__c",
											"type": "String"
										},
										"sink": {
											"name": "PersonAccountPositionTitle__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PersonAccountPublish__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "PersonAccountPublish__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PersonAccountSecondaryEmail__c",
											"type": "String"
										},
										"sink": {
											"name": "PersonAccountSecondaryEmail__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PersonAccountSuffix__c",
											"type": "String"
										},
										"sink": {
											"name": "PersonAccountSuffix__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PersonBio__c",
											"type": "String"
										},
										"sink": {
											"name": "PersonBio__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PersonImageId__c",
											"type": "String"
										},
										"sink": {
											"name": "PersonImageId__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PleaseNote__c",
											"type": "String"
										},
										"sink": {
											"name": "PleaseNote__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PreferredContactMethod__c",
											"type": "String"
										},
										"sink": {
											"name": "PreferredContactMethod__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PreferredName__c",
											"type": "String"
										},
										"sink": {
											"name": "PreferredName__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProductArticle__c",
											"type": "String"
										},
										"sink": {
											"name": "ProductArticle__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProfessionalDocumentsBoxFolderId__c",
											"type": "String"
										},
										"sink": {
											"name": "ProfessionalDocumentsBoxFolderId__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Professional_Interest__c",
											"type": "String"
										},
										"sink": {
											"name": "Professional_Interest__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Profile_Completion_Rate__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Profile_Completion_Rate__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Program_Account_for_Current_Membership__c",
											"type": "String"
										},
										"sink": {
											"name": "Program_Account_for_Current_Membership__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ROIAvailableCurrentFY__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "ROIAvailableCurrentFY__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "ROIAvailableNextFY__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "ROIAvailableNextFY__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "ReinvestmentAmount__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "ReinvestmentAmount__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "ReinvestmentRemaining__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "ReinvestmentRemaining__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "ReinvestmentSpent__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "ReinvestmentSpent__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Sister_Society_Member__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Sister_Society_Member__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SkillsAgentIDAssignment__c",
											"type": "String"
										},
										"sink": {
											"name": "SkillsAgentIDAssignment__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SkillsAgentID__c",
											"type": "String"
										},
										"sink": {
											"name": "SkillsAgentID__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SkillsAgentStatus__c",
											"type": "String"
										},
										"sink": {
											"name": "SkillsAgentStatus__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpecialBillingExpiryDate__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "SpecialBillingExpiryDate__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Specialisms__c",
											"type": "String"
										},
										"sink": {
											"name": "Specialisms__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Title__c",
											"type": "String"
										},
										"sink": {
											"name": "Title__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TotalWorkforceSize__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalWorkforceSize__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "TradingName__c",
											"type": "String"
										},
										"sink": {
											"name": "TradingName__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Twitter__c",
											"type": "String"
										},
										"sink": {
											"name": "Twitter__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UENumber__c",
											"type": "String"
										},
										"sink": {
											"name": "UENumber__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WebsiteRole__c",
											"type": "String"
										},
										"sink": {
											"name": "WebsiteRole__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WorkHistory__c",
											"type": "String"
										},
										"sink": {
											"name": "WorkHistory__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Work_Phone__c",
											"type": "String"
										},
										"sink": {
											"name": "Work_Phone__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "XEN_User_Type__c",
											"type": "String"
										},
										"sink": {
											"name": "XEN_User_Type__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "XenDocumentsBoxFolderId__c",
											"type": "String"
										},
										"sink": {
											"name": "XenDocumentsBoxFolderId__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "XenEncryptedPassword__c",
											"type": "String"
										},
										"sink": {
											"name": "XenEncryptedPassword__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "XenId__c",
											"type": "String"
										},
										"sink": {
											"name": "XenId__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Skill_Record_Count__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Skill_Record_Count__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Staff_ID__c",
											"type": "String"
										},
										"sink": {
											"name": "Staff_ID__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GradingDate__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "GradingDate__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Branch_Newsletters_Change__c",
											"type": "String"
										},
										"sink": {
											"name": "Branch_Newsletters_Change__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Credit_Card_Expiry_Date__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "Credit_Card_Expiry_Date__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "BPay_CRN__c",
											"type": "String"
										},
										"sink": {
											"name": "BPay_CRN__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CertificationExpiryDate__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "CertificationExpiryDate__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Nov_Recurring_Email__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Nov_Recurring_Email__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Post_Nominals__c",
											"type": "String"
										},
										"sink": {
											"name": "Post_Nominals__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "JoinedLastWeek__c",
											"type": "String"
										},
										"sink": {
											"name": "JoinedLastWeek__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Name_With_First_Name_Suffix__c",
											"type": "String"
										},
										"sink": {
											"name": "Name_With_First_Name_Suffix__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Valid_Until_End__c",
											"type": "String"
										},
										"sink": {
											"name": "Valid_Until_End__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CMSJoinNowApplicationType__c",
											"type": "String"
										},
										"sink": {
											"name": "CMSJoinNowApplicationType__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CmsBoxMembershipFileIdsToMove__c",
											"type": "String"
										},
										"sink": {
											"name": "CmsBoxMembershipFileIdsToMove__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CmsDirectDepositBoxDocumentDetails__c",
											"type": "String"
										},
										"sink": {
											"name": "CmsDirectDepositBoxDocumentDetails__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CmsDirectDepositBoxFileIdsToMove__c",
											"type": "String"
										},
										"sink": {
											"name": "CmsDirectDepositBoxFileIdsToMove__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CmsICTBoxDocumentDetails__c",
											"type": "String"
										},
										"sink": {
											"name": "CmsICTBoxDocumentDetails__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CmsICTBoxFileIdsToMove__c",
											"type": "String"
										},
										"sink": {
											"name": "CmsICTBoxFileIdsToMove__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CmsMembershipBoxDocumentDetails__c",
											"type": "String"
										},
										"sink": {
											"name": "CmsMembershipBoxDocumentDetails__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CmsProfessionBoxFileIdsToMove__c",
											"type": "String"
										},
										"sink": {
											"name": "CmsProfessionBoxFileIdsToMove__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CountryOfEducation__c",
											"type": "String"
										},
										"sink": {
											"name": "CountryOfEducation__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreateUserRecordOnly__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "CreateUserRecordOnly__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "DateOfCommencement__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "DateOfCommencement__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "DateOfExpectedCompletion__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "DateOfExpectedCompletion__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "NameOfInstitution__c",
											"type": "String"
										},
										"sink": {
											"name": "NameOfInstitution__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NameOnCreditCard__c",
											"type": "String"
										},
										"sink": {
											"name": "NameOnCreditCard__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "QualificationName__c",
											"type": "String"
										},
										"sink": {
											"name": "QualificationName__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RememberForFuturePayments__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "RememberForFuturePayments__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "EmployeeId__c",
											"type": "String"
										},
										"sink": {
											"name": "EmployeeId__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Identified_for_Merge__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Identified_for_Merge__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Member_Since__c",
											"type": "String"
										},
										"sink": {
											"name": "Member_Since__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "JoinedThisMonth__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "JoinedThisMonth__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Enrolment_Status__c",
											"type": "String"
										},
										"sink": {
											"name": "Enrolment_Status__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PY_Completion_Date__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "PY_Completion_Date__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Provider_Student_Number__c",
											"type": "String"
										},
										"sink": {
											"name": "Provider_Student_Number__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "VETrack_Number__c",
											"type": "String"
										},
										"sink": {
											"name": "VETrack_Number__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountImage__c",
											"type": "String"
										},
										"sink": {
											"name": "AccountImage__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RecordSource__c",
											"type": "String"
										},
										"sink": {
											"name": "RecordSource__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PostNominalsForCP__c",
											"type": "String"
										},
										"sink": {
											"name": "PostNominalsForCP__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccreditedUniversityFacultySchool__c",
											"type": "String"
										},
										"sink": {
											"name": "AccreditedUniversityFacultySchool__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Exclude_from_Email_Communication__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Exclude_from_Email_Communication__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SkillsMembershipDuplicateAccount_User__c",
											"type": "String"
										},
										"sink": {
											"name": "SkillsMembershipDuplicateAccount_User__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Information_Age__c",
											"type": "String"
										},
										"sink": {
											"name": "Information_Age__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UniqueId__c",
											"type": "String"
										},
										"sink": {
											"name": "UniqueId__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ACS_Newsletter__c",
											"type": "String"
										},
										"sink": {
											"name": "ACS_Newsletter__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ACS_Marketing_Communication__c",
											"type": "String"
										},
										"sink": {
											"name": "ACS_Marketing_Communication__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SMS_Communications__c",
											"type": "String"
										},
										"sink": {
											"name": "SMS_Communications__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ThirdParty_Communications__c",
											"type": "String"
										},
										"sink": {
											"name": "ThirdParty_Communications__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Create_Free_Skills_Membership__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Create_Free_Skills_Membership__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SkillsAgentApplication__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "SkillsAgentApplication__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Number_of_Certifications__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Number_of_Certifications__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Password_Token_Expiry_Date__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "Password_Token_Expiry_Date__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Password_Token_Used__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Password_Token_Used__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Password_Token__c",
											"type": "String"
										},
										"sink": {
											"name": "Password_Token__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Days_Until_CC_Expiry__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Days_Until_CC_Expiry__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Eligible_for_CC_Expiry_Reminder__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Eligible_for_CC_Expiry_Reminder__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Outfit_Certificates_Last_Update__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "Outfit_Certificates_Last_Update__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Outfit_Membeship_Cert_Last_Update__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "Outfit_Membeship_Cert_Last_Update__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Disable_Validation__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Disable_Validation__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Short_Name__c",
											"type": "String"
										},
										"sink": {
											"name": "Short_Name__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "No_of_Programs_With_Active_Memberships__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "No_of_Programs_With_Active_Memberships__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Active_ROI_Budget__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Total_Active_ROI_Budget__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_ROI_Balance_Remaining__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Total_ROI_Balance_Remaining__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_ROI_Spend__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Total_ROI_Spend__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "fferpcore__ExemptionCertificate__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__ExemptionCertificate__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__IsBillingAddressValidated__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "fferpcore__IsBillingAddressValidated__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "fferpcore__IsShippingAddressValidated__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "fferpcore__IsShippingAddressValidated__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "fferpcore__OutputVatCode__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__OutputVatCode__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__SalesTaxStatus__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__SalesTaxStatus__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__TaxCode1__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__TaxCode1__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__TaxCode2__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__TaxCode2__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__TaxCode3__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__TaxCode3__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__TaxCountryCode__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__TaxCountryCode__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__ValidatedBillingCity__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__ValidatedBillingCity__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__ValidatedBillingCountry__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__ValidatedBillingCountry__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__ValidatedBillingPostalCode__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__ValidatedBillingPostalCode__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__ValidatedBillingState__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__ValidatedBillingState__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__ValidatedBillingStreet__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__ValidatedBillingStreet__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__ValidatedShippingCity__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__ValidatedShippingCity__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__ValidatedShippingCountry__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__ValidatedShippingCountry__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__ValidatedShippingPostalCode__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__ValidatedShippingPostalCode__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__ValidatedShippingState__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__ValidatedShippingState__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__ValidatedShippingStreet__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__ValidatedShippingStreet__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__VatRegistrationNumber__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__VatRegistrationNumber__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "fferpcore__VatStatus__c",
											"type": "String"
										},
										"sink": {
											"name": "fferpcore__VatStatus__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Facebook_Messenger_Id__c",
											"type": "String"
										},
										"sink": {
											"name": "Facebook_Messenger_Id__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Total_Membership_Years__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Total_Membership_Years__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Membership_Balance_Amount__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Membership_Balance_Amount__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Education_Level__c",
											"type": "String"
										},
										"sink": {
											"name": "Education_Level__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Certificate_Specialism__c",
											"type": "String"
										},
										"sink": {
											"name": "Certificate_Specialism__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Is_Active__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Is_Active__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Elected_Official__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Elected_Official__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Confirmation_of_PSS_Enrollment__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "Confirmation_of_PSS_Enrollment__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Employment_Category__c",
											"type": "String"
										},
										"sink": {
											"name": "Employment_Category__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Employment_Type__c",
											"type": "String"
										},
										"sink": {
											"name": "Employment_Type__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Higher_Cap__c",
											"type": "String"
										},
										"sink": {
											"name": "Higher_Cap__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PSS_Insurance_Cover__c",
											"type": "String"
										},
										"sink": {
											"name": "PSS_Insurance_Cover__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PSS_Member__c",
											"type": "String"
										},
										"sink": {
											"name": "PSS_Member__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Certification_Outfit_Document_Id__c",
											"type": "String"
										},
										"sink": {
											"name": "Certification_Outfit_Document_Id__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Pendula_Test__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Pendula_Test__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Current_Membership_Expiry_As_Text__c",
											"type": "String"
										},
										"sink": {
											"name": "Current_Membership_Expiry_As_Text__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Days_since_Current_Membership_Expiry__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Days_since_Current_Membership_Expiry__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Age__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Age__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Private__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Private__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Elected_Official_Count__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Elected_Official_Count__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Is_Elected_Official__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Is_Elected_Official__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Member_Tier__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Member_Tier__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Litmos__Active__c",
											"type": "String"
										},
										"sink": {
											"name": "Litmos__Active__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Litmos__CustomerPriority__c",
											"type": "String"
										},
										"sink": {
											"name": "Litmos__CustomerPriority__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Litmos__Litmos_Id__c",
											"type": "String"
										},
										"sink": {
											"name": "Litmos__Litmos_Id__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Litmos__NumberofLocations__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "Litmos__NumberofLocations__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 3
										}
									},
									{
										"source": {
											"name": "Litmos__SLAExpirationDate__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "Litmos__SLAExpirationDate__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Litmos__SLASerialNumber__c",
											"type": "String"
										},
										"sink": {
											"name": "Litmos__SLASerialNumber__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Litmos__SLA__c",
											"type": "String"
										},
										"sink": {
											"name": "Litmos__SLA__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Litmos__UpsellOpportunity__c",
											"type": "String"
										},
										"sink": {
											"name": "Litmos__UpsellOpportunity__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Student_ID__c",
											"type": "String"
										},
										"sink": {
											"name": "Student_ID__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Access_to_Canvas__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Access_to_Canvas__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "fferpcore__MaterializedBillingAddressValidated__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "fferpcore__MaterializedBillingAddressValidated__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "fferpcore__MaterializedShippingAddressValidated__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "fferpcore__MaterializedShippingAddressValidated__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "EU_Applicants_Flag__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "EU_Applicants_Flag__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Is_New_User__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Is_New_User__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Brand__c",
											"type": "String"
										},
										"sink": {
											"name": "Brand__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MC_Applicant__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "MC_Applicant__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Is_Changed__c",
											"type": "Boolean"
										},
										"sink": {
											"name": "Is_Changed__c",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "User_Change_Error__c",
											"type": "String"
										},
										"sink": {
											"name": "User_Change_Error__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PartiallyCompletedMicroCredentialId__c",
											"type": "String"
										},
										"sink": {
											"name": "PartiallyCompletedMicroCredentialId__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Pendula_Resend__c",
											"type": "DateTime"
										},
										"sink": {
											"name": "Pendula_Resend__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Community_Name__c",
											"type": "String"
										},
										"sink": {
											"name": "Community_Name__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HiddenUserLocationState__c",
											"type": "String"
										},
										"sink": {
											"name": "HiddenUserLocationState__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HiddenFullName__c",
											"type": "String"
										},
										"sink": {
											"name": "HiddenFullName__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Industry__c",
											"type": "String"
										},
										"sink": {
											"name": "Industry__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Azure_ID__c",
											"type": "String"
										},
										"sink": {
											"name": "Azure_ID__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Azure_Email__c",
											"type": "String"
										},
										"sink": {
											"name": "Azure_Email__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {
									"object1": "account",
									"object2": "assessment"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {
									"object1": "account",
									"object2": "assessment"
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Account"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "Account"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id ,IsDeleted ,MasterRecordId ,Name ,Type ,RecordTypeId ,ParentId ,BillingStreet ,BillingCity ,BillingState ,BillingPostalCode ,BillingCountry ,BillingLatitude ,BillingLongitude ,BillingGeocodeAccuracy ,ShippingStreet ,ShippingCity ,ShippingState ,ShippingPostalCode ,ShippingCountry ,ShippingLatitude ,ShippingLongitude ,ShippingGeocodeAccuracy ,Phone ,Fax ,AccountNumber ,Website ,PhotoUrl ,Sic ,Industry ,AnnualRevenue ,NumberOfEmployees ,Ownership ,TickerSymbol ,Description ,Rating ,Site ,CurrencyIsoCode ,OwnerId ,CreatedDate ,CreatedById ,LastModifiedDate ,LastModifiedById ,SystemModstamp ,LastActivityDate ,LastViewedDate ,LastReferencedDate ,IsCustomerPortal ,Jigsaw ,JigsawCompanyId ,AccountSource ,SicDesc ,ffbf__AccountParticulars__c ,ffbf__BankBIC__c ,ffbf__PaymentCode__c ,ffbf__PaymentCountryISO__c ,ffbf__PaymentPriority__c ,ffbf__PaymentRoutingMethod__c ,Purchase_Order_Contact__c ,Service_Category__c ,ABN__c ,ANZSCOCode__c ,AccountManager__c ,AccountType__c ,Account_18_Digits_ID__c ,Account_Support__c ,Active_Certification_ID__c ,AdditionalAccountType__c ,AllergyOtherDietaryRequirements__c ,BillingContact__c ,BillingGradeChangeDate__c ,BillingGrade__c ,Billing_Grade1_Change_Date__c ,Billing_Grade2_Change_Date__c ,BoxFolderId__c ,Branch_Newsletters__c ,Branch_Overridden__c ,Branch__c ,Bulk_Upload_PPP_ID__c ,CertificationBadge__c ,CertificationLevel__c ,CommunityUser__c ,Completion_Points_Anzsco__c ,Completion_Points_Bio__c ,Completion_Points_DOB__c ,Completion_Points_Email__c ,Completion_Points_Employer_Name__c ,Completion_Points_Expertise__c ,Completion_Points_FL_Name__c ,Completion_Points_Gender__c ,Completion_Points_H_Address__c ,Completion_Points_Industry__c ,Completion_Points_Languages__c ,Completion_Points_Mobile__c ,Completion_Points_Phone__c ,Completion_Points_Position__c ,Completion_Points_Sec_Email__c ,Completion_Points_Skills__c ,Completion_Points_Specialism__c ,Completion_Points_Sub_Industry__c ,Completion_Points_W_Address__c ,CongaCTCPFormula__c ,CongaCTCPTemplateID__c ,CongaCitySys__c ,CongaCountrySys__c ,CongaMemberCertificate__c ,CongaPostCodeSys__c ,CongaStateSys__c ,CongaStreetSys__c ,ConsultantsDirectory__c ,CreateBoxFolders__c ,Create_User_and_Send_New_Password__c ,CreditCardLast4Digits__c ,CreditCardPaymentToken__c ,CreditCardType__c ,CurrentMembershipExpiry__c ,CurrentYearAmountSpent__c ,Data_Migrated_from_XEN__c ,DateOfBirthText__c ,DateOfBirth__c ,Default_Address__c ,DietaryRequirements__c ,Email__c ,Employer_Name__c ,ExcludeCommercialEmail__c ,ExcludeSMSCommunication__c ,ExcludeThirdPartyMailings__c ,Expertise__c ,Face_to_Face_Interview__c ,Facebook__c ,Former_Billing_Grade1__c ,Former_Billing_Grade2__c ,Gender__c ,Geography__c ,ITWorkforceSize__c ,IndustrySubtype__c ,Membership_Opt_Out__c ,IsLead__c ,KeepCertificationStatusPrivate__c ,KeyContactEmail__c ,KeyContactName__c ,Key_ICT_Skills__c ,Languages__c ,LastContactDate__c ,LinkedIn__c ,LogoImageId__c ,MARARegistrationCode__c ,Manual_Data_Entry__c ,MemberGrade__c ,Member_Role__c ,MembershipDocumentsBoxFolderId__c ,MembershipNumberAutoGen__c ,MembershipNumber__c ,Membership_Status__c ,MigrationAgentPrimaryBusinessName__c ,Mobile__c ,NationalSignificance__c ,New_Membership_Signup_created__c ,PPP__c ,Partial_Copy_of_Person_Bio__c ,PaymentAutoRenew__c ,PaymentFrequency__c ,PaymentMethod__c ,PersonAccountDoNotCall__c ,PersonAccountEmailOptOut__c ,PersonAccountFirstName__c ,PersonAccountJoinedDate__c ,PersonAccountLastName__c ,PersonAccountMiddleName__c ,PersonAccountPositionTitle__c ,PersonAccountPublish__c ,PersonAccountSecondaryEmail__c ,PersonAccountSuffix__c ,PersonBio__c ,PersonImageId__c ,PleaseNote__c ,PreferredContactMethod__c ,PreferredName__c ,ProductArticle__c ,ProfessionalDocumentsBoxFolderId__c ,Professional_Interest__c ,Profile_Completion_Rate__c ,Program_Account_for_Current_Membership__c ,ROIAvailableCurrentFY__c ,ROIAvailableNextFY__c ,ReinvestmentAmount__c ,ReinvestmentRemaining__c ,ReinvestmentSpent__c ,Sister_Society_Member__c ,SkillsAgentIDAssignment__c ,SkillsAgentID__c ,SkillsAgentStatus__c ,SpecialBillingExpiryDate__c ,Specialisms__c ,Title__c ,TotalWorkforceSize__c ,TradingName__c ,Twitter__c ,UENumber__c ,WebsiteRole__c ,WorkHistory__c ,Work_Phone__c ,XEN_User_Type__c ,XenDocumentsBoxFolderId__c ,XenEncryptedPassword__c ,XenId__c ,Skill_Record_Count__c ,Staff_ID__c ,GradingDate__c ,Branch_Newsletters_Change__c ,Credit_Card_Expiry_Date__c ,BPay_CRN__c ,CertificationExpiryDate__c ,Nov_Recurring_Email__c ,Post_Nominals__c ,JoinedLastWeek__c ,Name_With_First_Name_Suffix__c ,Valid_Until_End__c ,CMSJoinNowApplicationType__c ,CmsBoxMembershipFileIdsToMove__c ,CmsDirectDepositBoxDocumentDetails__c ,CmsDirectDepositBoxFileIdsToMove__c ,CmsICTBoxDocumentDetails__c ,CmsICTBoxFileIdsToMove__c ,CmsMembershipBoxDocumentDetails__c ,CmsProfessionBoxFileIdsToMove__c ,CountryOfEducation__c ,CreateUserRecordOnly__c ,DateOfCommencement__c ,DateOfExpectedCompletion__c ,NameOfInstitution__c ,NameOnCreditCard__c ,QualificationName__c ,RememberForFuturePayments__c ,EmployeeId__c ,Identified_for_Merge__c ,Member_Since__c ,JoinedThisMonth__c ,Enrolment_Status__c ,PY_Completion_Date__c ,Provider_Student_Number__c ,VETrack_Number__c ,AccountImage__c ,RecordSource__c ,PostNominalsForCP__c ,AccreditedUniversityFacultySchool__c ,Exclude_from_Email_Communication__c ,SkillsMembershipDuplicateAccount_User__c ,Information_Age__c ,UniqueId__c ,ACS_Newsletter__c ,ACS_Marketing_Communication__c ,SMS_Communications__c ,ThirdParty_Communications__c ,Create_Free_Skills_Membership__c ,SkillsAgentApplication__c ,Number_of_Certifications__c ,Password_Token_Expiry_Date__c ,Password_Token_Used__c ,Password_Token__c ,Days_Until_CC_Expiry__c ,Eligible_for_CC_Expiry_Reminder__c ,Outfit_Certificates_Last_Update__c ,Outfit_Membeship_Cert_Last_Update__c ,Disable_Validation__c ,Short_Name__c ,No_of_Programs_With_Active_Memberships__c ,Total_Active_ROI_Budget__c ,Total_ROI_Balance_Remaining__c ,Total_ROI_Spend__c ,fferpcore__ExemptionCertificate__c ,fferpcore__IsBillingAddressValidated__c ,fferpcore__IsShippingAddressValidated__c ,fferpcore__OutputVatCode__c ,fferpcore__SalesTaxStatus__c ,fferpcore__TaxCode1__c ,fferpcore__TaxCode2__c ,fferpcore__TaxCode3__c ,fferpcore__TaxCountryCode__c ,fferpcore__ValidatedBillingCity__c ,fferpcore__ValidatedBillingCountry__c ,fferpcore__ValidatedBillingPostalCode__c ,fferpcore__ValidatedBillingState__c ,fferpcore__ValidatedBillingStreet__c ,fferpcore__ValidatedShippingCity__c ,fferpcore__ValidatedShippingCountry__c ,fferpcore__ValidatedShippingPostalCode__c ,fferpcore__ValidatedShippingState__c ,fferpcore__ValidatedShippingStreet__c ,fferpcore__VatRegistrationNumber__c ,fferpcore__VatStatus__c ,Facebook_Messenger_Id__c ,Total_Membership_Years__c ,Membership_Balance_Amount__c ,Education_Level__c ,Certificate_Specialism__c ,Is_Active__c ,Elected_Official__c ,Confirmation_of_PSS_Enrollment__c ,Employment_Category__c ,Employment_Type__c ,Higher_Cap__c ,PSS_Insurance_Cover__c ,PSS_Member__c ,Certification_Outfit_Document_Id__c ,Pendula_Test__c ,Current_Membership_Expiry_As_Text__c ,Days_since_Current_Membership_Expiry__c ,Age__c ,Private__c ,Elected_Official_Count__c ,Is_Elected_Official__c ,Member_Tier__c ,Litmos__Active__c ,Litmos__CustomerPriority__c ,Litmos__Litmos_Id__c ,Litmos__NumberofLocations__c ,Litmos__SLAExpirationDate__c ,Litmos__SLASerialNumber__c ,Litmos__SLA__c ,Litmos__UpsellOpportunity__c ,Student_ID__c ,Access_to_Canvas__c ,fferpcore__MaterializedBillingAddressValidated__c ,fferpcore__MaterializedShippingAddressValidated__c ,EU_Applicants_Flag__c ,Is_New_User__c ,Brand__c ,MC_Applicant__c ,Is_Changed__c ,User_Change_Error__c ,PartiallyCompletedMicroCredentialId__c ,Pendula_Resend__c ,Community_Name__c ,HiddenUserLocationState__c ,HiddenFullName__c ,Industry__c, Azure_Email__c, Azure_ID__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"defaultFromvalue": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ACSDSSF')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF AccountHistoryCstm Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate > {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": false,
									"keys": [
										"Member_Account__c"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(lastmodifieddate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(lastmodifieddate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Account_History__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "AccountHistory__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, IsDeleted, Name, CurrencyIsoCode, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, Member_Account__c, Edit_Date__c, Modified_Field_Name__c, New_Value__c, Old_Value__c, User__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ACSDSSF')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF AccountHistoryStd Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  createddate > {ts'@{variables('brpExtractFrom')}'} AND\ncreateddate <= {ts'@{variables('brpExtractTo')}'}\n",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(createddate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(CreatedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE CreatedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "AccountHistory"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "AccountHistory_s"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id ,IsDeleted ,AccountId ,CreatedById ,CreatedDate ,Field ,DataType ,OldValue, NewValue"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ACSDSSF')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF Accreditation Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforce"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(\n  less(  pipeline().parameters.brpExtractFrom,\nformatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')), \npipeline().parameters.brpExtractFrom,\nformatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {
									"object1": "account",
									"object2": "assessment"
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@if(\n  less(  pipeline().parameters.brpExtractTo,\nformatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')), \npipeline().parameters.brpExtractTo,\nformatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Accreditation__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "Accreditation__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": " Id, OwnerId, IsDeleted, Name, CurrencyIsoCode, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, LastViewedDate, LastReferencedDate, AccommodationBooked__c, AccreditationManager__c, ApplicationType__c, DueDate__c, ExtraMembers__c, FlightsBooked__c, HeadofSchoolEmail__c, HeadofSchoolPhone__c, HeadofSchool__c, InvoiceSent__c, Location__c, LogisticNotes__c, NextActionDueDate__c, NextAction__c, Notes__c, OtherApplicationInformation__c, OtherVisitManager__c, PanelAppointed__c, PanelChair__c, PanelMembers__c, Postcode__c, PrimaryContactEmail__c, PrimaryContactName__c, PrimaryContactPhone__c, RenewDate__c, RenewYear__c, School__c, State__c, StatusIndicator__c, Status__c, Street__c, Suburb__c, UniversityName__c, VisitDate12Weeks__c, VisitDate8weeks__c, VisitDate9weeks__c, VisitDate__c, VisitEmailSent__c, VisitLocation__c, VisitManager__c, Visit_Date_End__c, X2YearsBeforeRenewal__c, UniversityId__c, UniversityCountry__c, Renew_Date_Override__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					},
					"brpExtractFrom": {
						"type": "string",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "string",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ACSDSSF')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF AccreditedCourse__c Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforce"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(\n  less(  pipeline().parameters.brpExtractFrom,\nformatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')), \npipeline().parameters.brpExtractFrom,\nformatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@if(\n  less(  pipeline().parameters.brpExtractTo,\nformatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')), \npipeline().parameters.brpExtractTo,\nformatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "AccreditedCourse__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "AccreditedCourse__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, OwnerId, IsDeleted, Name, CurrencyIsoCode, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, AccreditationAssessment__c, Campus__c, Course_ID__c, Course__c, DisplayonWebsite__c, ExpiryDate__c, Notes__c, Outcomes__c, Start_Date__c, SEOUL_Accord__c, Engineers_Australia__c, Specialism__c, Conditions__c, Conditions_Due_Date__c, Conditions_Notes__c, Provisional__c, Provisional_Due_Date__c, Provisional_Notes__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					},
					"brpExtractFrom": {
						"type": "string",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "string",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ACSDSSF')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF Assessment History Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  createddate >= {ts'@{variables('brpExtractFrom')}'} AND\ncreateddate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(createddate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(createddate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE createddate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "updat AEST",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Salesforce object",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[AsessmenthistoryAEST]"
						},
						"linkedServiceName": {
							"referenceName": "LSSQLPOC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Assessment__history"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "assessment__history"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, IsDeleted, ParentId, CreatedById, CreatedDate, Field, DataType, OldValue, NewValue"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ACSDSSF')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]",
				"[concat(variables('factoryId'), '/linkedServices/LSSQLPOC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF Assessment Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {
									"object1": "account",
									"object2": "assessment"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "dbo"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.TargetTableName}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "dbo"
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "update AEST",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Salesforce object",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[AssessmenoldAEST]"
						},
						"linkedServiceName": {
							"referenceName": "LSSQLPOC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "assessment__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "assessment"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "  Id ,OwnerId ,IsDeleted ,Name ,CurrencyIsoCode ,RecordTypeId ,CreatedDate ,CreatedById ,LastModifiedDate ,LastModifiedById ,SystemModstamp ,LastActivityDate ,LastViewedDate ,LastReferencedDate ,ACSMembershipNumberFormula__c ,ANZSCOCode__c ,ActivationDate__c ,Active__c ,ApplicantFirstName__c ,ApplicantInterview__c ,ApplicantName__c ,ApplicantPaid__c ,ApplicantState__c ,ApplicantSubmitEmailSent__c ,Applicant_Last_Name__c ,Applicant_Name_Formula__c ,Applicant_Title__c ,Applicant_eligible_for_Senior_Membership__c ,ApplicationStatusIndicator__c ,ApplicationSubtype__c ,ApplicationType__c ,AssessmentClosedDate__c ,AssessmentComments__c ,AssessmentDate__c ,AssessmentDueDate__c ,AssessmentPathway__c ,AssessmentResult__c ,Assessment_18_Digits_ID__c ,Assessment_Report_ID__c ,Assessment_Template_ID__c ,Assessor1ConflictOfInterest__c ,Assessor2ConflictofInterest__c ,AssessorReviewComments__c ,Assessor_Appeal_Comments__c ,Assessor__c ,AvgAssessorTimeDays__c ,BECEndorsementReason__c ,BECEndorsement__c ,BFCChair__c ,BalanceDue__c ,BirthCertificateOrPassportApproved__c ,BoxFolderId__c ,BranchManager__c ,CBOKNotes__c ,CPD_Hours_Percentage_Complete__c ,CPD_Hours_Required__c ,CPD_Run_Rate_Variance__c ,CPD_Target_Run_Rate__c ,CPPathwayScenario__c ,CPPathway__c ,CTPathwayScenario__c ,CTPathway__c ,CV_Notes__c ,Calculated__c ,CanUnsuitableBeRectified__c ,CaseAge__c ,CaseManager__c ,Certificate_Renewed__c ,CertificationExpiryDate__c ,CertificationPeriod__c ,CertificationStatus__c ,Certification_Type__c ,Change_Management__c ,Citation__c ,CommentsaddedtoUnsuccessfulEmail__c ,CompanyorUniversity__c ,CompletedApplicationReceivedDate__c ,Conga_Assessment_Report_Download__c ,Conga_Next_Action_Merge__c ,Contact_Email__c ,Contact__c ,Continuing__c ,ContributionRecognisedElsewhere__c ,ContributionWorthyofRecognition__c ,CountryOfBirth__c ,CountryOfResidence__c ,CreateBoxFolder__c ,CreditCardonFile__c ,CurrentUserCaseManager__c ,Current_Certification__c ,DIACComments__c ,Data_Information_Management__c ,Data_Migrated_from_XEN__c ,DateOfBirth__c ,DateOfKnowledgeMet__c ,Days_Remaining__c ,Days_Since_Submission_Date__c ,DeadlineDate__c ,DefaultEmailAddress__c ,DefaultMailAddressCode__c ,DefaultMailAddressID__c ,DefaultMailAddressStreet__c ,DefaultMailCity__c ,DefaultMailCountry__c ,DefaultMailPostalCode__c ,DefaultMailState__c ,Education__c ,Email_Address__c ,Email_Template__c ,Employed_in_ICT_school_research_facility__c ,End_Date__c ,ErrorsFoundCount__c ,Ethics__c ,ExcelledInWhichRoleArea__c ,Experience__c ,FinalReview__c ,FinalisedDate__c ,FollowUpDueDate__c ,Former_ANZSCO__c ,Former_Application_Sub_Type__c ,Former_Application_Type__c ,Former_Assessor_Name__c ,FromAssessorDate__c ,FromAssessorNotEdited__c ,Hardware_Software_Fundamentals__c ,HasCMSIntegrationCompleted__c ,Has_10yrs_of_professional_ICT_experience__c ,Highest_level_of_qualification_achieved__c ,Holds_Masters_by_Research_PhD__c ,HonoursandAwards__c ,Human_computer_Interaction__c ,ICTManagement__c ,ICTProblemSolving__c ,ICTProfessionalKnowledge__c ,ICT_Problem_Solving__c ,IT_Project_Management__c ,IT_governance__c ,ImpactOnITFieldManagement__c ,InPreparation15DayReminderDate__c ,InPreparation15DayReminder__c ,InPreparation25DayReminderDate__c ,InPreparation25DayReminder__c ,Internal_Notes__c ,Interpersonal_Communication__c ,IsICTKnowledgeAcceptable__c ,Keep_Certification_Status_Private__c ,LapsedComments__c ,LapsedFollowUp__c ,LastModifiedUserProfileName__c ,MCAssessmentOutcome__c ,Manual_Data_Entry__c, MeetCBOKRequirements__c, MembershipExpiry__c, Mobile__c, NFCAssessmentOutcome__c, Nationality__c, Networking__c, Next_Action_Due_Date__c, Next_Action__c, NominationSecondedByDate__c, NominationSecondedByEmail__c, NominationSecondedByPhone__c, NominationSecondedBy__c, NominatorACSMembershipNumber__c, NominatorEmail__c, NominatorName__c, NominatorPhoneNumber__c, Nominator_Declaration_Date__c, NonDecisionReady__c, OriginalApplicationReceived__c, Original_Received_Date__c, Overdrive_Target__c, Passport_Number__c, Password__c, Payment_Recieved__c, PeriodofMajorContribution__c, PhoneNumber__c, PlagiarismDetected__c, Position_Title_1__c, Position_Title_2__c, Potential_RMD__c, Previous_Certification__c, PriorityReason__c, Priority__c, ProfessionalYearComplete__c, Professionalism__c, Programming__c, ProjectReportUpload__c, ProjectReportsAttachedAndAcceptable__c, PublicationsandPatents__c, QADate__c, QualityCheckComment__c, Quality_Check_Status__c, REFERENCE_TO_X_EN__c, RMDCalculationErrorMessages__c, RMDLogicUsed__c, RPLComments__c, Ready_for_Renewal__c, ReasonforAppeal__c, ReasonforReviewChangeofANZSCO__c, ReasonforReviewExperience__c, ReasonforReviewQualification__c, ReasonforReview__c, RectifyComment__c, ReferToDIAC__c, Referee_Company_1__c, Referee_Company_2__c, Referee_Email_1__c, Referee_Email_2__c, Referee_Name_1__c, Referee_Name_2__c, Referee_Phone_1__c, Referee_Phone_2__c, RelatedAssessment__c, RelatedCertification__c, RenewalProcessed__c, RequirementsMetDate__c, ResultLetterApproved__c, Result_Letter_Template__c, ReviewOrAppealEmailTemplate__c, ReviewOrAppealTemplateID__c, Review_Unsuitable__c, SFIA_Specialism__c, Security_Management__c, Security_Policy__c, Service_Management__c, SkillsAgent__c, Societal_Issues_Legal_issues_Privacy__c, Status__c, SubmissionDate__c, Suggested_Pathway__c, Suggested_Type__c, Systems_Acquisition__c, Systems_Development__c, Target_CPD_Hours__c, Teamwork_Concepts_and_Issues__c, TechnologyBuilding__c, TechnologyResources__c, TotalAcceptedExperienceYM__c, TotalCPDHours__c, Total_CPD_Hours_and_Minutes__c, Total_CPD_Minutes_Conversion__c, TypeofCertificationAssessment__c, UnsuccessfulNominationCommunication__c, WhatMakesContributionDistinguished__c, WithAssessorDate__c, X5YearsProfessionalICTExpAtSFIA6__c, Years_in_SFIA_Specialism__c, Years_of_experience_in_ICT__c, No_of_Qualification_Accreditation__c, TotalAcceptedExperienceDays__c, TranscriptRollupQualifications__c, Certification_Lodged_with_Membership__c, ApplicantAttachmentsBoxFolderId__c, AssessorAttachmentsBoxFolderId__c, CmsApplicantBoxDocumentDetails__c, CmsBoxApplicantFileIdsToMove__c, ResultLetterBoxFolderId__c, MonthActivated__c, ExpriyMonth__c, ApplicationCreatedDateInXenAndSF__c, Xen_Application_ID__c, PrioriyInformation__c, Certificate_Specialism__c, RecommendedANZSCO__c, RecommendedApplicationType__c, LinkedApplication__c, CaseClosed__c, ApplicantDOB__c, No_RPL_Document__c, RMDFormatted__c, DateofKnowledgeMetFormatted__c, BypassValidation__c, CurrentPreviousWeekFinalisedDate__c, CurrentPreviousMonthFinalisedDate__c, Related_Certification_Status__c, Outfit_Assessment_Last_Update__c, Outfit_Last_Letter_Template__c, Outfit_Letter_Content__c, Email_Correspondence_Sent__c, Certification_Expiry_Date_As_Text__c, Days_Since_Activation__c, Membership_Status__c, Pendula_Test__c, PlagScan_Doc_Id__c, Plagiarism_Completion_Date__c, Outfit_Report_Document_Id__c, Outfit_Report_Document_Name__c, Plagiarism_Error__c, Plagiarism_Flag__c, Plagiarism_Level__c, Plagiarism_Score__c, Plagiarism_Status__c, Plagiarism_Submission_Date__c, View_in_PlagScan__c, Request_Additional_Documents__c, Unsuitable_Outcome__c, ProductID__c, GTI_Application__c, Certification_Category__c"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ACSDSSF')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]",
				"[concat(variables('factoryId'), '/linkedServices/LSSQLPOC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF CPD Hours Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "CPDHours__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "cpdhours"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": " [Id],      [OwnerId]       ,[IsDeleted]       ,[Name]       ,[CurrencyIsoCode]       ,[CreatedDate]       ,[CreatedById]       ,[LastModifiedDate]       ,[LastModifiedById]       ,[SystemModstamp]       ,[Account__c]       ,[BoxFolderId__c]       ,[Campaign__c]       ,[CertificationLookup__c]       ,[CreateBoxFolder__c]       ,[Data_Migrated_from_XEN__c]       ,[Date__c]       ,[Details__c]       ,[Hours__c]       ,[Objective__c]       ,[SFIA_Category__c]       ,[SFIA_Core_Skill__c]       ,[SFIA_Generic_Level__c]       ,[SFIA_Skill_Level__c]       ,[SFIA_Skill__c]       ,[SFIA_Subcategory__c]       ,[Source__c]       ,[Topic__c]       ,[Type__c]       ,[ObjectiveDetails__c]       ,[CPD_Created_Month__c]       ,[Cpd_Created_Quater__c]       ,[Primary_Competency_External_Reference__c]       ,[Primary_Competency_Framework__c]       ,[Primary_Competency_Full_Label__c]       ,[Primary_Competency_Label__c]       ,[Primary_Competency_Updated_from_Child__c]       ,[Primary_Competency__c]       ,[View_Time__c]"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ACSDSSF')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF CampaignMember Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "CampaignMember"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "CampaignMember"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, IsDeleted, CampaignId, LeadId, ContactId, Status, HasResponded, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, FirstRespondedDate, CurrencyIsoCode, Salutation, Name, FirstName, LastName, Title, Street, City, State, PostalCode, Country, Email, Phone, Fax, MobilePhone, Description, DoNotCall, HasOptedOutOfEmail, HasOptedOutOfFax, LeadSource, CompanyOrAccount, Type, LeadOrContactId, LeadOrContactOwnerId, ArrivedLate__c, Attendee_Title__c, BookingAddition__c, CampaignMemberAccountId__c, CancellationReasonReference__c, Comments__c, CongaEventConfirmationEmail__c, Conga_Event_Confirmation_Email_RM__c, ConvertedEventOwner__c, ConvertedStartDate__c, DateTimeWhenMemberAttended__c, DietaryRequirements_del__c, DoNotSendAutoEmails__c, Employer__c, EventOwnerEmail__c, EventPricing__c, EventRegistrationNumber__c, FirstReminderEmailSent__c, Gender__c, GroupBooking__c, InGroupBooking__c, LeftEarly__c, MemberGrade__c, Member__c, MemeberContactName__c, PPP__c, Paid__c, PostponeReasonReference__c, Primary_Account_Type__c, QRCodeToTrackEventsAttendance__c, RefundRequired__c, ReminderEmailTemplate__c, SendCancellationEmail__c, SendPostponementEmail__c, Table__c, VIP__c, WalkIn__c, CampaignMemberContactEmail__c, AmountPaid__c, Account__c, EventAddressLine1__c, EventAddressLine2__c, EventStartDateFormatted__c, EventStartDate__c, EventStartTime__c, EventVenue__c, QR_Code_Link__c, SendRegoConfirmationEmail__c, AttendeeCount__c, CurrentEmployer__c, CurrentPositionTitle__c, MembershipNumber__c, Event_Member_18_Digits_Id__c, AttendeeFirstName__c, Price__c, ROI_Account__c, PreferredFirstName__c, ROI_Amount__c, ROI_Payment__c, CPD_Hours_Added__c, Not_Attending__c, ACS_Event_Member_Guest__c, Booker_Name__c, Campaign_Member_Id__c, Guest__c, Payment_Method__c, Is_Free__c, Ticket_Type__c, Created_By_Date_Time__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ACSDSSF')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF CampaignRefresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Campaign"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "Campaign"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, IsDeleted, Name, ParentId, Type, Status, StartDate, EndDate, CurrencyIsoCode, ExpectedRevenue, BudgetedCost, ActualCost, ExpectedResponse, NumberSent, IsActive, Description, NumberOfLeads, NumberOfConvertedLeads, NumberOfContacts, NumberOfResponses, NumberOfOpportunities, NumberOfWonOpportunities, AmountAllOpportunities, AmountWonOpportunities, HierarchyNumberOfLeads, HierarchyNumberOfConvertedLeads, HierarchyNumberOfContacts, HierarchyNumberOfResponses, HierarchyNumberOfOpportunities, HierarchyNumberOfWonOpportunities, HierarchyAmountAllOpportunities, HierarchyAmountWonOpportunities, HierarchyNumberSent, HierarchyExpectedRevenue, HierarchyBudgetedCost, HierarchyActualCost, OwnerId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, LastViewedDate, LastReferencedDate, CampaignMemberRecordTypeId, ActivationDate__c, AvailableCapacity__c, AvailableWaitlistCapacity__c, BatchRunDate__c, BranchEmail__c, BranchName__c, BudgetApproved__c, BusinessCaseApproved__c, CPDEvent__c, CPDHours__c, CancellationReason__c, Capacity_Filled__c, Capacity__c, CongaACSLogoURL1__c, CongaACSLogoURL__c, CongaFacebookURL__c, CongaLocationIconURL__c, CongaTimeIconURL__c, CongaTwitterURL__c, Conga_LinkedIn_URL__c, DeliveryMethod__c, DetailedDescription__c, DoNotPublishOnline__c, DoNotRegisterOnline__c, EndDateAndTime__c, EventBudget__c, EventCity__c, EventLocationURL__c, EventOwner__c, EventState__c, EventType__c, EventVenue__c, Event_Label_ID__c, Event_Label__c, Event_Location_Conga_URL__c, ExternalURL__c, ICSLocationForCalendar__c, ICS_File_ID__c, Level_Room__c, Location_del__c, MemberOnlyEvent__c, NationalEventOfSignificance__c, PortalImageId__c, Postcode__c, PostponeReason__c, RegistrationEndDateAndTime__c, Related_ACS_Office__c, SFIASkillLevel__c, SFIA_Category__c, SFIA_Skill__c, SFIA_Subcategory__c, StartDateAndTime__c, StreetAddress__c, TermsAndConditions__c, TitleInPortal__c, Topics__c, WaitlistCapacity__c, Waitlist_Capacity_Filled__c, ActualTotalEventExpenditure__c, ActualTotalEventIncome__c, AttendeeCount__c, BookingAdditionsAvailableCount__c GroupBookingAvailableSum__c, No_of_People_Attended__c, No_of_People_Cancelled__c, No_of_People_No_Show__c, No_of_People_Registered__c, No_of_People_in_Wait_List__c, NumberOfWaitlisted__c, Country__c, NonMemberProduct__c, MemeberProduct__c, Timezone__c, EventImage__c, Campaign18DigitsId__c, AttendeesinclGroupBookings__c, EventEndTime__c, EventStartTime__c, EventTimezoneId__c, Objective__c, XENEventId__c, Detailed_Description_Text_Only__c, Dimension1_List__c, Dimension2_List__c, Dimension3_List__c, AutoCloseRegistration__c, ROI_Account__c, ROI_Amount__c, Total_Price__c, Virtual__c, Virtual_Event_Reminder_Send_Date__c, Event_Web_URL__c, Event_Web_URL_Display__c, Event_States__c, Excluded_Billing_Grades__c, Invoice_Payment_Expiry__c, Max_Tickets_Per_Account__c, Registration_End_Date_is_Reached__c, Invoice_Payment_Expiry_Formatted__c, Label_Outfit_Document_Id__c, Event_Survey_Link__c, Event_Presentation_Link__c, Micro_Tribe__c, Primary_Competency_Framework__c, Primary_Competency_Full_Label__c, Primary_Competency_Label__c, Primary_Competency_Updated_from_Child__c, Primary_Competency__c, Micro_Tribe_Label__c, Virtual_Event_Time_Zone__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ACSDSSF')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF Contact Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "contact"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "contact"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": " Id, IsDeleted, MasterRecordId, AccountId, LastName, FirstName, Salutation, Name, OtherStreet, OtherCity, OtherState, OtherPostalCode, OtherCountry, OtherLatitude, OtherLongitude, OtherGeocodeAccuracy, MailingStreet, MailingCity, MailingState, MailingPostalCode, MailingCountry, MailingLatitude, MailingLongitude, MailingGeocodeAccuracy, Phone, Fax, MobilePhone, HomePhone, OtherPhone, AssistantPhone, ReportsToId, Email, Title, Department, AssistantName, LeadSource, Birthdate, Description, CurrencyIsoCode, OwnerId, HasOptedOutOfEmail, HasOptedOutOfFax, DoNotCall, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, LastCURequestDate, LastCUUpdateDate, LastViewedDate, LastReferencedDate, EmailBouncedReason, EmailBouncedDate, IsEmailBounced, PhotoUrl, Jigsaw, JigsawContactId, IndividualId, Assessment__c, IsLead__c, MembershipPPP__c, PreferredName__c, ShadowAccount__c, Contact_18_Digits_ID__c, Membership_Number__c, Login_Generation_Error__c, Login_Generation_Status__c, Litmos__Access_Level__c, Litmos__Completed_Percentage__c, Litmos__Courses_Assigned__c, Litmos__Courses_Completed__c, Litmos__Deactivate_From_Litmos__c, Litmos__Full_Name__c, Litmos__Languages__c, Litmos__Level__c, Litmos__LitmosID__c, Litmos__Litmos_Activated__c, Litmos__Litmos_Login_Access__c, Litmos__Litmos_UserId__c, Litmos__OriginalId__c, Litmos__Sync_Litmos__c, Litmos__Total_Sum_Percentages__c, Litmos__User_Id__c, Litmos__p_Completed_Percentage__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ACSDSSF')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF Contract Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforce"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {
									"object1": "account",
									"object2": "assessment"
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Contract"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "contract"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": " Id ,AccountId ,CurrencyIsoCode ,OwnerExpirationNotice ,StartDate ,EndDate, BillingStreet, BillingCity, BillingState, BillingPostalCode, BillingCountry, BillingLatitude, BillingLongitude, BillingGeocodeAccuracy, ShippingStreet, ShippingCity, ShippingState, ShippingPostalCode, ShippingCountry, ShippingLatitude, ShippingLongitude, ShippingGeocodeAccuracy, ContractTerm, OwnerId, Status, CompanySignedId, CompanySignedDate, CustomerSignedId, CustomerSignedTitle, CustomerSignedDate, SpecialTerms, ActivatedById, ActivatedDate, StatusCode, Description, RecordTypeId, Name, IsDeleted, ContractNumber, LastApprovedDate, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, LastViewedDate, LastReferencedDate, BatchRunDate__c, BulkUploadedPPPMember__c, Created_by_PPP_Bulk_Upload__c, CurrentMembership__c, CurrentMonthYear__c, Data_Migrated_from_XEN__c, DaysSinceStartDate__c, ExpiryCaseCreated__c, Grade__c, IndividualMovedtoPPP__c, Location__c, LodgedWithCertificationApplication__c, MOUType__c, Manual_Data_Entry__c, MemberBillingGrade__c, MembershipExpiry__c, MembershipID__c, Membership_18_Digits_ID__c, Membership_End_Date_12months__c, Membership_End_Date_1Day__c, Membership_End_Date_3months__c, Membership_Start_Date_Was_Null__c, New__c, Non_Financed_Flag__c, PPPKeyContactEmail__c, PPPKeyContactName__c, PPPMOU1Approved__c, PPPName__c, PPP__c, PreferredName__c, PreviousMembership__c, Program__c, RelatedAccountEmail__c, RenewalProcessed__c, Sister_Society_Member_Grade__c, Sister_Society_Membership_Expiry_Date__c, Sister_Society_Membership_Number__c, Sister_Society_Name__c, StartDatePlus12Months__c, SubscriptionNoticeSent__c, UpdatedViaFlow__c, WelcomeEmailSent__c, ZeroCostMembership__c, Termination_Reason__c, Grading_Date__c, Date_Resigned__c, PPP_Account_Name__c, Bulk_PPP_Renewed_as_Active__c, Re_Order_Cards__c, Re_Order_Cards_Date__c, Re_Order_Last_week__c, SkillsMembershipAgent__c, PY_Second_Year_Email_Sent__c, Membership_Expiry_Discrepancy__c, Detach_from_PPP__c, Membership_Expiry_Within_30_days__c, SkillsMembershipApplicationOrigin__c, SkillsMembershipDuplicateAccountUser__c, SkillsMembershipOptOut__c, Zipline_Mobile__c, Approval_URL_Link__c, Approval_URL__c, Certification_Level__c, Detached__c, For_Renewal__c, Last_Login_Date__c, MOU_Type__c, Product_Selected__c, Pendula_Test__c, Membership_Expiry_Date_As_Text__c, COVID_19__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ACSDSSF')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF EventSponsor Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "EventSponsor__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "EventSponsor__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, OwnerId, IsDeleted, Name, CurrencyIsoCode, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, Event__c, SponsorImage__c, Sponsor__c, Company_Website__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ACSDSSF')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF Object Dump_Parquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Dump Parquet",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 2,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sql_memebershipdb",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSQLSP",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sql_memebershipdb')]",
				"[concat(variables('factoryId'), '/datasets/AzureSQLSP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF Object Refresh Template')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 4,
							"dataIntegrationUnits": 16,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSFOR",
								"type": "DatasetReference",
								"parameters": {
									"SourceTableName": {
										"value": "@pipeline().parameters.sourcetable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.targettable",
										"type": "Expression"
									},
									"schemaname": "salesforce"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"sourcetable": {
						"type": "string",
						"defaultValue": "Activity"
					},
					"targettable": {
						"type": "string",
						"defaultValue": "Activity"
					}
				},
				"variables": {
					"HWM": {
						"type": "String",
						"defaultValue": "2199-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ACSDSSFOR')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF Opportunity Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Opportunity "
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "Opportunity "
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": " Id, IsDeleted, AccountId, RecordTypeId, IsPrivate, Name, Description, StageName, Amount, Probability, ExpectedRevenue, TotalOpportunityQuantity, CloseDate, Type, NextStep, LeadSource, IsClosed, IsWon, ForecastCategory, ForecastCategoryName, CurrencyIsoCode, CampaignId, HasOpportunityLineItem, Pricebook2Id, OwnerId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, PushCount, LastStageChangeDate, FiscalQuarter, FiscalYear, Fiscal, ContactId, LastViewedDate, LastReferencedDate, ContractId, HasOpenActivity, HasOverdueTask, LastAmountChangedHistoryId, LastCloseDateChangedHistoryId, Brand__c, ACS_Office__c, AccountEmail__c, AccountOwner__c, Automated_Tax_Receipt_Sent__c, Balance__c, BankReference__c, BatchRunDate__c, BoxFolderId__c, CappedOrMembershipBased__c, ChargeDateEmail__c, CongaCitySys__c, CongaCountrySys__c, CongaMembershipSubscriptionRenewal__c, CongaPaymentConfirmationEmailNonCC__c, CongaPostCodeSys__c, CongaStateSys__c, CongaStreetSys__c, CongaTaxInvoiceSaveOnly__c, CongaTaxReceiptAutoEmailNonCC__c, Conga_Email_Sent_From__c, Conga_Skills_Tax_Receipt_Auto_Email__c, CreateBoxFolder__c, CreditController__c, CreditNoteGenerated__c, CreditNoteID__c, Data_Migrated_from_XEN__c, DaysOutstanding__c, EstimatedBudget__c, GenerateCreditNote__c, Grand_Total_of_Non_Optional_Incl_GST__c, ICSFileID__c, Incomplete_Membership__c, Initial_Email_Sent_Non_CC__c, Invoice_Number__c, Invoiced__c, MOUType__c, Manual_Data_Entry__c, MembershipRenewalEmailSent__c, MembershipRenewal__c, Membership_End_Date__c, Membership_Start_Date__c, NeedsApproval__c, NextSteps__c, NumberofMembers__c, OpportunitySource__c, Opportunity_18_Digits_ID__c, Opportunity_ID_Autonumber__c, Opportunity_ID__c, Opportunity_Receipt_Template_ID__c, Oppportunity_Email_Template_ID__c, Oppty_Email_Temp_ID_Non_CC__c, Product_Type__c, Proposal_Template_Generated__c, Proposal_Used__c, Proposal_template_ID__c, Purchase_Order_Number__c, ReEngagementDate__c, ReadyToInvoice__c, ReasonForRefund__c, Reason__c, RefundApprovedDate__c, RefundBankDetails__c, Refund_Amount__c, Related_Contact_Email__c, Related_Contact_First_Name__c, Related_Contact_Title__c, Related_Contact__c, Related_Program__c, ReoccurringPaymentEmailSent__c, Sales_Invoice_ID__c, ScheduledEndDate__c, ScheduledStartDate__c, SolutionInterest__c, Grand_Total_of_Non_Optional_Excl_GST__c, Non_Optional_Grand_Total_GST__c, ProductCount__c, StateAllocationCode__c, Closed_Date_Updated_From_1st_Transaction__c, First_Transaction_Date__c, Canberra__c, Count_Update_Time__c, New_South_Wales__c, Northern_Territory__c, Overseas__c, PPP_Automation_Opp__c, Queensland__c, South_Australia__c, Tasmania__c, Victoria__c, Western_Australia__c, Refund_for_Duplicate_Payment__c, Conga_Membership_and_Certification_Email__c, NoOfMembersOnProgram__c, Approval_Status__c, Product_Family_Approval__c, MonthCreated__c, CloseMonth__c, CreatedInTheLast365Days__c, ClosedIn_the_Last_365_Days__c, Quater_Created__c, EventStartDate__c, Id__c, Parent_Account_Name__c, Parent_Account_Name_Link__c, South_Pacific_Overseas__c, Account_Name__c, Outfit_Membership_Renewal_Last_Update__c, Last_Attachment_Added__c, Send_Membership_Renewal_Email__c, Outfit_Tax_Invoice_Last_Update__c, Outfit_Tax_Invoice_Non_CC_Last_Update__c, Outfit_Tax_Invoice_Receipt_Non_CC_Last_U__c, Application_ID_Pendula__c, Skills_Recipient__c, Outfit_Event_Related_ACS_Office__c, Related_Program_Account_Mismatch__c, Approval_Required__c, Grand_Total_of_Non_WFD_Incl_GST__c, Needs_Approval__c, Payment_Due_Date__c, Program_Id_for_Documents__c, Program_for_Documents__c, Project__c, Reassign_Opportunity__c, Related_Program_End_Date__c, Renewal_Committed__c, Renewal_Started__c, Renewing_Program_Id__c, Send_Inactive_Notification_Date__c, Send_Inactive_Opportunity_Notification__c, Superseded_By__c, Upsell__c, Grand_Total_of_Non_WFD_Excl_GST__c, Membership_Opportunity_Product_Rollup__c, Non_WFD_Grand_Total_GST__c, PPP_Full_Fee_Memberships__c, ROI_Budget__c, WFD_Opportunity_Product_End_Date__c, WFD_Opportunity_Product_Rollup_All__c, WFD_Opportunity_Product_Rollup__c, WFD_Opportunity_Product_Start_Date__c, Pendula_Tax_Receipt_Sent__c, Total_Refund_Amount__c, Count_of_Transactions__c, Sum_of_Transactions__c, Days_Until_Closing__c, Eligible_for_Chatbot__c, October_Membership_Renewal_Communication__c, Outfit_Event_Tax_Invoice_Last_Update__c, Event_Member_Invoice_Payment__c, Outfit_Document_Date__c, Receipt_Outfit_Document_Id__c, Current_Membership_Expiry__c, Current_Membership_Expiry_As_Text__c, Private_Account__c, Outfit_Sales_Order_Document_Id__c, Outfit_Sales_Order_Document_Name__c, Litmos__Competitor_s__c, Litmos__CurrentGenerators__c, Litmos__DeliveryInstallationStatus__c, Litmos__MainCompetitors__c, Litmos__OrderNumber__c, Litmos__TrackingNumber__c, Is_Lead__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ACSDSSF')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF OpportunityLineItem Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforce"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "OpportunityLineItem"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "OpportunityLineItem"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id ,OpportunityId ,SortOrder ,PricebookEntryId ,Product2Id ,ProductCode ,Name ,CurrencyIsoCode ,Quantity ,Discount ,Subtotal ,TotalPrice, UnitPrice, ListPrice, ServiceDate, HasRevenueSchedule, HasQuantitySchedule, Description, HasSchedule, CanUseQuantitySchedule, CanUseRevenueSchedule, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, IsDeleted, LastViewedDate, LastReferencedDate, Assessment__c, BalanceDue__c, Course__c, Data_Migrated_from_XEN__c, EventPricing__c, Event__c, GST__c, Income_Schedule_Start_Date__c, Membership__c, OpportunityNumber__c, Optional__c, Program__c, SponsorshipFutureDate__c, Tax_Code_ID__c, Total_Price_GST__c, Total_Price_Incl_GST__c, Opportunity_Stage__c, Sales_Price_Excl_GST__c, Sales_Price_Override__c, Total_Price_Excl_GST__c, Opportunity_Line_Item_ID__c, Refund_Amount_Excl_GST__c, XenId_OpportunityProduct__c, Accreditation__c, ProductName__c, Membership_Id_18_Digits__c, MembershipBillingGrade__c, AssessmentResult__c, AssessmentStatus__c, AssessmentSubmissionDate__c, AssessmentFinalisedDate__c, AssessmentAppTypeSubType__c, AssessmentApplicantName__c, AssessmentRecordType__c, Opportunity_Related_Program__c, Add_to_FF_Invoice__c, Billing_Grade__c, End_Date__c, Exempt_From_WFD_Validations__c, Is_Closed_Won__c, Product_Family_Value__c, Product_Family__c, Project_Deliverable__c, Project__c, ROI_Budget_Calculation__c, Refund_Amount__c, Tax_Rate__c, Has_Refund_Amount__c, Event_Name__c, Disable_Validation__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ACSDSSF')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF Program Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {
									"object1": "account",
									"object2": "assessment"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforce"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {
									"object1": "account",
									"object2": "assessment"
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Programs__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "Programs__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": " Id ,IsDeleted ,Name ,CurrencyIsoCode ,RecordTypeId ,CreatedDate ,CreatedById ,LastModifiedDate ,LastModifiedById ,SystemModstamp ,LastActivityDate ,LastViewedDate ,LastReferencedDate, Account__c, BatchDate__c, BatchProcessed__c, Capacity__c, CappedOrMembershipBased__c, DateFilter__c, Description__c, EndDate__c, MOUType__c, MembershipsAllocated__c, MembershipsRemaining__c, PPPRegistrationLink__c, Program_18_Digits_ID__c, StartDate__c, TotalMemberships__c, Account_18_Digit_ID__c, PPP_MOU1_Link__c, PPP_MOU2_Link__c, PPP_Friendly_Link__c, AccountOwnerId__c, DaysRemaining__c, IsCloned__c, PreviousProgram__c, Subscriber__c, IsOverseasSubscriber__c, Count_ACS_Event_Hours__c, Count_Other_Hours__c, Count_PD_Video_Hours__c, Create_Validation_Task__c, End_Date_Within_90_Days__c, Has_Paid__c, Inactive__c, Include_in_ROI_Rollup__c, Is_Current__c, KeyContactEmail__c, KeyContactName__c, Last_Task_Review_Date__c, Membership_Remaining_Upsell_Formula__c, Num_Members_Certified__c, Num_Members_Logged_In__c, Num_Members_with_CPD_Hour_s__c, Originating_Opportunity__c, Over_Capacity_Email_Sent__c, Over_Capacity__c, PPP_Registration_Full_URL__c, PPP_Registration_Link__c, Payment_Due_Date__c, Percent_Members_Certified__c, Percent_Members_Logged_In__c, Percent_Members_with_CPD_Hours__c, ROI_Balance_Remaining__c, ROI_Budget__c, Renewal_Opportunity__c, Send_Registration_URL__c, Student_Group__c, Total_ACS_Events_Hours__c, Total_Active_Memberships__c, Total_Balance__c, Total_CPD_Hours__c, Total_Charge_Amount__c, Total_Count_CPD_Hours__c, Total_Other_Hours__c, Total_PD_Video_Hours__c, Total_Transactions_Amount__c, ROI_Spend__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ACSDSSF')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF Qualification History Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Qualification__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "Qualification__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, IsDeleted, Name, CurrencyIsoCode, RecordTypeId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, Assessment__c, ANZSCO_Code__c, AQFComparability__c, Applicant_Name__c, AssessorNotes__c, AttachedTranscriptAssessor__c, AustralianQualification__c, CEPReference__c, CalculationErrorMessages__c, CloselyRelatedICTUnitCountMajor__c, CloselyRelatedICTUnitCountMinor__c, CloselyRelated__c, CoreUnitsMajor__c, CoreUnitsMinor__c, CountString__c, Country__c, CourseAccredited__c, Course__c, Data_Migrated_from_XEN__c, DateAwarded__c, DateOfCommencement__c, DateOfCompletion__c, ICTContent__c, ICTUnitCountMajor__c, ICTUnitCountMinor__c, Institution__c, LastCountsCalculatedOn__c, NormalDurationOfCourse__c, NotACSCourse__c, OASCalculator__c, Potential_RMD_2_or_5_yrs__c, Potential_RMD_4_of_6_yrs__c, Qual_sited_at_Interview__c, QualificationCategory__c, TimeTaken__c, TotalNumberOfUnitsCRPoints__c, TranscriptRollup__c, XEN_Qualification_Name__c, ApplicantAttachmentsBoxFolderId__c, AssessorAttachmentsBoxFolderId__c, BoxFolderId__c, CmsApplicantBoxDocumentDetails__c, CmsBoxApplicantFileIdsToMove__c, CreateBoxFolder__c, UniqueRecordIdentifier__c, FullOrPartTime__c, RecordLocked__c, XenId_Qualification__c, ResetUnitCounts__c, Calculation_Duration__c, BypassValidation__c, Qualification_18_Digits_ID__c, ApplicantName__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ACSDSSF')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF Relationship__c Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSFOR",
								"type": "DatasetReference",
								"parameters": {
									"SourceTableName": "Relationship__c"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "Relationship__c",
									"schemaname": "salesforce"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ACSDSSFOR')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF User Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n[salesforce].[user]",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "user"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "user"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": " Id, Username, LastName, FirstName, Name, CompanyName, Division, Department, Title, Street, City, State, PostalCode, Country, Latitude, Longitude, GeocodeAccuracy, Email, EmailPreferencesAutoBcc, EmailPreferencesAutoBccStayInTouch, EmailPreferencesStayInTouchReminder, SenderEmail, SenderName, Signature, StayInTouchSubject, StayInTouchSignature, StayInTouchNote, Phone, Fax, MobilePhone, Alias, CommunityNickname, BadgeText, IsActive, TimeZoneSidKey, UserRoleId, LocaleSidKey, ReceivesInfoEmails, ReceivesAdminInfoEmails, EmailEncodingKey, DefaultCurrencyIsoCode, CurrencyIsoCode, ProfileId, UserType, LanguageLocaleKey, EmployeeNumber, DelegatedApproverId, ManagerId, LastLoginDate, LastPasswordChangeDate, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, NumberOfFailedLogins, OfflineTrialExpirationDate, OfflinePdaTrialExpirationDate, UserPermissionsMarketingUser, UserPermissionsOfflineUser, UserPermissionsAvantgoUser, UserPermissionsCallCenterAutoLogin, UserPermissionsSFContentUser, UserPermissionsInteractionUser, UserPermissionsSupportUser, UserPermissionsChatterAnswersUser, ForecastEnabled, UserPreferencesActivityRemindersPopup, UserPreferencesEventRemindersCheckboxDefault, UserPreferencesTaskRemindersCheckboxDefault, UserPreferencesReminderSoundOff, UserPreferencesDisableAllFeedsEmail, UserPreferencesDisableFollowersEmail, UserPreferencesDisableProfilePostEmail, UserPreferencesDisableChangeCommentEmail, UserPreferencesDisableLaterCommentEmail, UserPreferencesDisProfPostCommentEmail, UserPreferencesContentNoEmail, UserPreferencesContentEmailAsAndWhen, UserPreferencesApexPagesDeveloperMode, UserPreferencesReceiveNoNotificationsAsApprover, UserPreferencesReceiveNotificationsAsDelegatedApprover, UserPreferencesHideCSNGetChatterMobileTask, UserPreferencesDisableMentionsPostEmail, UserPreferencesDisMentionsCommentEmail, UserPreferencesHideCSNDesktopTask, UserPreferencesHideChatterOnboardingSplash, UserPreferencesHideSecondChatterOnboardingSplash, UserPreferencesDisCommentAfterLikeEmail, UserPreferencesDisableLikeEmail, UserPreferencesSortFeedByComment, UserPreferencesDisableMessageEmail, UserPreferencesHideLegacyRetirementModal, UserPreferencesDisableBookmarkEmail, UserPreferencesDisableSharePostEmail, UserPreferencesEnableAutoSubForFeeds, UserPreferencesDisableFileShareNotificationsForApi, UserPreferencesShowTitleToExternalUsers, UserPreferencesShowManagerToExternalUsers, UserPreferencesShowEmailToExternalUsers, UserPreferencesShowWorkPhoneToExternalUsers, UserPreferencesShowMobilePhoneToExternalUsers, UserPreferencesShowFaxToExternalUsers, UserPreferencesShowStreetAddressToExternalUsers, UserPreferencesShowCityToExternalUsers, UserPreferencesShowStateToExternalUsers, UserPreferencesShowPostalCodeToExternalUsers, UserPreferencesShowCountryToExternalUsers, UserPreferencesShowProfilePicToGuestUsers, UserPreferencesShowTitleToGuestUsers, UserPreferencesShowCityToGuestUsers, UserPreferencesShowStateToGuestUsers, UserPreferencesShowPostalCodeToGuestUsers, UserPreferencesShowCountryToGuestUsers, UserPreferencesHideInvoicesRedirectConfirmation, UserPreferencesHideStatementsRedirectConfirmation, UserPreferencesHideS1BrowserUI, UserPreferencesDisableEndorsementEmail, UserPreferencesPathAssistantCollapsed, UserPreferencesCacheDiagnostics, UserPreferencesShowEmailToGuestUsers, UserPreferencesShowManagerToGuestUsers, UserPreferencesShowWorkPhoneToGuestUsers, UserPreferencesShowMobilePhoneToGuestUsers, UserPreferencesShowFaxToGuestUsers, UserPreferencesShowStreetAddressToGuestUsers, UserPreferencesLightningExperiencePreferred, UserPreferencesPreviewLightning, UserPreferencesHideEndUserOnboardingAssistantModal, UserPreferencesHideLightningMigrationModal, UserPreferencesHideSfxWelcomeMat, UserPreferencesHideBiggerPhotoCallout, UserPreferencesGlobalNavBarWTShown, UserPreferencesGlobalNavGridMenuWTShown, UserPreferencesCreateLEXAppsWTShown, UserPreferencesFavoritesWTShown, UserPreferencesRecordHomeSectionCollapseWTShown, UserPreferencesRecordHomeReservedWTShown, UserPreferencesFavoritesShowTopFavorites, UserPreferencesExcludeMailAppAttachments, UserPreferencesSuppressTaskSFXReminders, UserPreferencesSuppressEventSFXReminders, UserPreferencesPreviewCustomTheme, UserPreferencesHasCelebrationBadge, UserPreferencesUserDebugModePref, UserPreferencesSRHOverrideActivities, UserPreferencesNewLightningReportRunPageEnabled, UserPreferencesNativeEmailClient, UserPreferencesHideBrowseProductRedirectConfirmation, ContactId, AccountId, CallCenterId, Extension, PortalRole, IsPortalEnabled, FederationIdentifier, AboutMe, FullPhotoUrl, SmallPhotoUrl, IsExtIndicatorVisible, OutOfOfficeMessage, MediumPhotoUrl, DigestFrequency, DefaultGroupNotificationFrequency, LastViewedDate, LastReferencedDate, BannerPhotoUrl, SmallBannerPhotoUrl, MediumBannerPhotoUrl, IsProfilePhotoActive, IndividualId, XEN_ID__c, AccountID__c, Assessor__c, CMSIntegrationUserEmail__c, MemberAccountId__c, Membership_Number__c, Office_Address_City__c, Office_Address_Country__c, Office_Address_Postal_Code__c, Office_Address_State__c, Office_Address_Street__c, WebsiteRole__c, FullName__c, User_18_Digit_Id__c, Deactivated_Date__c, Purchase_Order_Approver__c, Litmos__Access_Level__c, Litmos__Completed_Percentage__c, Litmos__Courses_Assigned__c, Litmos__Courses_Completed__c, Litmos__Deactivate_From_Litmos__c, Litmos__Learning_Paths_Assigned__c, Litmos__Learning_Paths_Completed__c, Litmos__LitmosUserId__c, Litmos__Litmos_Activated__c, Litmos__Litmos_Login_Access__c, Litmos__OriginalId__c, Litmos__Sync_Litmos__c, Litmos__Team_Id__c, Litmos__Total_Sum_Percentages__c, Litmos__Total_User_Program_Results__c, Litmos__User_Id__c, Litmos__lp_Completed_Percentage__c, Litmos__p_Completed_Percentage__c, Access_to_Canvas__c, User_15_Digit_Id__c, Billing_Grade__c, Member_Grade__c, WebRole__c, CardExpiryDate__c, CertifiedToDate__c, ComputerProfStatus__c IsAustralianUser__c, Is_Litmos__c, Is_New_User__c, MembershipExpiryDate__c, PartiallyCompletedCertID__c, Position_Title__c, Preferred_Name__c, Is_Changed__c, PartiallyCompletedMicroCredentialId__c, Community_Name__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforce"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ACSDSSF')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new ANZSCOGroup__c refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "ANZSCOGroup__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "ANZSCOGroup__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, OwnerId, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastViewedDate, LastReferencedDate, Code__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new ANZSCOSkill__c Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "ANZSCOSkill__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "ANZSCOSkill__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastViewedDate, LastReferencedDate, ANZSCO__c, Skill__c, MinimumSkillLevel__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new Account Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "Account"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "assessment__c"
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "update AEST",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Salesforce object",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[AccountAEST]"
						},
						"linkedServiceName": {
							"referenceName": "LSSQLPOC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Account"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "Account"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, IsDeleted, MasterRecordId, Name, LastName, FirstName, Salutation, MiddleName, Type, RecordTypeId, ParentId,      BillingStreet, BillingCity, BillingState, BillingPostalCode, BillingCountry, BillingLatitude, BillingLongitude,      BillingGeocodeAccuracy, ShippingStreet, ShippingCity, ShippingState, ShippingPostalCode, ShippingCountry,      ShippingLatitude, ShippingLongitude, ShippingGeocodeAccuracy, Phone, Fax, Website, PhotoUrl, Industry,      AnnualRevenue, NumberOfEmployees, Description, OwnerId, CreatedDate, CreatedById, LastModifiedDate,      LastModifiedById, SystemModstamp, LastActivityDate, LastViewedDate, LastReferencedDate, PersonContactId,      IsPersonAccount, PersonMailingStreet, PersonMailingCity, PersonMailingState, PersonMailingPostalCode,      PersonMailingCountry, PersonMailingLatitude, PersonMailingLongitude, PersonMailingGeocodeAccuracy,      PersonOtherStreet, PersonOtherCity, PersonOtherState, PersonOtherPostalCode, PersonOtherCountry,      PersonOtherLatitude, PersonOtherLongitude, PersonOtherGeocodeAccuracy, PersonMobilePhone, PersonHomePhone,      PersonOtherPhone, PersonAssistantPhone, PersonEmail, PersonTitle, PersonDepartment, PersonAssistantName,      PersonLeadSource, PersonBirthdate, PersonLastCURequestDate, PersonLastCUUpdateDate, PersonEmailBouncedReason,      PersonEmailBouncedDate, PersonIndividualId, Jigsaw, JigsawCompanyId, AccountSource, SicDesc, BillingGrade__c,      CountryOfBirth__c, Gender__c, IdVerificationSectionStatus__c, PassportCountryOfIssue__c,      PersonalDetailsSectionCompleted__c, Pronouns__c, VerifiedDateOfBirthText__c, VerifiedDateofBirth__c,      VerifiedFirstName__c, VerifiedLastName__c, VerifiedMiddleName__c, WebRoles__c, AzureId__c, BoxFolderId__c,      BusinessName__c, ConsentDateTimeofInitiatingAgent__c, Create_Free_Skills_Membership__c, DateOfBirth__c,      HasActiveMSAApplication__c, InitiatingMigrationAgent__c, LeadId__c, OldSalesforceRecordId__c, PassportNumber__c,      PreferredName__c, ABN__c, WebRoles__pc, MARANumber__pc, AzureId__pc, OldOrgContactID__pc, OldOrgSkillAgentId__pc,      SkillAgentId__pc, AgentId__pc, UnreadMessageCountbyAgent__pc, UnreadMessageCountbyApplicant__pc"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31T00:00:00Z"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31T00:00:00Z"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]",
				"[concat(variables('factoryId'), '/linkedServices/LSSQLPOC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new AccountContactRelation Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "update AEST",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Salesforce object",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[AccountcontactRelationAEST]"
						},
						"linkedServiceName": {
							"referenceName": "LSSQLPOC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "AccountContactRelation"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "AccountContactRelation"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, AccountId, ContactId, Roles, IsDirect, IsActive, StartDate, EndDate, IsDeleted, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, Status__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]",
				"[concat(variables('factoryId'), '/linkedServices/LSSQLPOC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new Assessment History Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  CreatedDate >= @{variables('brpExtractFrom')} AND\nCreatedDate <= @{variables('brpExtractTo')}\n\n\n",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "Assessment__History"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(createddate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "SELECT createddate\nFROM @{pipeline().parameters.SourceTableName}\nwhere createddate >= @{variables('brpExtractFrom')}\norder by createddate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "Assessment__History"
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.createddate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Update AEST column",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Salesforce object",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[AsessmenthistorynewAEST]"
						},
						"linkedServiceName": {
							"referenceName": "LSSQLPOC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Assessment__History"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "Assessment__History"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, IsDeleted, ParentId, CreatedById, CreatedDate, Field, DataType, OldValue, NewValue"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31T00:00:00Z"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31T00:00:00Z"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]",
				"[concat(variables('factoryId'), '/linkedServices/LSSQLPOC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new Assessment Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "assessment__c"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "assessment__c"
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "update AEST",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Salesforce object",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[AssessmentnewAEST]"
						},
						"linkedServiceName": {
							"referenceName": "LSSQLPOC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "assessment__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "assessment__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": " Id, OwnerId, IsDeleted, Name, RecordTypeId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, LastViewedDate, LastReferencedDate, AgentEmailAddress__c, AgentName__c, AllocationDate__c, AppealAllocationDate__c, AppealAssessor__c, AppealCaseOfficer__c, AppealDate__c, AppealFinalisedDate__c, AppealLetterContent__c, AppealLetterFileId__c, AppealLetterFileName__c, AppealOutcome__c, ApplicantEmailAddress__c, ApplicantNameChange__c, ApplicantOtherName__c, Applicant__c, ApplicationStatus__c, ApplicationType__c, AppliedANZSCOs__c, ApplicationOutcome__c, Assessor__c, AuthorisedAgent__c, CalculatedDeadlineDate__c, CaseOfficer__c, CongaLettersGenerated__c, Conga_Trigger_Appeal_Result_Letters__c, Contact__c, CurrentAttemptCount__c, DetailsOnResultLetter__c, DocusignProcessCompleted__c, EligibleforAppeal__c, ExperienceSectionStatus__c, FinaliseDate__c, FraudFlagDate__c, GenerateOutcomeLetterConga__c, GraduationDate__c, History__c, IDVerification__c, InvestigationOutcome__c, NameChangeRequested__c, NameHistorySectionStatus__c, NextActionDueDate__c, NumberOfResultLetters__c, OnHoldDate__c, PriorityRange__c, ProfessionalYearStudentID__c, Professional_Year_Complete__c, QAAssessor__c, QAFlagDate__c, RPLSectionStatus__c, ReasonforAppeal__c, ResultLetterContent__c, ResultLetterFileId__c, ResultLetterFileName__c, ResultLetterGenerated__c, SelectYourSkillsSectionStatus__c, SubmissionDate__c, SuitableANZSCOs__c, VEVOValidationFailed__c, VisaExpirationDate__c, VisaGrantNumber__c, Additional_docs_requested__c, AppealProcessingTime__c, ApplicantName__c, Applicantpreferredname__c, Conga_Trigger_Unsuitable_Result_Letters__c, CountryOfBirth__c, History_Indicator__c, IsRessignedApplication__c, ListViewFilter__c, ProcessingTime__c, UnsuitableTemplateId__c, MaxAttemptCount__c, QualificationsSectionStatus__c, ANZSCOsSelection__c, RejectedRPLCount__c, CongaTemplateId__c, Conga_Trigger_FraudPlagiarismRejected__c, Change_Since_RMD__c, RMD_Calculate_Run_Timestamp__c, ReasonApplicationUnsuitable__c, Trigger_RPL_Validation__c, RMD_Validation__c, On_Hold_Reason__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31T00:00:00Z"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31T00:00:00Z"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]",
				"[concat(variables('factoryId'), '/linkedServices/LSSQLPOC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new AssessmentANZSCOSkill Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "update AEST",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Salesforce object",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[AssessmentANZSCOSkillAEST]"
						},
						"linkedServiceName": {
							"referenceName": "LSSQLPOC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "AssessmentANZSCOSkill__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "AssessmentANZSCOSkill__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, Experience__c, ApplicantSelectedLevel__c, ApplicantSelected__c, assessmentANZSCO__c, assessmentSkill__c, assessorComments__c, assessorSelectedLevel__c, assessorSelected__c, SkillName__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]",
				"[concat(variables('factoryId'), '/linkedServices/LSSQLPOC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new AssessmentANZSCO__c Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "AssessmentANZSCO__c"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "assessment__c"
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "update AEST",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Salesforce object",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[AssessmentANZSCOAEST]"
						},
						"linkedServiceName": {
							"referenceName": "LSSQLPOC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "AssessmentANZSCO__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "AssessmentANZSCO__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id,IsDeleted,Name,CreatedDate,CreatedById,LastModifiedDate,LastModifiedById,SystemModstamp       ,ANZSCO__c,Assessment__c      ,ANZSCOOutcome__c       ,CurrentAttemptCount__c       ,DateOfKnowledgeMet__c       ,EAANoText__c       ,EAAYesText__c       ,ExternalId__c       ,GenerateOutcomeLetterConga__c       ,IsChosen__c       ,QAANoText__c       ,QAAYesText__c       ,RMDLogic__c       ,RPLQualificationText__c       ,RequirementMetDate__c       ,ResultLetterFileId__c       ,ResultLetterFileName__c       ,ANZSCOforUnitCountText__c       ,AnzscoName__c       ,AssessmentName__c       ,Conga_Trigger_Generate_Suitable_Letters__c       ,SuitableTemplateId__c       ,ExperienceCloselyRelatedNoCount__c       ,ExperienceCloselyRelatedYesCount__c       ,QualificationCloselyRelatedNoCount__c       ,QualificationCloselyRelatedYesCount__c       ,QualificationRPLSuitableCount__c       ,Reason_for_Manual_Override__c       ,Knowledge_Met_Date_for_RPL__c       ,Outcome_for_Post_Australian_Study__c       ,Outcome_for_Recognition_of_PriorLearning__c       ,Outcome_for_Skills__c       ,Requirement_Met_Date_for_PAS__c       ,Requirement_Met_Date_for_RPL__c       ,Requirement_Met_Date_for_Skills__c       ,NumberOfCertification__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31T00:00:00Z"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31T00:00:00Z"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]",
				"[concat(variables('factoryId'), '/linkedServices/LSSQLPOC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new AssessmentSkill__c Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "update AEST",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Salesforce object",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[AssessmentSkillAEST]"
						},
						"linkedServiceName": {
							"referenceName": "LSSQLPOC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "AssessmentSkill__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "AssessmentSkill__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, Assessment__c, Skill__c, ApplicantSelectedLevel__c, ApplicantSelected__c, AttemptNumber__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]",
				"[concat(variables('factoryId'), '/linkedServices/LSSQLPOC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new Assessment_Comment__c Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "update AEST",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Salesforce object",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[AssessmentCommentAEST]"
						},
						"linkedServiceName": {
							"referenceName": "LSSQLPOC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Assessment_Comment__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "Assessment_Comment__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, IsDeleted, Name, RecordTypeId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastViewedDate, LastReferencedDate, Contact__c, Assessment__c, Qualification__c, ApplicantResponse__c, AzureId__c, Case__c, DeadlineDate__c, DocumentType__c, Experience__c, Message__c, NotificationType__c, ReadByAgent__c, ReadByApplicant__c, Reason__c, ResultLetterFileId__c, Sender__c, Status__c, Subject__c, SupportingInfo__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]",
				"[concat(variables('factoryId'), '/linkedServices/LSSQLPOC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new Case Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "case"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "assessment__c"
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "update AEST",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Salesforce object",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[salesforcenewcaseAEST]"
						},
						"linkedServiceName": {
							"referenceName": "LSSQLPOC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "case"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "case_c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, IsDeleted, MasterRecordId, CaseNumber, ContactId, AccountId, ParentId, SuppliedName, SuppliedEmail, SuppliedPhone, SuppliedCompany, Type, RecordTypeId, Status, Reason, Origin, Language, Subject, Priority, Description, IsClosed, ClosedDate, IsEscalated, OwnerId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, ContactPhone, ContactMobile, ContactEmail, ContactFax, Comments, LastViewedDate, LastReferencedDate, Assessment__c, Deadline_Within__c, Lead__c, Topic__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]",
				"[concat(variables('factoryId'), '/linkedServices/LSSQLPOC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new Contact Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "contact"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "assessment__c"
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "update AEST",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Salesforce object",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[salesforcenewcontactAEST]"
						},
						"linkedServiceName": {
							"referenceName": "LSSQLPOC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Contact"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "Contact"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, IsDeleted, MasterRecordId, AccountId, IsPersonAccount, LastName, FirstName, Salutation, MiddleName, Name, RecordTypeId, OtherStreet, OtherCity, OtherState, OtherPostalCode, OtherCountry, OtherLatitude, OtherLongitude, OtherGeocodeAccuracy, MailingStreet, MailingCity, MailingState, MailingPostalCode, MailingCountry, MailingLatitude, MailingLongitude, MailingGeocodeAccuracy, Phone, Fax, MobilePhone, HomePhone, OtherPhone, AssistantPhone,ReportsToId, Email, Title, Department, AssistantName, LeadSource,Birthdate, Description, OwnerId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, LastCURequestDate, LastCUUpdateDate, LastViewedDate, LastReferencedDate, EmailBouncedReason, EmailBouncedDate, IsEmailBounced, PhotoUrl, Jigsaw, JigsawContactId, IndividualId, WebRoles__c, MARANumber__c, AzureId__c, OldOrgContactID__c, OldOrgSkillAgentId__c, SkillAgentId__c, AgentId__c, UnreadMessageCountbyAgent__c,  UnreadMessageCountbyApplicant__c,Legal_Practitioner_Number__c,QEAC_Number__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]",
				"[concat(variables('factoryId'), '/linkedServices/LSSQLPOC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new Experience Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "Experience__c"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "assessment__c"
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Experience__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "Experience__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id,IsDeleted,Name,RecordTypeId,CreatedDate,CreatedById,LastModifiedDate,LastModifiedById,SystemModstamp,Assessment__c,BusinessHaveAnOfficialWebsite__c ,ClassificationBusinessIndustryCode__c ,CompletionStatus__c ,DoYouHaveARegisteredBusiness__c ,EmployerAlternativeNameProvided__c ,EmploymentOccupationEndDate__c  ,EmploymentOccupationOngoing__c  ,EmploymentOccupationStartDate__c  ,ExperienceAccepted__c ,ExperienceComments__c ,ExperienceStatus__c ,HoursWorkedPerWeek__c ,IsBusinessHaveDifferentNames__c ,IsThisEmploymentCurrentAndOngoing__c ,LocationOfEmploymentOccupation__c ,LocationOfOccupation__c ,NatureOfWorkExperience__c ,OccupationEndDate__c ,OccupationOrRoleTitle__c ,OccupationStartDate__c ,PositionOccupationOrRoleTitle__c ,CountableExperienceDays__c ,CountableExperienceMonths__c ,CountableExperienceYears__c ,CountableExperience__c ,ReasonExperienceNotAccepted__c ,TotalExperience__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new Experience_Assessment_ANZSCO__c Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Experience_Assessment_ANZSCO__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "Experience_Assessment_ANZSCO__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, Experience__c, assessmentANZSCO__c, CloselyRelated__c, ANZSCOName_c__c "
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new IdentityVerification Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "IdentityVerification__c"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "assessment__c"
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "updateAEST",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Salesforce object",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[IdentityVerificationAEST]"
						},
						"linkedServiceName": {
							"referenceName": "LSSQLPOC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "IdentityVerification__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "IdentityVerification__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, OwnerId, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastViewedDate, LastReferencedDate, Applicant__c, IdVerificationResult__c, Lead__c, PassportCountryofIssue__c, PassportExpiryDate__c, PassportNumber__c, TransactionCompletionDate__c, TransactionID__c, TransactionStatus__c, VerifiedDateofBirth__c, VerifiedFirstName__c, VerifiedLastName__c, VerifiedMiddleName__c, createdAt__c, PassportExpired__c, Citizenship_Number__c, Computerised_National_Identity_Card__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]",
				"[concat(variables('factoryId'), '/linkedServices/LSSQLPOC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new Order Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "order"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "assessment__c"
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Update AEST",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Salesforce object",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[salesforcenewOrderAEST]"
						},
						"linkedServiceName": {
							"referenceName": "LSSQLPOC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "order"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "order_c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, OwnerId, ContractId, AccountId, Pricebook2Id, OriginalOrderId, EffectiveDate, EndDate, IsReductionOrder, Status, Description, CustomerAuthorizedById, CompanyAuthorizedById, Type, BillingStreet, BillingCity, BillingState, BillingPostalCode, BillingCountry, BillingLatitude, BillingLongitude, BillingGeocodeAccuracy, ShippingStreet, ShippingCity, ShippingState, ShippingPostalCode, ShippingCountry, ShippingLatitude, ShippingLongitude, ShippingGeocodeAccuracy, ActivatedDate, ActivatedById, StatusCode, OrderNumber, TotalAmount, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, IsDeleted, SystemModstamp, LastViewedDate, LastReferencedDate, AccountName__c, AssessmentId__c, Email__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]",
				"[concat(variables('factoryId'), '/linkedServices/LSSQLPOC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new Order product refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "assessment__c"
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "orderitem"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "orderitem"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, Product2Id, IsDeleted, OrderId, PricebookEntryId, OriginalOrderItemId, AvailableQuantity, Quantity, UnitPrice, ListPrice, TotalPrice, ServiceDate, EndDate, Description, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, OrderItemNumber"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new Product Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "order"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "assessment__c"
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Product2"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "Product2"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "   Id ,Name ,ProductCode ,Description ,IsActive ,CreatedDate ,CreatedById ,LastModifiedDate ,LastModifiedById ,SystemModstamp ,Family ,ExternalDataSourceId ,ExternalId ,DisplayUrl ,QuantityUnitOfMeasure ,IsDeleted ,IsArchived ,LastViewedDate ,LastReferencedDate ,StockKeepingUnit "
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new Qualification Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "Qualification__c"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "assessment__c"
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Qualification__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "Qualification__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, IsDeleted, Name, RecordTypeId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, LastViewedDate, LastReferencedDate, Assessment__c, AQFComparability__c, CEPPortalLink__c, CEPReference__c, CalculationDuration__c, CloselyRelatedMajor__c, CloselyRelatedMinor__c, CompletionDate__c, CoreUnitsMajor__c, CoreUnitsMinor__c, CountryOfStudy__c, CourseDuration__c, CourseLoad__c, CreditPointsAwarded__c, DetailsOnResultLetter__c, FulltimeOrParttime__c, ICTContent__c, ICTUnitCountMajor__c, ICTUnitCountMinor__c, Institution__c, IsAffiliatedtoAustralianUniversity__c, IsthisAResearchBasedQualification__c, NotAssessed__c, PotentialRDM4Of6Yrs__c, PotentialRMD2Or5Yrs__c, QualificationCategory__c, QualificationStatus__c, ReasonsAQFNotRecognised__c, ShowRichText__c, TotalNumberOfUnit__c, UnitCountErrors__c, Unit_Count_Text_Long__c, AustralianQualification__c, ReasonsAQFNotRecognisedText__c, RejectedQualificationReasons__c, UnitCountText__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new Qualification history Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "assessment__c"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(createddate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT createddate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by createddate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "assessment__c"
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Qualification_History"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "Qualification_History"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": " Id, IsDeleted, ParentId, CreatedById, CreatedDate, Field, DataType, OldValue, NewValue"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31T00:00:00Z"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31T00:00:00Z"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new Skill__c  Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Skill__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "Skill__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, OwnerId, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastViewedDate, LastReferencedDate, SkillCode__c, SkillLevels__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31Y00:00:00Z"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new SupportingInfo__c Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "update aEST",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Salesforce object",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SupportinginfoAEST]"
						},
						"linkedServiceName": {
							"referenceName": "LSSQLPOC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "SupportingInfo__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "SupportingInfo__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, IsDeleted, Name, RecordTypeId, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, Assessment__c, DetailsonResultLetter__c, ExperienceForProject1__c, ExperienceForProject2__c, Plagiarism_Detected__c, RPLAccepted__c, RPLOutcome__c, RPLRejectionReason__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]",
				"[concat(variables('factoryId'), '/linkedServices/LSSQLPOC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new Unit Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "Unit__c"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "Unit__c"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id, IsDeleted, Name, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, Qualification__c, CloselyRelatedANZSCOgroups__c, CoreUnitANZSCOGroup__c, GradeAchieved__c, ICT__c, Pass__c, SubmittedBy__c, UnitCredits__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31T00:00:00Z"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31T00:00:00Z"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new User Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "user"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n[salesforce].[user]\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": "user"
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "user"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "user"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id\t, Username\t, LastName\t, FirstName\t, MiddleName\t, Name\t, CompanyName\t, Division\t, Department\t, Title\t, Street\t, City\t, State\t, PostalCode\t, Country\t, Latitude\t, Longitude\t, GeocodeAccuracy\t, Email\t, EmailPreferencesAutoBcc\t, EmailPreferencesAutoBccStayInTouch\t, EmailPreferencesStayInTouchReminder\t, SenderEmail\t, SenderName\t, Signature\t, StayInTouchSubject\t, StayInTouchSignature\t, StayInTouchNote\t, Phone\t, Fax\t, MobilePhone\t, Alias\t, CommunityNickname\t, BadgeText\t, IsActive\t, TimeZoneSidKey\t, UserRoleId\t, LocaleSidKey\t, ReceivesInfoEmails\t, ReceivesAdminInfoEmails\t, EmailEncodingKey\t, ProfileId\t, UserType\t, LanguageLocaleKey\t, EmployeeNumber\t, DelegatedApproverId\t, ManagerId\t, LastLoginDate\t, LastPasswordChangeDate\t, CreatedDate\t, CreatedById\t, LastModifiedDate\t, LastModifiedById\t, SystemModstamp\t, NumberOfFailedLogins\t, OfflineTrialExpirationDate\t, OfflinePdaTrialExpirationDate\t, UserPermissionsMarketingUser\t, UserPermissionsOfflineUser\t, UserPermissionsAvantgoUser\t, UserPermissionsCallCenterAutoLogin\t, UserPermissionsSFContentUser\t, UserPermissionsInteractionUser\t, UserPermissionsSupportUser\t, ForecastEnabled\t, UserPreferencesActivityRemindersPopup\t, UserPreferencesEventRemindersCheckboxDefault\t, UserPreferencesTaskRemindersCheckboxDefault\t, UserPreferencesReminderSoundOff\t, UserPreferencesDisableAllFeedsEmail\t, UserPreferencesDisableFollowersEmail\t, UserPreferencesDisableProfilePostEmail\t, UserPreferencesDisableChangeCommentEmail\t, UserPreferencesDisableLaterCommentEmail\t, UserPreferencesDisProfPostCommentEmail\t, UserPreferencesApexPagesDeveloperMode\t, UserPreferencesReceiveNoNotificationsAsApprover\t, UserPreferencesReceiveNotificationsAsDelegatedApprover\t, UserPreferencesHideCSNGetChatterMobileTask\t, UserPreferencesDisableMentionsPostEmail\t, UserPreferencesDisMentionsCommentEmail\t, UserPreferencesHideCSNDesktopTask\t, UserPreferencesHideChatterOnboardingSplash\t, UserPreferencesHideSecondChatterOnboardingSplash\t, UserPreferencesDisCommentAfterLikeEmail\t, UserPreferencesDisableLikeEmail\t, UserPreferencesSortFeedByComment\t, UserPreferencesDisableMessageEmail\t, UserPreferencesDisableBookmarkEmail\t, UserPreferencesDisableSharePostEmail\t, UserPreferencesEnableAutoSubForFeeds\t, UserPreferencesDisableFileShareNotificationsForApi\t, UserPreferencesShowTitleToExternalUsers\t, UserPreferencesShowManagerToExternalUsers\t, UserPreferencesShowEmailToExternalUsers\t, UserPreferencesShowWorkPhoneToExternalUsers\t, UserPreferencesShowMobilePhoneToExternalUsers\t, UserPreferencesShowFaxToExternalUsers\t, UserPreferencesShowStreetAddressToExternalUsers\t, UserPreferencesShowCityToExternalUsers\t, UserPreferencesShowStateToExternalUsers\t, UserPreferencesShowPostalCodeToExternalUsers\t, UserPreferencesShowCountryToExternalUsers\t, UserPreferencesShowProfilePicToGuestUsers\t, UserPreferencesShowTitleToGuestUsers\t, UserPreferencesShowCityToGuestUsers\t, UserPreferencesShowStateToGuestUsers\t, UserPreferencesShowPostalCodeToGuestUsers\t, UserPreferencesShowCountryToGuestUsers\t, UserPreferencesHideInvoicesRedirectConfirmation\t, UserPreferencesHideStatementsRedirectConfirmation\t, UserPreferencesHideS1BrowserUI\t, UserPreferencesDisableEndorsementEmail\t, UserPreferencesPathAssistantCollapsed\t, UserPreferencesCacheDiagnostics\t, UserPreferencesShowEmailToGuestUsers\t, UserPreferencesShowManagerToGuestUsers\t, UserPreferencesShowWorkPhoneToGuestUsers\t, UserPreferencesShowMobilePhoneToGuestUsers\t, UserPreferencesShowFaxToGuestUsers\t, UserPreferencesShowStreetAddressToGuestUsers\t, UserPreferencesLightningExperiencePreferred\t, UserPreferencesPreviewLightning\t, UserPreferencesHideEndUserOnboardingAssistantModal\t, UserPreferencesHideLightningMigrationModal\t, UserPreferencesHideSfxWelcomeMat\t, UserPreferencesHideBiggerPhotoCallout\t, UserPreferencesGlobalNavBarWTShown\t, UserPreferencesGlobalNavGridMenuWTShown\t, UserPreferencesCreateLEXAppsWTShown\t, UserPreferencesFavoritesWTShown\t, UserPreferencesRecordHomeSectionCollapseWTShown\t, UserPreferencesRecordHomeReservedWTShown\t, UserPreferencesFavoritesShowTopFavorites\t, UserPreferencesExcludeMailAppAttachments\t, UserPreferencesSuppressTaskSFXReminders\t, UserPreferencesSuppressEventSFXReminders\t, UserPreferencesPreviewCustomTheme\t, UserPreferencesHasCelebrationBadge\t, UserPreferencesUserDebugModePref\t, UserPreferencesSRHOverrideActivities\t, UserPreferencesNewLightningReportRunPageEnabled\t, UserPreferencesNativeEmailClient\t, UserPreferencesHideBrowseProductRedirectConfirmation\t, ContactId\t, AccountId\t, CallCenterId\t, Extension\t, FederationIdentifier\t, AboutMe\t, FullPhotoUrl\t, SmallPhotoUrl\t, IsExtIndicatorVisible\t, OutOfOfficeMessage\t, MediumPhotoUrl\t, DigestFrequency\t, DefaultGroupNotificationFrequency\t, LastViewedDate\t, LastReferencedDate\t, BannerPhotoUrl\t, SmallBannerPhotoUrl\t, MediumBannerPhotoUrl\t, IsProfilePhotoActive\t, IndividualId\t, dfsle__CanManageAccount__c\t, dfsle__Provisioned__c\t, dfsle__Status__c\t, dfsle__Username__c\t"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31T00:00:00Z"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31T00:00:00Z"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF new lead Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "Select   @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= @{variables('brpExtractFrom')} AND\nLastModifiedDate <= @{variables('brpExtractTo')}",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": "salesforcenew"
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@if(equals(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,null),variables('brpExtractTo') ,\n    formatDateTime(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark, 'yyyy-MM-ddTHH:mm:ss.fffZ'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n@{concat(pipeline().parameters.schemaname,'.',pipeline().parameters.TargetTableName)}\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceV2Source",
								"SOQLQuery": {
									"value": "\nSELECT LastModifiedDate\nFROM @{pipeline().parameters.SourceTableName}\nwhere LastModifiedDate >= @{variables('brpExtractFrom')}\norder by LastModifiedDate desc \nlimit 1",
									"type": "Expression"
								},
								"includeDeletedObjects": false
							},
							"dataset": {
								"referenceName": "SalesforceMSANew",
								"type": "DatasetReference",
								"parameters": {
									"sourcetable": {
										"value": "@pipeline().parameters.SourceTableName",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(activity('GET SRC HighWaterMark').output.firstRow.LastModifiedDate, 'yyyy-MM-ddTHH:mm:ss.fffZ')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "lead"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "lead"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": " Id, IsDeleted, MasterRecordId, LastName, FirstName, Salutation, MiddleName, Name, RecordTypeId, Title, Company, Street, City, State, PostalCode, Country, Latitude, Longitude, GeocodeAccuracy, Phone, Email, Website, PhotoUrl, Description, LeadSource, Status, Industry, Rating, AnnualRevenue, NumberOfEmployees, OwnerId, IsConverted, ConvertedDate, ConvertedAccountId, ConvertedContactId, ConvertedOpportunityId, IsUnreadByOwner, CreatedDate, CreatedById, LastModifiedDate, LastModifiedById, SystemModstamp, LastActivityDate, LastViewedDate, LastReferencedDate, Jigsaw, JigsawContactId, EmailBouncedReason, EmailBouncedDate, IndividualId, CountryOfBirth__c, IdVerificationSectionStatus__c, PassportCountryOfIssue__c, PersonalDetailsSectionCompleted__c, Pronouns__c, VerifiedDateOfBirthText__c, VerifiedDateofBirth__c, VerifiedFirstName__c, VerifiedLastName__c, VerifiedMiddleName__c, WebsiteRole__c, AzureId__c, ConsentDateTimeofInitiatingAgent__c, DateOfBirth__c, HasActiveMSAApplication__c, InitiatingMigrationAgent__c, LeadId__c, PassportNumber__c, PreferredName__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "salesforcenew"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce New MSA"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesforceMSANew')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SF task Refresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Salesforce object",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set brpExtractTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "Select  @{pipeline().parameters.ColumnList}  \nFROM @{pipeline().parameters.SourceTableName}\nwhere  LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'} AND\nLastModifiedDate <= {ts'@{variables('brpExtractTo')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set  brpExtractFrom",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET TGT HWM  SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractFrom",
							"value": {
								"value": "@formatDateTime(replace(activity('GET TGT HWM  SQL').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET TGT HWM  SQL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM \n[salesforce].[user]",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.TargetTableName",
										"type": "Expression"
									},
									"schemaname": {
										"value": "@pipeline().parameters.schemaname",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "GET SRC HighWaterMark",
						"description": "Find the latest change in the Salesforce table indicated by the parameter",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set  brpExtractFrom",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "SELECT MAX(LastModifiedDate) AS HighWaterMark\nFROM @{pipeline().parameters.SourceTableName}\nWHERE LastModifiedDate >= {ts'@{variables('brpExtractFrom')}'}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"dataset": {
								"referenceName": "ACSDSSF",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set brpExtractTo",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET SRC HighWaterMark",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "brpExtractTo",
							"value": {
								"value": "@formatDateTime(replace(activity('GET SRC HighWaterMark').output.firstRow.HighWaterMark,' ','T'), 'yyyy-MM-dd HH:mm:ss.fff')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableName": {
						"type": "string",
						"defaultValue": "task"
					},
					"TargetTableName": {
						"type": "string",
						"defaultValue": "task"
					},
					"ColumnList": {
						"type": "string",
						"defaultValue": "Id ,RecordTypeId ,WhoId ,WhatId ,Subject ,ActivityDate ,Status ,Priority ,IsHighPriority ,OwnerId ,Description ,CurrencyIsoCode ,Type ,IsDeleted ,AccountId ,IsClosed ,CreatedDate ,CreatedById ,LastModifiedDate ,LastModifiedById ,SystemModstamp ,IsArchived ,IsVisibleInSelfService ,CallDurationInSeconds ,CallType ,CallDisposition ,CallObject ,ReminderDateTime ,IsReminderSet ,RecurrenceActivityId ,IsRecurrence ,RecurrenceStartDateOnly ,RecurrenceEndDateOnly ,RecurrenceTimeZoneSidKey ,RecurrenceType ,RecurrenceInterval ,RecurrenceDayOfWeekMask ,RecurrenceDayOfMonth ,RecurrenceInstance ,RecurrenceMonthOfYear ,RecurrenceRegeneratedType ,TaskSubtype ,CompletedDateTime ,Data_Migrated_from_XEN__c ,XEN_Activity_Type__c ,XenId_Activities__c ,WFD_Project_Outputs_Activities__c ,Facebook_Message__c ,Interaction_Type__c ,Pendula__Message__c"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "dbo"
					}
				},
				"variables": {
					"brpExtractFrom": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					},
					"brpExtractTo": {
						"type": "String",
						"defaultValue": "1900-12-31 00:00:00"
					}
				},
				"folder": {
					"name": "ACS/Salesforce"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ACSDSSF')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StartDatabricksCluster')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "StartCluster",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "Bearer dapiae199d2cfc48215b4a5031740793f3c5",
									"type": "Expression"
								}
							},
							"url": {
								"value": "https://adb-788505602918573.13.azuredatabricks.net/api/2.0/clusters/start",
								"type": "Expression"
							},
							"body": {
								"value": "{\n  \"cluster_id\": \"@{pipeline().parameters.clusterId}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Ignore error",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "StartCluster",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "error",
							"value": {
								"value": "@activity('StartCluster').error.message",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"clusterId": {
						"type": "string",
						"defaultValue": "1010-010936-bskqk28r"
					}
				},
				"variables": {
					"output": {
						"type": "String"
					},
					"error": {
						"type": "String"
					}
				},
				"folder": {
					"name": "ACS/MSA Forecasting"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestFunctions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set end of the month as Date",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "date",
							"value": {
								"value": "@formatDateTime(addDays(startOfMonth(addToTime(utcnow(), 1, 'Month')), -1), 'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"date": {
						"type": "String",
						"defaultValue": "@formatDateTime(addDays(startOfMonth(addToTime(utcnow(), 1, 'Month')), -1), 'yyyy-MM-dd')"
					}
				},
				"folder": {
					"name": "ACS/Membership/Monthly"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Unfinancial Numbers Forecast')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL TO DataLake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "StartDatabricksCluster",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from [membership].[members_unfinancial_h]  \nwhere dateStart >  '2017-12-31'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSQLSP",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_DatabricksPremiumFolder",
								"type": "DatasetReference",
								"parameters": {
									"filename": "Unfinancial",
									"Foldername": "Membership"
								}
							}
						]
					},
					{
						"name": "StartDatabricksCluster",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "StartDatabricksCluster",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Prophet  Renewed forecast",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "SQL TO DataLake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/prashant.yadvendra@acs.org.au/Machine Learning ACS/Forecasting Membership/Unfinancial Members forecast"
						},
						"linkedServiceName": {
							"referenceName": "ACS Databricks Premium",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ACS/Membership/Forecasting"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSQLSP')]",
				"[concat(variables('factoryId'), '/datasets/ds_DatabricksPremiumFolder')]",
				"[concat(variables('factoryId'), '/pipelines/StartDatabricksCluster')]",
				"[concat(variables('factoryId'), '/linkedServices/ACS Databricks Premium')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Update Daily Cases Table Legacy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL TO DataLake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from [psas].[opencasesdaily]\nOPTION (MAXRECURSION 32767)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate table [psas].[dailyCases]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSQLSP",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "dailyCases",
									"schemaname": "psas"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ACS/MSA Forecasting"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSQLSP')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_RawAnalyticsDaily_Incre')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AnalyticsDatafeed",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"modifiedDatetimeStart": {
									"value": "@addDays(utcnow(),-1)",
									"type": "Expression"
								},
								"modifiedDatetimeEnd": {
									"value": "@utcnow()",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter TSV_GZ",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Set V_fileName",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name, 'tsv.gz')\n\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set V_fileName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "filename",
							"value": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter TSV_GZ",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter TSV_GZ').output.Value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": "adobe-analytics--datafeed/prod",
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"type": "String",
														"ordinal": 1
													},
													"sink": {
														"name": "accept_language",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 2
													},
													"sink": {
														"name": "browser",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 3
													},
													"sink": {
														"name": "browser_height",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 4
													},
													"sink": {
														"name": "browser_width",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 5
													},
													"sink": {
														"name": "c_color",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 6
													},
													"sink": {
														"name": "campaign",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 7
													},
													"sink": {
														"name": "carrier",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 8
													},
													"sink": {
														"name": "channel",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 9
													},
													"sink": {
														"name": "click_action",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 10
													},
													"sink": {
														"name": "click_action_type",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 11
													},
													"sink": {
														"name": "click_context",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 12
													},
													"sink": {
														"name": "click_context_type",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 13
													},
													"sink": {
														"name": "click_sourceid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 14
													},
													"sink": {
														"name": "click_tag",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 15
													},
													"sink": {
														"name": "clickmaplink",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 16
													},
													"sink": {
														"name": "clickmaplinkbyregion",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 17
													},
													"sink": {
														"name": "clickmappage",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 18
													},
													"sink": {
														"name": "clickmapregion",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 19
													},
													"sink": {
														"name": "code_ver",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 20
													},
													"sink": {
														"name": "color",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 21
													},
													"sink": {
														"name": "connection_type",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 22
													},
													"sink": {
														"name": "cookies",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 23
													},
													"sink": {
														"name": "country",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 24
													},
													"sink": {
														"name": "ct_connect_type",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 25
													},
													"sink": {
														"name": "curr_factor",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 26
													},
													"sink": {
														"name": "curr_rate",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 27
													},
													"sink": {
														"name": "currency",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 28
													},
													"sink": {
														"name": "cust_hit_time_gmt",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 29
													},
													"sink": {
														"name": "cust_visid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 30
													},
													"sink": {
														"name": "daily_visitor",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 31
													},
													"sink": {
														"name": "date_time",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 32
													},
													"sink": {
														"name": "domain",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 33
													},
													"sink": {
														"name": "duplicate_events",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 34
													},
													"sink": {
														"name": "duplicate_purchase",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 35
													},
													"sink": {
														"name": "duplicated_from",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 36
													},
													"sink": {
														"name": "ef_id",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 37
													},
													"sink": {
														"name": "evar1",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 38
													},
													"sink": {
														"name": "evar2",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 39
													},
													"sink": {
														"name": "evar3",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 40
													},
													"sink": {
														"name": "evar4",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 41
													},
													"sink": {
														"name": "evar5",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 42
													},
													"sink": {
														"name": "evar6",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 43
													},
													"sink": {
														"name": "evar7",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 44
													},
													"sink": {
														"name": "evar8",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 45
													},
													"sink": {
														"name": "evar9",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 46
													},
													"sink": {
														"name": "evar10",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 47
													},
													"sink": {
														"name": "evar11",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 48
													},
													"sink": {
														"name": "evar12",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 49
													},
													"sink": {
														"name": "evar13",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 50
													},
													"sink": {
														"name": "evar14",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 51
													},
													"sink": {
														"name": "evar15",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 52
													},
													"sink": {
														"name": "evar16",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 53
													},
													"sink": {
														"name": "evar17",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 54
													},
													"sink": {
														"name": "evar18",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 55
													},
													"sink": {
														"name": "evar19",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 56
													},
													"sink": {
														"name": "evar20",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 57
													},
													"sink": {
														"name": "evar21",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 58
													},
													"sink": {
														"name": "evar22",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 59
													},
													"sink": {
														"name": "evar23",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 60
													},
													"sink": {
														"name": "evar24",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 61
													},
													"sink": {
														"name": "evar25",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 62
													},
													"sink": {
														"name": "evar26",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 63
													},
													"sink": {
														"name": "evar27",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 64
													},
													"sink": {
														"name": "evar28",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 65
													},
													"sink": {
														"name": "evar29",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 66
													},
													"sink": {
														"name": "evar30",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 67
													},
													"sink": {
														"name": "evar31",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 68
													},
													"sink": {
														"name": "evar32",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 69
													},
													"sink": {
														"name": "evar33",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 70
													},
													"sink": {
														"name": "evar34",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 71
													},
													"sink": {
														"name": "evar35",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 72
													},
													"sink": {
														"name": "evar36",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 73
													},
													"sink": {
														"name": "evar37",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 74
													},
													"sink": {
														"name": "evar38",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 75
													},
													"sink": {
														"name": "evar39",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 76
													},
													"sink": {
														"name": "evar40",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 77
													},
													"sink": {
														"name": "evar41",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 78
													},
													"sink": {
														"name": "evar42",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 79
													},
													"sink": {
														"name": "evar43",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 80
													},
													"sink": {
														"name": "evar44",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 81
													},
													"sink": {
														"name": "evar45",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 82
													},
													"sink": {
														"name": "evar46",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 83
													},
													"sink": {
														"name": "evar47",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 84
													},
													"sink": {
														"name": "evar48",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 85
													},
													"sink": {
														"name": "evar49",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 86
													},
													"sink": {
														"name": "evar50",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 87
													},
													"sink": {
														"name": "evar51",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 88
													},
													"sink": {
														"name": "evar52",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 89
													},
													"sink": {
														"name": "evar53",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 90
													},
													"sink": {
														"name": "evar54",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 91
													},
													"sink": {
														"name": "evar55",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 92
													},
													"sink": {
														"name": "evar56",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 93
													},
													"sink": {
														"name": "evar57",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 94
													},
													"sink": {
														"name": "evar58",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 95
													},
													"sink": {
														"name": "evar59",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 96
													},
													"sink": {
														"name": "evar60",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 97
													},
													"sink": {
														"name": "evar61",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 98
													},
													"sink": {
														"name": "evar62",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 99
													},
													"sink": {
														"name": "evar63",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 100
													},
													"sink": {
														"name": "evar64",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 101
													},
													"sink": {
														"name": "evar65",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 102
													},
													"sink": {
														"name": "evar66",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 103
													},
													"sink": {
														"name": "evar67",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 104
													},
													"sink": {
														"name": "evar68",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 105
													},
													"sink": {
														"name": "evar69",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 106
													},
													"sink": {
														"name": "evar70",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 107
													},
													"sink": {
														"name": "evar71",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 108
													},
													"sink": {
														"name": "evar72",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 109
													},
													"sink": {
														"name": "evar73",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 110
													},
													"sink": {
														"name": "evar74",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 111
													},
													"sink": {
														"name": "evar75",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 112
													},
													"sink": {
														"name": "evar76",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 113
													},
													"sink": {
														"name": "evar77",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 114
													},
													"sink": {
														"name": "evar78",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 115
													},
													"sink": {
														"name": "evar79",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 116
													},
													"sink": {
														"name": "evar80",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 117
													},
													"sink": {
														"name": "evar81",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 118
													},
													"sink": {
														"name": "evar82",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 119
													},
													"sink": {
														"name": "evar83",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 120
													},
													"sink": {
														"name": "evar84",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 121
													},
													"sink": {
														"name": "evar85",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 122
													},
													"sink": {
														"name": "evar86",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 123
													},
													"sink": {
														"name": "evar87",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 124
													},
													"sink": {
														"name": "evar88",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 125
													},
													"sink": {
														"name": "evar89",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 126
													},
													"sink": {
														"name": "evar90",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 127
													},
													"sink": {
														"name": "evar91",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 128
													},
													"sink": {
														"name": "evar92",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 129
													},
													"sink": {
														"name": "evar93",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 130
													},
													"sink": {
														"name": "evar94",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 131
													},
													"sink": {
														"name": "evar95",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 132
													},
													"sink": {
														"name": "evar96",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 133
													},
													"sink": {
														"name": "evar97",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 134
													},
													"sink": {
														"name": "evar98",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 135
													},
													"sink": {
														"name": "evar99",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 136
													},
													"sink": {
														"name": "evar100",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 137
													},
													"sink": {
														"name": "event_list",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 138
													},
													"sink": {
														"name": "exclude_hit",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 139
													},
													"sink": {
														"name": "first_hit_page_url",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 140
													},
													"sink": {
														"name": "first_hit_pagename",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 141
													},
													"sink": {
														"name": "first_hit_referrer",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 142
													},
													"sink": {
														"name": "first_hit_time_gmt",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 143
													},
													"sink": {
														"name": "geo_city",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 144
													},
													"sink": {
														"name": "geo_country",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 145
													},
													"sink": {
														"name": "geo_dma",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 146
													},
													"sink": {
														"name": "geo_region",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 147
													},
													"sink": {
														"name": "geo_zip",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 148
													},
													"sink": {
														"name": "hier1",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 149
													},
													"sink": {
														"name": "hier2",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 150
													},
													"sink": {
														"name": "hier3",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 151
													},
													"sink": {
														"name": "hier4",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 152
													},
													"sink": {
														"name": "hier5",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 153
													},
													"sink": {
														"name": "hit_source",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 154
													},
													"sink": {
														"name": "hit_time_gmt",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 155
													},
													"sink": {
														"name": "hitid_high",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 156
													},
													"sink": {
														"name": "hitid_low",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 157
													},
													"sink": {
														"name": "homepage",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 158
													},
													"sink": {
														"name": "hourly_visitor",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 159
													},
													"sink": {
														"name": "ip",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 160
													},
													"sink": {
														"name": "ip2",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 161
													},
													"sink": {
														"name": "j_jscript",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 162
													},
													"sink": {
														"name": "java_enabled",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 163
													},
													"sink": {
														"name": "javascript",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 164
													},
													"sink": {
														"name": "language",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 165
													},
													"sink": {
														"name": "last_hit_time_gmt",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 166
													},
													"sink": {
														"name": "last_purchase_num",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 167
													},
													"sink": {
														"name": "last_purchase_time_gmt",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 168
													},
													"sink": {
														"name": "latlon1",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 169
													},
													"sink": {
														"name": "latlon23",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 170
													},
													"sink": {
														"name": "latlon45",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 171
													},
													"sink": {
														"name": "mc_audiences",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 172
													},
													"sink": {
														"name": "mcvisid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 173
													},
													"sink": {
														"name": "mobile_id",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 174
													},
													"sink": {
														"name": "mobileacquisitionclicks",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 175
													},
													"sink": {
														"name": "mobileaction",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 176
													},
													"sink": {
														"name": "mobileactioninapptime",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 177
													},
													"sink": {
														"name": "mobileactiontotaltime",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 178
													},
													"sink": {
														"name": "mobileappid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 179
													},
													"sink": {
														"name": "mobileappperformanceaffectedusers",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 180
													},
													"sink": {
														"name": "mobileappperformanceappid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 181
													},
													"sink": {
														"name": "mobileappperformanceappid.app-perf-app-name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 182
													},
													"sink": {
														"name": "mobileappperformanceappid.app-perf-platform",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 183
													},
													"sink": {
														"name": "mobileappperformancecrashes",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 184
													},
													"sink": {
														"name": "mobileappperformancecrashid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 185
													},
													"sink": {
														"name": "mobileappperformancecrashid.app-perf-crash-name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 186
													},
													"sink": {
														"name": "mobileappperformanceloads",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 187
													},
													"sink": {
														"name": "mobileappstoreavgrating",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 188
													},
													"sink": {
														"name": "mobileappstoredownloads",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 189
													},
													"sink": {
														"name": "mobileappstoreinapprevenue",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 190
													},
													"sink": {
														"name": "mobileappstoreinapproyalties",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 191
													},
													"sink": {
														"name": "mobileappstoreobjectid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 192
													},
													"sink": {
														"name": "mobileappstoreobjectid.app-store-user",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 193
													},
													"sink": {
														"name": "mobileappstoreobjectid.application-name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 194
													},
													"sink": {
														"name": "mobileappstoreobjectid.application-version",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 195
													},
													"sink": {
														"name": "mobileappstoreobjectid.appstore-name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 196
													},
													"sink": {
														"name": "mobileappstoreobjectid.category-name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 197
													},
													"sink": {
														"name": "mobileappstoreobjectid.country-name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 198
													},
													"sink": {
														"name": "mobileappstoreobjectid.device-manufacturer",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 199
													},
													"sink": {
														"name": "mobileappstoreobjectid.device-name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 200
													},
													"sink": {
														"name": "mobileappstoreobjectid.in-app-name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 201
													},
													"sink": {
														"name": "mobileappstoreobjectid.platform-name-version",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 202
													},
													"sink": {
														"name": "mobileappstoreobjectid.rank-category-type",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 203
													},
													"sink": {
														"name": "mobileappstoreobjectid.region-name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 204
													},
													"sink": {
														"name": "mobileappstoreobjectid.review-comment",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 205
													},
													"sink": {
														"name": "mobileappstoreobjectid.review-title",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 206
													},
													"sink": {
														"name": "mobileappstoreoneoffrevenue",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 207
													},
													"sink": {
														"name": "mobileappstoreoneoffroyalties",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 208
													},
													"sink": {
														"name": "mobileappstorepurchases",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 209
													},
													"sink": {
														"name": "mobileappstorerank",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 210
													},
													"sink": {
														"name": "mobileappstorerankdivisor",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 211
													},
													"sink": {
														"name": "mobileappstorerating",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 212
													},
													"sink": {
														"name": "mobileappstoreratingdivisor",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 213
													},
													"sink": {
														"name": "mobileavgprevsessionlength",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 214
													},
													"sink": {
														"name": "mobilebeaconmajor",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 215
													},
													"sink": {
														"name": "mobilebeaconminor",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 216
													},
													"sink": {
														"name": "mobilebeaconproximity",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 217
													},
													"sink": {
														"name": "mobilebeaconuuid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 218
													},
													"sink": {
														"name": "mobilecampaigncontent",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 219
													},
													"sink": {
														"name": "mobilecampaignmedium",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 220
													},
													"sink": {
														"name": "mobilecampaignname",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 221
													},
													"sink": {
														"name": "mobilecampaignsource",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 222
													},
													"sink": {
														"name": "mobilecampaignterm",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 223
													},
													"sink": {
														"name": "mobilecrashes",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 224
													},
													"sink": {
														"name": "mobilecrashrate",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 225
													},
													"sink": {
														"name": "mobiledailyengagedusers",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 226
													},
													"sink": {
														"name": "mobiledayofweek",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 227
													},
													"sink": {
														"name": "mobiledayssincefirstuse",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 228
													},
													"sink": {
														"name": "mobiledayssincelastupgrade",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 229
													},
													"sink": {
														"name": "mobiledayssincelastuse",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 230
													},
													"sink": {
														"name": "mobiledeeplinkid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 231
													},
													"sink": {
														"name": "mobiledeeplinkid.name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 232
													},
													"sink": {
														"name": "mobiledevice",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 233
													},
													"sink": {
														"name": "mobilehourofday",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 234
													},
													"sink": {
														"name": "mobileinstalldate",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 235
													},
													"sink": {
														"name": "mobileinstalls",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 236
													},
													"sink": {
														"name": "mobilelaunches",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 237
													},
													"sink": {
														"name": "mobilelaunchessincelastupgrade",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 238
													},
													"sink": {
														"name": "mobilelaunchnumber",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 239
													},
													"sink": {
														"name": "mobileltv",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 240
													},
													"sink": {
														"name": "mobileltvtotal",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 241
													},
													"sink": {
														"name": "mobilemessagebuttonname",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 242
													},
													"sink": {
														"name": "mobilemessageclicks",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 243
													},
													"sink": {
														"name": "mobilemessageid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 244
													},
													"sink": {
														"name": "mobilemessageid.dest",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 245
													},
													"sink": {
														"name": "mobilemessageid.name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 246
													},
													"sink": {
														"name": "mobilemessageid.type",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 247
													},
													"sink": {
														"name": "mobilemessageimpressions",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 248
													},
													"sink": {
														"name": "mobilemessageonline",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 249
													},
													"sink": {
														"name": "mobilemessagepushoptin",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 250
													},
													"sink": {
														"name": "mobilemessagepushpayloadid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 251
													},
													"sink": {
														"name": "mobilemessagepushpayloadid.name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 252
													},
													"sink": {
														"name": "mobilemessageviews",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 253
													},
													"sink": {
														"name": "mobilemonthlyengagedusers",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 254
													},
													"sink": {
														"name": "mobileosenvironment",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 255
													},
													"sink": {
														"name": "mobileosversion",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 256
													},
													"sink": {
														"name": "mobileplaceaccuracy",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 257
													},
													"sink": {
														"name": "mobileplacecategory",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 258
													},
													"sink": {
														"name": "mobileplacedwelltime",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 259
													},
													"sink": {
														"name": "mobileplaceentry",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 260
													},
													"sink": {
														"name": "mobileplaceexit",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 261
													},
													"sink": {
														"name": "mobileplaceid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 262
													},
													"sink": {
														"name": "mobileprevsessionlength",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 263
													},
													"sink": {
														"name": "mobilepushoptin",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 264
													},
													"sink": {
														"name": "mobilepushpayloadid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 265
													},
													"sink": {
														"name": "mobilerelaunchcampaigncontent",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 266
													},
													"sink": {
														"name": "mobilerelaunchcampaignmedium",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 267
													},
													"sink": {
														"name": "mobilerelaunchcampaignsource",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 268
													},
													"sink": {
														"name": "mobilerelaunchcampaignterm",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 269
													},
													"sink": {
														"name": "mobilerelaunchcampaigntrackingcode",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 270
													},
													"sink": {
														"name": "mobilerelaunchcampaigntrackingcode.name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 271
													},
													"sink": {
														"name": "mobileresolution",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 272
													},
													"sink": {
														"name": "mobileupgrades",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 273
													},
													"sink": {
														"name": "monthly_visitor",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 274
													},
													"sink": {
														"name": "mvvar1",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 275
													},
													"sink": {
														"name": "mvvar2",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 276
													},
													"sink": {
														"name": "mvvar3",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 277
													},
													"sink": {
														"name": "namespace",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 278
													},
													"sink": {
														"name": "new_visit",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 279
													},
													"sink": {
														"name": "os",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 280
													},
													"sink": {
														"name": "p_plugins",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 281
													},
													"sink": {
														"name": "page_event",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 282
													},
													"sink": {
														"name": "page_event_var1",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 283
													},
													"sink": {
														"name": "page_event_var2",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 284
													},
													"sink": {
														"name": "page_event_var3",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 285
													},
													"sink": {
														"name": "page_type",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 286
													},
													"sink": {
														"name": "page_url",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 287
													},
													"sink": {
														"name": "pagename",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 288
													},
													"sink": {
														"name": "paid_search",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 289
													},
													"sink": {
														"name": "partner_plugins",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 290
													},
													"sink": {
														"name": "persistent_cookie",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 291
													},
													"sink": {
														"name": "plugins",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 292
													},
													"sink": {
														"name": "pointofinterest",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 293
													},
													"sink": {
														"name": "pointofinterestdistance",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 294
													},
													"sink": {
														"name": "post_browser_height",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 295
													},
													"sink": {
														"name": "post_browser_width",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 296
													},
													"sink": {
														"name": "post_campaign",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 297
													},
													"sink": {
														"name": "post_channel",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 298
													},
													"sink": {
														"name": "post_clickmaplink",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 299
													},
													"sink": {
														"name": "post_clickmaplinkbyregion",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 300
													},
													"sink": {
														"name": "post_clickmappage",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 301
													},
													"sink": {
														"name": "post_clickmapregion",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 302
													},
													"sink": {
														"name": "post_cookies",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 303
													},
													"sink": {
														"name": "post_currency",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 304
													},
													"sink": {
														"name": "post_cust_hit_time_gmt",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 305
													},
													"sink": {
														"name": "post_cust_visid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 306
													},
													"sink": {
														"name": "post_ef_id",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 307
													},
													"sink": {
														"name": "post_evar1",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 308
													},
													"sink": {
														"name": "post_evar2",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 309
													},
													"sink": {
														"name": "post_evar3",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 310
													},
													"sink": {
														"name": "post_evar4",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 311
													},
													"sink": {
														"name": "post_evar5",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 312
													},
													"sink": {
														"name": "post_evar6",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 313
													},
													"sink": {
														"name": "post_evar7",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 314
													},
													"sink": {
														"name": "post_evar8",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 315
													},
													"sink": {
														"name": "post_evar9",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 316
													},
													"sink": {
														"name": "post_evar10",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 317
													},
													"sink": {
														"name": "post_evar11",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 318
													},
													"sink": {
														"name": "post_evar12",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 319
													},
													"sink": {
														"name": "post_evar13",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 320
													},
													"sink": {
														"name": "post_evar14",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 321
													},
													"sink": {
														"name": "post_evar15",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 322
													},
													"sink": {
														"name": "post_evar16",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 323
													},
													"sink": {
														"name": "post_evar17",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 324
													},
													"sink": {
														"name": "post_evar18",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 325
													},
													"sink": {
														"name": "post_evar19",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 326
													},
													"sink": {
														"name": "post_evar20",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 327
													},
													"sink": {
														"name": "post_evar21",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 328
													},
													"sink": {
														"name": "post_evar22",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 329
													},
													"sink": {
														"name": "post_evar23",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 330
													},
													"sink": {
														"name": "post_evar24",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 331
													},
													"sink": {
														"name": "post_evar25",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 332
													},
													"sink": {
														"name": "post_evar26",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 333
													},
													"sink": {
														"name": "post_evar27",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 334
													},
													"sink": {
														"name": "post_evar28",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 335
													},
													"sink": {
														"name": "post_evar29",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 336
													},
													"sink": {
														"name": "post_evar30",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 337
													},
													"sink": {
														"name": "post_evar31",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 338
													},
													"sink": {
														"name": "post_evar32",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 339
													},
													"sink": {
														"name": "post_evar33",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 340
													},
													"sink": {
														"name": "post_evar34",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 341
													},
													"sink": {
														"name": "post_evar35",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 342
													},
													"sink": {
														"name": "post_evar36",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 343
													},
													"sink": {
														"name": "post_evar37",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 344
													},
													"sink": {
														"name": "post_evar38",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 345
													},
													"sink": {
														"name": "post_evar39",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 346
													},
													"sink": {
														"name": "post_evar40",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 347
													},
													"sink": {
														"name": "post_evar41",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 348
													},
													"sink": {
														"name": "post_evar42",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 349
													},
													"sink": {
														"name": "post_evar43",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 350
													},
													"sink": {
														"name": "post_evar44",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 351
													},
													"sink": {
														"name": "post_evar45",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 352
													},
													"sink": {
														"name": "post_evar46",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 353
													},
													"sink": {
														"name": "post_evar47",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 354
													},
													"sink": {
														"name": "post_evar48",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 355
													},
													"sink": {
														"name": "post_evar49",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 356
													},
													"sink": {
														"name": "post_evar50",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 357
													},
													"sink": {
														"name": "post_evar51",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 358
													},
													"sink": {
														"name": "post_evar52",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 359
													},
													"sink": {
														"name": "post_evar53",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 360
													},
													"sink": {
														"name": "post_evar54",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 361
													},
													"sink": {
														"name": "post_evar55",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 362
													},
													"sink": {
														"name": "post_evar56",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 363
													},
													"sink": {
														"name": "post_evar57",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 364
													},
													"sink": {
														"name": "post_evar58",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 365
													},
													"sink": {
														"name": "post_evar59",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 366
													},
													"sink": {
														"name": "post_evar60",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 367
													},
													"sink": {
														"name": "post_evar61",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 368
													},
													"sink": {
														"name": "post_evar62",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 369
													},
													"sink": {
														"name": "post_evar63",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 370
													},
													"sink": {
														"name": "post_evar64",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 371
													},
													"sink": {
														"name": "post_evar65",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 372
													},
													"sink": {
														"name": "post_evar66",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 373
													},
													"sink": {
														"name": "post_evar67",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 374
													},
													"sink": {
														"name": "post_evar68",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 375
													},
													"sink": {
														"name": "post_evar69",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 376
													},
													"sink": {
														"name": "post_evar70",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 377
													},
													"sink": {
														"name": "post_evar71",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 378
													},
													"sink": {
														"name": "post_evar72",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 379
													},
													"sink": {
														"name": "post_evar73",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 380
													},
													"sink": {
														"name": "post_evar74",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 381
													},
													"sink": {
														"name": "post_evar75",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 382
													},
													"sink": {
														"name": "post_evar76",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 383
													},
													"sink": {
														"name": "post_evar77",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 384
													},
													"sink": {
														"name": "post_evar78",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 385
													},
													"sink": {
														"name": "post_evar79",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 386
													},
													"sink": {
														"name": "post_evar80",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 387
													},
													"sink": {
														"name": "post_evar81",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 388
													},
													"sink": {
														"name": "post_evar82",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 389
													},
													"sink": {
														"name": "post_evar83",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 390
													},
													"sink": {
														"name": "post_evar84",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 391
													},
													"sink": {
														"name": "post_evar85",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 392
													},
													"sink": {
														"name": "post_evar86",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 393
													},
													"sink": {
														"name": "post_evar87",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 394
													},
													"sink": {
														"name": "post_evar88",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 395
													},
													"sink": {
														"name": "post_evar89",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 396
													},
													"sink": {
														"name": "post_evar90",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 397
													},
													"sink": {
														"name": "post_evar91",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 398
													},
													"sink": {
														"name": "post_evar92",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 399
													},
													"sink": {
														"name": "post_evar93",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 400
													},
													"sink": {
														"name": "post_evar94",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 401
													},
													"sink": {
														"name": "post_evar95",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 402
													},
													"sink": {
														"name": "post_evar96",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 403
													},
													"sink": {
														"name": "post_evar97",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 404
													},
													"sink": {
														"name": "post_evar98",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 405
													},
													"sink": {
														"name": "post_evar99",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 406
													},
													"sink": {
														"name": "post_evar100",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 407
													},
													"sink": {
														"name": "post_event_list",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 408
													},
													"sink": {
														"name": "post_hier1",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 409
													},
													"sink": {
														"name": "post_hier2",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 410
													},
													"sink": {
														"name": "post_hier3",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 411
													},
													"sink": {
														"name": "post_hier4",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 412
													},
													"sink": {
														"name": "post_hier5",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 413
													},
													"sink": {
														"name": "post_java_enabled",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 414
													},
													"sink": {
														"name": "post_keywords",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 415
													},
													"sink": {
														"name": "post_mc_audiences",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 416
													},
													"sink": {
														"name": "post_mobileaction",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 417
													},
													"sink": {
														"name": "post_mobileappid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 418
													},
													"sink": {
														"name": "post_mobilecampaigncontent",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 419
													},
													"sink": {
														"name": "post_mobilecampaignmedium",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 420
													},
													"sink": {
														"name": "post_mobilecampaignname",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 421
													},
													"sink": {
														"name": "post_mobilecampaignsource",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 422
													},
													"sink": {
														"name": "post_mobilecampaignterm",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 423
													},
													"sink": {
														"name": "post_mobiledayofweek",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 424
													},
													"sink": {
														"name": "post_mobiledayssincefirstuse",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 425
													},
													"sink": {
														"name": "post_mobiledayssincelastuse",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 426
													},
													"sink": {
														"name": "post_mobiledevice",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 427
													},
													"sink": {
														"name": "post_mobilehourofday",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 428
													},
													"sink": {
														"name": "post_mobileinstalldate",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 429
													},
													"sink": {
														"name": "post_mobilelaunchnumber",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 430
													},
													"sink": {
														"name": "post_mobileltv",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 431
													},
													"sink": {
														"name": "post_mobilemessageid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 432
													},
													"sink": {
														"name": "post_mobilemessageonline",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 433
													},
													"sink": {
														"name": "post_mobileosversion",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 434
													},
													"sink": {
														"name": "post_mobilepushoptin",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 435
													},
													"sink": {
														"name": "post_mobilepushpayloadid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 436
													},
													"sink": {
														"name": "post_mobileresolution",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 437
													},
													"sink": {
														"name": "post_mvvar1",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 438
													},
													"sink": {
														"name": "post_mvvar2",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 439
													},
													"sink": {
														"name": "post_mvvar3",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 440
													},
													"sink": {
														"name": "post_page_event",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 441
													},
													"sink": {
														"name": "post_page_event_var1",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 442
													},
													"sink": {
														"name": "post_page_event_var2",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 443
													},
													"sink": {
														"name": "post_page_event_var3",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 444
													},
													"sink": {
														"name": "post_page_type",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 445
													},
													"sink": {
														"name": "post_page_url",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 446
													},
													"sink": {
														"name": "post_pagename",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 447
													},
													"sink": {
														"name": "post_pagename_no_url",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 448
													},
													"sink": {
														"name": "post_partner_plugins",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 449
													},
													"sink": {
														"name": "post_persistent_cookie",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 450
													},
													"sink": {
														"name": "post_pointofinterest",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 451
													},
													"sink": {
														"name": "post_pointofinterestdistance",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 452
													},
													"sink": {
														"name": "post_product_list",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 453
													},
													"sink": {
														"name": "post_prop1",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 454
													},
													"sink": {
														"name": "post_prop2",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 455
													},
													"sink": {
														"name": "post_prop3",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 456
													},
													"sink": {
														"name": "post_prop4",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 457
													},
													"sink": {
														"name": "post_prop5",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 458
													},
													"sink": {
														"name": "post_prop6",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 459
													},
													"sink": {
														"name": "post_prop7",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 460
													},
													"sink": {
														"name": "post_prop8",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 461
													},
													"sink": {
														"name": "post_prop9",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 462
													},
													"sink": {
														"name": "post_prop10",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 463
													},
													"sink": {
														"name": "post_prop11",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 464
													},
													"sink": {
														"name": "post_prop12",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 465
													},
													"sink": {
														"name": "post_prop13",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 466
													},
													"sink": {
														"name": "post_prop14",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 467
													},
													"sink": {
														"name": "post_prop15",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 468
													},
													"sink": {
														"name": "post_prop16",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 469
													},
													"sink": {
														"name": "post_prop17",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 470
													},
													"sink": {
														"name": "post_prop18",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 471
													},
													"sink": {
														"name": "post_prop19",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 472
													},
													"sink": {
														"name": "post_prop20",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 473
													},
													"sink": {
														"name": "post_prop21",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 474
													},
													"sink": {
														"name": "post_prop22",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 475
													},
													"sink": {
														"name": "post_prop23",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 476
													},
													"sink": {
														"name": "post_prop24",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 477
													},
													"sink": {
														"name": "post_prop25",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 478
													},
													"sink": {
														"name": "post_prop26",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 479
													},
													"sink": {
														"name": "post_prop27",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 480
													},
													"sink": {
														"name": "post_prop28",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 481
													},
													"sink": {
														"name": "post_prop29",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 482
													},
													"sink": {
														"name": "post_prop30",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 483
													},
													"sink": {
														"name": "post_prop31",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 484
													},
													"sink": {
														"name": "post_prop32",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 485
													},
													"sink": {
														"name": "post_prop33",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 486
													},
													"sink": {
														"name": "post_prop34",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 487
													},
													"sink": {
														"name": "post_prop35",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 488
													},
													"sink": {
														"name": "post_prop36",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 489
													},
													"sink": {
														"name": "post_prop37",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 490
													},
													"sink": {
														"name": "post_prop38",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 491
													},
													"sink": {
														"name": "post_prop39",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 492
													},
													"sink": {
														"name": "post_prop40",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 493
													},
													"sink": {
														"name": "post_prop41",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 494
													},
													"sink": {
														"name": "post_prop42",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 495
													},
													"sink": {
														"name": "post_prop43",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 496
													},
													"sink": {
														"name": "post_prop44",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 497
													},
													"sink": {
														"name": "post_prop45",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 498
													},
													"sink": {
														"name": "post_prop46",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 499
													},
													"sink": {
														"name": "post_prop47",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 500
													},
													"sink": {
														"name": "post_prop48",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 501
													},
													"sink": {
														"name": "post_prop49",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 502
													},
													"sink": {
														"name": "post_prop50",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 503
													},
													"sink": {
														"name": "post_prop51",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 504
													},
													"sink": {
														"name": "post_prop52",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 505
													},
													"sink": {
														"name": "post_prop53",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 506
													},
													"sink": {
														"name": "post_prop54",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 507
													},
													"sink": {
														"name": "post_prop55",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 508
													},
													"sink": {
														"name": "post_prop56",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 509
													},
													"sink": {
														"name": "post_prop57",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 510
													},
													"sink": {
														"name": "post_prop58",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 511
													},
													"sink": {
														"name": "post_prop59",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 512
													},
													"sink": {
														"name": "post_prop60",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 513
													},
													"sink": {
														"name": "post_prop61",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 514
													},
													"sink": {
														"name": "post_prop62",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 515
													},
													"sink": {
														"name": "post_prop63",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 516
													},
													"sink": {
														"name": "post_prop64",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 517
													},
													"sink": {
														"name": "post_prop65",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 518
													},
													"sink": {
														"name": "post_prop66",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 519
													},
													"sink": {
														"name": "post_prop67",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 520
													},
													"sink": {
														"name": "post_prop68",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 521
													},
													"sink": {
														"name": "post_prop69",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 522
													},
													"sink": {
														"name": "post_prop70",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 523
													},
													"sink": {
														"name": "post_prop71",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 524
													},
													"sink": {
														"name": "post_prop72",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 525
													},
													"sink": {
														"name": "post_prop73",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 526
													},
													"sink": {
														"name": "post_prop74",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 527
													},
													"sink": {
														"name": "post_prop75",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 528
													},
													"sink": {
														"name": "post_purchaseid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 529
													},
													"sink": {
														"name": "post_referrer",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 530
													},
													"sink": {
														"name": "post_s_kwcid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 531
													},
													"sink": {
														"name": "post_search_engine",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 532
													},
													"sink": {
														"name": "post_socialaccountandappids",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 533
													},
													"sink": {
														"name": "post_socialassettrackingcode",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 534
													},
													"sink": {
														"name": "post_socialauthor",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 535
													},
													"sink": {
														"name": "post_socialcontentprovider",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 536
													},
													"sink": {
														"name": "post_socialfbstories",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 537
													},
													"sink": {
														"name": "post_socialfbstorytellers",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 538
													},
													"sink": {
														"name": "post_socialinteractioncount",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 539
													},
													"sink": {
														"name": "post_socialinteractiontype",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 540
													},
													"sink": {
														"name": "post_sociallanguage",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 541
													},
													"sink": {
														"name": "post_sociallatlong",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 542
													},
													"sink": {
														"name": "post_sociallikeadds",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 543
													},
													"sink": {
														"name": "post_socialmentions",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 544
													},
													"sink": {
														"name": "post_socialowneddefinitioninsighttype",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 545
													},
													"sink": {
														"name": "post_socialowneddefinitioninsightvalue",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 546
													},
													"sink": {
														"name": "post_socialowneddefinitionmetric",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 547
													},
													"sink": {
														"name": "post_socialowneddefinitionpropertyvspost",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 548
													},
													"sink": {
														"name": "post_socialownedpostids",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 549
													},
													"sink": {
														"name": "post_socialownedpropertyid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 550
													},
													"sink": {
														"name": "post_socialownedpropertyname",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 551
													},
													"sink": {
														"name": "post_socialownedpropertypropertyvsapp",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 552
													},
													"sink": {
														"name": "post_socialpageviews",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 553
													},
													"sink": {
														"name": "post_socialpostviews",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 554
													},
													"sink": {
														"name": "post_socialpubcomments",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 555
													},
													"sink": {
														"name": "post_socialpubposts",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 556
													},
													"sink": {
														"name": "post_socialpubrecommends",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 557
													},
													"sink": {
														"name": "post_socialpubsubscribers",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 558
													},
													"sink": {
														"name": "post_socialterm",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 559
													},
													"sink": {
														"name": "post_socialtotalsentiment",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 560
													},
													"sink": {
														"name": "post_state",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 561
													},
													"sink": {
														"name": "post_survey",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 562
													},
													"sink": {
														"name": "post_t_time_info",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 563
													},
													"sink": {
														"name": "post_tnt",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 564
													},
													"sink": {
														"name": "post_tnt_action",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 565
													},
													"sink": {
														"name": "post_transactionid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 566
													},
													"sink": {
														"name": "post_user_server",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 567
													},
													"sink": {
														"name": "post_video",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 568
													},
													"sink": {
														"name": "post_videoad",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 569
													},
													"sink": {
														"name": "post_videoadinpod",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 570
													},
													"sink": {
														"name": "post_videoadlength",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 571
													},
													"sink": {
														"name": "post_videoadname",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 572
													},
													"sink": {
														"name": "post_videoadplayername",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 573
													},
													"sink": {
														"name": "post_videoadpod",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 574
													},
													"sink": {
														"name": "post_videochannel",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 575
													},
													"sink": {
														"name": "post_videochapter",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 576
													},
													"sink": {
														"name": "post_videocontenttype",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 577
													},
													"sink": {
														"name": "post_videolength",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 578
													},
													"sink": {
														"name": "post_videoname",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 579
													},
													"sink": {
														"name": "post_videoplayername",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 580
													},
													"sink": {
														"name": "post_videoqoebitrateaverageevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 581
													},
													"sink": {
														"name": "post_videoqoebitratechangecountevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 582
													},
													"sink": {
														"name": "post_videoqoebuffercountevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 583
													},
													"sink": {
														"name": "post_videoqoebuffertimeevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 584
													},
													"sink": {
														"name": "post_videoqoedroppedframecountevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 585
													},
													"sink": {
														"name": "post_videoqoeerrorcountevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 586
													},
													"sink": {
														"name": "post_videoqoetimetostartevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 587
													},
													"sink": {
														"name": "post_videosegment",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 588
													},
													"sink": {
														"name": "post_visid_high",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 589
													},
													"sink": {
														"name": "post_visid_low",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 590
													},
													"sink": {
														"name": "post_visid_type",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 591
													},
													"sink": {
														"name": "post_zip",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 592
													},
													"sink": {
														"name": "prev_page",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 593
													},
													"sink": {
														"name": "product_list",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 594
													},
													"sink": {
														"name": "product_merchandising",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 595
													},
													"sink": {
														"name": "prop1",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 596
													},
													"sink": {
														"name": "prop2",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 597
													},
													"sink": {
														"name": "prop3",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 598
													},
													"sink": {
														"name": "prop4",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 599
													},
													"sink": {
														"name": "prop5",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 600
													},
													"sink": {
														"name": "prop6",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 601
													},
													"sink": {
														"name": "prop7",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 602
													},
													"sink": {
														"name": "prop8",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 603
													},
													"sink": {
														"name": "prop9",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 604
													},
													"sink": {
														"name": "prop10",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 605
													},
													"sink": {
														"name": "prop11",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 606
													},
													"sink": {
														"name": "prop12",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 607
													},
													"sink": {
														"name": "prop13",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 608
													},
													"sink": {
														"name": "prop14",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 609
													},
													"sink": {
														"name": "prop15",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 610
													},
													"sink": {
														"name": "prop16",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 611
													},
													"sink": {
														"name": "prop17",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 612
													},
													"sink": {
														"name": "prop18",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 613
													},
													"sink": {
														"name": "prop19",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 614
													},
													"sink": {
														"name": "prop20",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 615
													},
													"sink": {
														"name": "prop21",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 616
													},
													"sink": {
														"name": "prop22",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 617
													},
													"sink": {
														"name": "prop23",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 618
													},
													"sink": {
														"name": "prop24",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 619
													},
													"sink": {
														"name": "prop25",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 620
													},
													"sink": {
														"name": "prop26",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 621
													},
													"sink": {
														"name": "prop27",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 622
													},
													"sink": {
														"name": "prop28",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 623
													},
													"sink": {
														"name": "prop29",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 624
													},
													"sink": {
														"name": "prop30",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 625
													},
													"sink": {
														"name": "prop31",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 626
													},
													"sink": {
														"name": "prop32",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 627
													},
													"sink": {
														"name": "prop33",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 628
													},
													"sink": {
														"name": "prop34",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 629
													},
													"sink": {
														"name": "prop35",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 630
													},
													"sink": {
														"name": "prop36",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 631
													},
													"sink": {
														"name": "prop37",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 632
													},
													"sink": {
														"name": "prop38",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 633
													},
													"sink": {
														"name": "prop39",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 634
													},
													"sink": {
														"name": "prop40",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 635
													},
													"sink": {
														"name": "prop41",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 636
													},
													"sink": {
														"name": "prop42",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 637
													},
													"sink": {
														"name": "prop43",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 638
													},
													"sink": {
														"name": "prop44",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 639
													},
													"sink": {
														"name": "prop45",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 640
													},
													"sink": {
														"name": "prop46",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 641
													},
													"sink": {
														"name": "prop47",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 642
													},
													"sink": {
														"name": "prop48",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 643
													},
													"sink": {
														"name": "prop49",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 644
													},
													"sink": {
														"name": "prop50",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 645
													},
													"sink": {
														"name": "prop51",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 646
													},
													"sink": {
														"name": "prop52",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 647
													},
													"sink": {
														"name": "prop53",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 648
													},
													"sink": {
														"name": "prop54",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 649
													},
													"sink": {
														"name": "prop55",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 650
													},
													"sink": {
														"name": "prop56",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 651
													},
													"sink": {
														"name": "prop57",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 652
													},
													"sink": {
														"name": "prop58",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 653
													},
													"sink": {
														"name": "prop59",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 654
													},
													"sink": {
														"name": "prop60",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 655
													},
													"sink": {
														"name": "prop61",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 656
													},
													"sink": {
														"name": "prop62",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 657
													},
													"sink": {
														"name": "prop63",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 658
													},
													"sink": {
														"name": "prop64",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 659
													},
													"sink": {
														"name": "prop65",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 660
													},
													"sink": {
														"name": "prop66",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 661
													},
													"sink": {
														"name": "prop67",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 662
													},
													"sink": {
														"name": "prop68",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 663
													},
													"sink": {
														"name": "prop69",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 664
													},
													"sink": {
														"name": "prop70",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 665
													},
													"sink": {
														"name": "prop71",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 666
													},
													"sink": {
														"name": "prop72",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 667
													},
													"sink": {
														"name": "prop73",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 668
													},
													"sink": {
														"name": "prop74",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 669
													},
													"sink": {
														"name": "prop75",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 670
													},
													"sink": {
														"name": "purchaseid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 671
													},
													"sink": {
														"name": "quarterly_visitor",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 672
													},
													"sink": {
														"name": "ref_domain",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 673
													},
													"sink": {
														"name": "ref_type",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 674
													},
													"sink": {
														"name": "referrer",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 675
													},
													"sink": {
														"name": "resolution",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 676
													},
													"sink": {
														"name": "s_kwcid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 677
													},
													"sink": {
														"name": "s_resolution",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 678
													},
													"sink": {
														"name": "sampled_hit",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 679
													},
													"sink": {
														"name": "search_engine",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 680
													},
													"sink": {
														"name": "search_page_num",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 681
													},
													"sink": {
														"name": "secondary_hit",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 682
													},
													"sink": {
														"name": "service",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 683
													},
													"sink": {
														"name": "socialaccountandappids",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 684
													},
													"sink": {
														"name": "socialassettrackingcode",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 685
													},
													"sink": {
														"name": "socialauthor",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 686
													},
													"sink": {
														"name": "socialcontentprovider",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 687
													},
													"sink": {
														"name": "socialfbstories",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 688
													},
													"sink": {
														"name": "socialfbstorytellers",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 689
													},
													"sink": {
														"name": "socialinteractioncount",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 690
													},
													"sink": {
														"name": "socialinteractiontype",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 691
													},
													"sink": {
														"name": "sociallanguage",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 692
													},
													"sink": {
														"name": "sociallatlong",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 693
													},
													"sink": {
														"name": "sociallikeadds",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 694
													},
													"sink": {
														"name": "socialmentions",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 695
													},
													"sink": {
														"name": "socialowneddefinitioninsighttype",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 696
													},
													"sink": {
														"name": "socialowneddefinitioninsightvalue",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 697
													},
													"sink": {
														"name": "socialowneddefinitionmetric",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 698
													},
													"sink": {
														"name": "socialowneddefinitionpropertyvspost",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 699
													},
													"sink": {
														"name": "socialownedpostids",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 700
													},
													"sink": {
														"name": "socialownedpropertyid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 701
													},
													"sink": {
														"name": "socialownedpropertyname",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 702
													},
													"sink": {
														"name": "socialownedpropertypropertyvsapp",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 703
													},
													"sink": {
														"name": "socialpageviews",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 704
													},
													"sink": {
														"name": "socialpostviews",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 705
													},
													"sink": {
														"name": "socialpubcomments",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 706
													},
													"sink": {
														"name": "socialpubposts",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 707
													},
													"sink": {
														"name": "socialpubrecommends",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 708
													},
													"sink": {
														"name": "socialpubsubscribers",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 709
													},
													"sink": {
														"name": "socialterm",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 710
													},
													"sink": {
														"name": "socialtotalsentiment",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 711
													},
													"sink": {
														"name": "sourceid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 712
													},
													"sink": {
														"name": "state",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 713
													},
													"sink": {
														"name": "stats_server",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 714
													},
													"sink": {
														"name": "t_time_info",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 715
													},
													"sink": {
														"name": "tnt",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 716
													},
													"sink": {
														"name": "tnt_action",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 717
													},
													"sink": {
														"name": "tnt_post_vista",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 718
													},
													"sink": {
														"name": "transactionid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 719
													},
													"sink": {
														"name": "truncated_hit",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 720
													},
													"sink": {
														"name": "ua_color",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 721
													},
													"sink": {
														"name": "ua_os",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 722
													},
													"sink": {
														"name": "ua_pixels",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 723
													},
													"sink": {
														"name": "user_agent",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 724
													},
													"sink": {
														"name": "user_hash",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 725
													},
													"sink": {
														"name": "user_server",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 726
													},
													"sink": {
														"name": "userid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 727
													},
													"sink": {
														"name": "username",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 728
													},
													"sink": {
														"name": "va_closer_detail",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 729
													},
													"sink": {
														"name": "va_closer_id",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 730
													},
													"sink": {
														"name": "va_finder_detail",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 731
													},
													"sink": {
														"name": "va_finder_id",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 732
													},
													"sink": {
														"name": "va_instance_event",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 733
													},
													"sink": {
														"name": "va_new_engagement",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 734
													},
													"sink": {
														"name": "video",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 735
													},
													"sink": {
														"name": "videoad",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 736
													},
													"sink": {
														"name": "videoadinpod",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 737
													},
													"sink": {
														"name": "videoadlength",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 738
													},
													"sink": {
														"name": "videoadname",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 739
													},
													"sink": {
														"name": "videoadplayername",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 740
													},
													"sink": {
														"name": "videoadpod",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 741
													},
													"sink": {
														"name": "videochannel",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 742
													},
													"sink": {
														"name": "videochapter",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 743
													},
													"sink": {
														"name": "videocontenttype",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 744
													},
													"sink": {
														"name": "videolength",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 745
													},
													"sink": {
														"name": "videoname",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 746
													},
													"sink": {
														"name": "videoplayername",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 747
													},
													"sink": {
														"name": "videoqoebitrateaverageevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 748
													},
													"sink": {
														"name": "videoqoebitratechangecountevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 749
													},
													"sink": {
														"name": "videoqoebuffercountevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 750
													},
													"sink": {
														"name": "videoqoebuffertimeevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 751
													},
													"sink": {
														"name": "videoqoedroppedframecountevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 752
													},
													"sink": {
														"name": "videoqoeerrorcountevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 753
													},
													"sink": {
														"name": "videoqoetimetostartevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 754
													},
													"sink": {
														"name": "videosegment",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 755
													},
													"sink": {
														"name": "visid_high",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 756
													},
													"sink": {
														"name": "visid_low",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 757
													},
													"sink": {
														"name": "visid_new",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 758
													},
													"sink": {
														"name": "visid_timestamp",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 759
													},
													"sink": {
														"name": "visid_type",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 760
													},
													"sink": {
														"name": "visit_keywords",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 761
													},
													"sink": {
														"name": "visit_num",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 762
													},
													"sink": {
														"name": "visit_page_num",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 763
													},
													"sink": {
														"name": "visit_referrer",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 764
													},
													"sink": {
														"name": "visit_search_engine",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 765
													},
													"sink": {
														"name": "visit_start_page_url",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 766
													},
													"sink": {
														"name": "visit_start_pagename",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 767
													},
													"sink": {
														"name": "visit_start_time_gmt",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 768
													},
													"sink": {
														"name": "weekly_visitor",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 769
													},
													"sink": {
														"name": "yearly_visitor",
														"type": "String",
														"physicalType": "nvarchar"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "AnalyticsDatafeed",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SQLTableQ",
											"type": "DatasetReference",
											"parameters": {
												"tablename": "RawAnalytics",
												"schemaname": "hco"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"filename": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "HCO"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AnalyticsDatafeed')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_RawAnalyticsData_full')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Filter tsv",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name, '.tsv.gz')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "filename",
							"value": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AnalyticsDatafeed",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"modifiedDatetimeStart": {
									"value": "2020-11-03T00:00:00.00Z\n",
									"type": "Expression"
								},
								"modifiedDatetimeEnd": {
									"value": "2022-11-03T00:00:00.00Z\n",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter tsv",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter tsv').output.Value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "LoadAnalytics",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": "adobe-analytics--datafeed/prod",
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"parallelCopies": 15,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"type": "String",
														"ordinal": 1
													},
													"sink": {
														"name": "accept_language",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 2
													},
													"sink": {
														"name": "browser",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 3
													},
													"sink": {
														"name": "browser_height",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 4
													},
													"sink": {
														"name": "browser_width",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 5
													},
													"sink": {
														"name": "c_color",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 6
													},
													"sink": {
														"name": "campaign",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 7
													},
													"sink": {
														"name": "carrier",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 8
													},
													"sink": {
														"name": "channel",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 9
													},
													"sink": {
														"name": "click_action",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 10
													},
													"sink": {
														"name": "click_action_type",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 11
													},
													"sink": {
														"name": "click_context",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 12
													},
													"sink": {
														"name": "click_context_type",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 13
													},
													"sink": {
														"name": "click_sourceid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 14
													},
													"sink": {
														"name": "click_tag",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 15
													},
													"sink": {
														"name": "clickmaplink",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 16
													},
													"sink": {
														"name": "clickmaplinkbyregion",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 17
													},
													"sink": {
														"name": "clickmappage",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 18
													},
													"sink": {
														"name": "clickmapregion",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 19
													},
													"sink": {
														"name": "code_ver",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 20
													},
													"sink": {
														"name": "color",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 21
													},
													"sink": {
														"name": "connection_type",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 22
													},
													"sink": {
														"name": "cookies",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 23
													},
													"sink": {
														"name": "country",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 24
													},
													"sink": {
														"name": "ct_connect_type",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 25
													},
													"sink": {
														"name": "curr_factor",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 26
													},
													"sink": {
														"name": "curr_rate",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 27
													},
													"sink": {
														"name": "currency",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 28
													},
													"sink": {
														"name": "cust_hit_time_gmt",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 29
													},
													"sink": {
														"name": "cust_visid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 30
													},
													"sink": {
														"name": "daily_visitor",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 31
													},
													"sink": {
														"name": "date_time",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 32
													},
													"sink": {
														"name": "domain",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 33
													},
													"sink": {
														"name": "duplicate_events",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 34
													},
													"sink": {
														"name": "duplicate_purchase",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 35
													},
													"sink": {
														"name": "duplicated_from",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 36
													},
													"sink": {
														"name": "ef_id",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 37
													},
													"sink": {
														"name": "evar1",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 38
													},
													"sink": {
														"name": "evar2",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 39
													},
													"sink": {
														"name": "evar3",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 40
													},
													"sink": {
														"name": "evar4",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 41
													},
													"sink": {
														"name": "evar5",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 42
													},
													"sink": {
														"name": "evar6",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 43
													},
													"sink": {
														"name": "evar7",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 44
													},
													"sink": {
														"name": "evar8",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 45
													},
													"sink": {
														"name": "evar9",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 46
													},
													"sink": {
														"name": "evar10",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 47
													},
													"sink": {
														"name": "evar11",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 48
													},
													"sink": {
														"name": "evar12",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 49
													},
													"sink": {
														"name": "evar13",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 50
													},
													"sink": {
														"name": "evar14",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 51
													},
													"sink": {
														"name": "evar15",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 52
													},
													"sink": {
														"name": "evar16",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 53
													},
													"sink": {
														"name": "evar17",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 54
													},
													"sink": {
														"name": "evar18",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 55
													},
													"sink": {
														"name": "evar19",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 56
													},
													"sink": {
														"name": "evar20",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 57
													},
													"sink": {
														"name": "evar21",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 58
													},
													"sink": {
														"name": "evar22",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 59
													},
													"sink": {
														"name": "evar23",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 60
													},
													"sink": {
														"name": "evar24",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 61
													},
													"sink": {
														"name": "evar25",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 62
													},
													"sink": {
														"name": "evar26",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 63
													},
													"sink": {
														"name": "evar27",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 64
													},
													"sink": {
														"name": "evar28",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 65
													},
													"sink": {
														"name": "evar29",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 66
													},
													"sink": {
														"name": "evar30",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 67
													},
													"sink": {
														"name": "evar31",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 68
													},
													"sink": {
														"name": "evar32",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 69
													},
													"sink": {
														"name": "evar33",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 70
													},
													"sink": {
														"name": "evar34",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 71
													},
													"sink": {
														"name": "evar35",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 72
													},
													"sink": {
														"name": "evar36",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 73
													},
													"sink": {
														"name": "evar37",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 74
													},
													"sink": {
														"name": "evar38",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 75
													},
													"sink": {
														"name": "evar39",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 76
													},
													"sink": {
														"name": "evar40",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 77
													},
													"sink": {
														"name": "evar41",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 78
													},
													"sink": {
														"name": "evar42",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 79
													},
													"sink": {
														"name": "evar43",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 80
													},
													"sink": {
														"name": "evar44",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 81
													},
													"sink": {
														"name": "evar45",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 82
													},
													"sink": {
														"name": "evar46",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 83
													},
													"sink": {
														"name": "evar47",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 84
													},
													"sink": {
														"name": "evar48",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 85
													},
													"sink": {
														"name": "evar49",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 86
													},
													"sink": {
														"name": "evar50",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 87
													},
													"sink": {
														"name": "evar51",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 88
													},
													"sink": {
														"name": "evar52",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 89
													},
													"sink": {
														"name": "evar53",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 90
													},
													"sink": {
														"name": "evar54",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 91
													},
													"sink": {
														"name": "evar55",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 92
													},
													"sink": {
														"name": "evar56",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 93
													},
													"sink": {
														"name": "evar57",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 94
													},
													"sink": {
														"name": "evar58",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 95
													},
													"sink": {
														"name": "evar59",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 96
													},
													"sink": {
														"name": "evar60",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 97
													},
													"sink": {
														"name": "evar61",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 98
													},
													"sink": {
														"name": "evar62",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 99
													},
													"sink": {
														"name": "evar63",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 100
													},
													"sink": {
														"name": "evar64",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 101
													},
													"sink": {
														"name": "evar65",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 102
													},
													"sink": {
														"name": "evar66",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 103
													},
													"sink": {
														"name": "evar67",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 104
													},
													"sink": {
														"name": "evar68",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 105
													},
													"sink": {
														"name": "evar69",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 106
													},
													"sink": {
														"name": "evar70",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 107
													},
													"sink": {
														"name": "evar71",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 108
													},
													"sink": {
														"name": "evar72",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 109
													},
													"sink": {
														"name": "evar73",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 110
													},
													"sink": {
														"name": "evar74",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 111
													},
													"sink": {
														"name": "evar75",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 112
													},
													"sink": {
														"name": "evar76",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 113
													},
													"sink": {
														"name": "evar77",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 114
													},
													"sink": {
														"name": "evar78",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 115
													},
													"sink": {
														"name": "evar79",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 116
													},
													"sink": {
														"name": "evar80",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 117
													},
													"sink": {
														"name": "evar81",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 118
													},
													"sink": {
														"name": "evar82",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 119
													},
													"sink": {
														"name": "evar83",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 120
													},
													"sink": {
														"name": "evar84",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 121
													},
													"sink": {
														"name": "evar85",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 122
													},
													"sink": {
														"name": "evar86",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 123
													},
													"sink": {
														"name": "evar87",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 124
													},
													"sink": {
														"name": "evar88",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 125
													},
													"sink": {
														"name": "evar89",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 126
													},
													"sink": {
														"name": "evar90",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 127
													},
													"sink": {
														"name": "evar91",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 128
													},
													"sink": {
														"name": "evar92",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 129
													},
													"sink": {
														"name": "evar93",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 130
													},
													"sink": {
														"name": "evar94",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 131
													},
													"sink": {
														"name": "evar95",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 132
													},
													"sink": {
														"name": "evar96",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 133
													},
													"sink": {
														"name": "evar97",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 134
													},
													"sink": {
														"name": "evar98",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 135
													},
													"sink": {
														"name": "evar99",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 136
													},
													"sink": {
														"name": "evar100",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 137
													},
													"sink": {
														"name": "event_list",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 138
													},
													"sink": {
														"name": "exclude_hit",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 139
													},
													"sink": {
														"name": "first_hit_page_url",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 140
													},
													"sink": {
														"name": "first_hit_pagename",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 141
													},
													"sink": {
														"name": "first_hit_referrer",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 142
													},
													"sink": {
														"name": "first_hit_time_gmt",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 143
													},
													"sink": {
														"name": "geo_city",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 144
													},
													"sink": {
														"name": "geo_country",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 145
													},
													"sink": {
														"name": "geo_dma",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 146
													},
													"sink": {
														"name": "geo_region",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 147
													},
													"sink": {
														"name": "geo_zip",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 148
													},
													"sink": {
														"name": "hier1",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 149
													},
													"sink": {
														"name": "hier2",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 150
													},
													"sink": {
														"name": "hier3",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 151
													},
													"sink": {
														"name": "hier4",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 152
													},
													"sink": {
														"name": "hier5",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 153
													},
													"sink": {
														"name": "hit_source",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 154
													},
													"sink": {
														"name": "hit_time_gmt",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 155
													},
													"sink": {
														"name": "hitid_high",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 156
													},
													"sink": {
														"name": "hitid_low",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 157
													},
													"sink": {
														"name": "homepage",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 158
													},
													"sink": {
														"name": "hourly_visitor",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 159
													},
													"sink": {
														"name": "ip",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 160
													},
													"sink": {
														"name": "ip2",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 161
													},
													"sink": {
														"name": "j_jscript",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 162
													},
													"sink": {
														"name": "java_enabled",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 163
													},
													"sink": {
														"name": "javascript",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 164
													},
													"sink": {
														"name": "language",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 165
													},
													"sink": {
														"name": "last_hit_time_gmt",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 166
													},
													"sink": {
														"name": "last_purchase_num",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 167
													},
													"sink": {
														"name": "last_purchase_time_gmt",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 168
													},
													"sink": {
														"name": "latlon1",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 169
													},
													"sink": {
														"name": "latlon23",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 170
													},
													"sink": {
														"name": "latlon45",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 171
													},
													"sink": {
														"name": "mc_audiences",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 172
													},
													"sink": {
														"name": "mcvisid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 173
													},
													"sink": {
														"name": "mobile_id",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 174
													},
													"sink": {
														"name": "mobileacquisitionclicks",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 175
													},
													"sink": {
														"name": "mobileaction",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 176
													},
													"sink": {
														"name": "mobileactioninapptime",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 177
													},
													"sink": {
														"name": "mobileactiontotaltime",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 178
													},
													"sink": {
														"name": "mobileappid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 179
													},
													"sink": {
														"name": "mobileappperformanceaffectedusers",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 180
													},
													"sink": {
														"name": "mobileappperformanceappid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 181
													},
													"sink": {
														"name": "mobileappperformanceappid.app-perf-app-name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 182
													},
													"sink": {
														"name": "mobileappperformanceappid.app-perf-platform",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 183
													},
													"sink": {
														"name": "mobileappperformancecrashes",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 184
													},
													"sink": {
														"name": "mobileappperformancecrashid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 185
													},
													"sink": {
														"name": "mobileappperformancecrashid.app-perf-crash-name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 186
													},
													"sink": {
														"name": "mobileappperformanceloads",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 187
													},
													"sink": {
														"name": "mobileappstoreavgrating",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 188
													},
													"sink": {
														"name": "mobileappstoredownloads",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 189
													},
													"sink": {
														"name": "mobileappstoreinapprevenue",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 190
													},
													"sink": {
														"name": "mobileappstoreinapproyalties",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 191
													},
													"sink": {
														"name": "mobileappstoreobjectid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 192
													},
													"sink": {
														"name": "mobileappstoreobjectid.app-store-user",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 193
													},
													"sink": {
														"name": "mobileappstoreobjectid.application-name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 194
													},
													"sink": {
														"name": "mobileappstoreobjectid.application-version",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 195
													},
													"sink": {
														"name": "mobileappstoreobjectid.appstore-name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 196
													},
													"sink": {
														"name": "mobileappstoreobjectid.category-name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 197
													},
													"sink": {
														"name": "mobileappstoreobjectid.country-name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 198
													},
													"sink": {
														"name": "mobileappstoreobjectid.device-manufacturer",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 199
													},
													"sink": {
														"name": "mobileappstoreobjectid.device-name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 200
													},
													"sink": {
														"name": "mobileappstoreobjectid.in-app-name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 201
													},
													"sink": {
														"name": "mobileappstoreobjectid.platform-name-version",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 202
													},
													"sink": {
														"name": "mobileappstoreobjectid.rank-category-type",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 203
													},
													"sink": {
														"name": "mobileappstoreobjectid.region-name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 204
													},
													"sink": {
														"name": "mobileappstoreobjectid.review-comment",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 205
													},
													"sink": {
														"name": "mobileappstoreobjectid.review-title",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 206
													},
													"sink": {
														"name": "mobileappstoreoneoffrevenue",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 207
													},
													"sink": {
														"name": "mobileappstoreoneoffroyalties",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 208
													},
													"sink": {
														"name": "mobileappstorepurchases",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 209
													},
													"sink": {
														"name": "mobileappstorerank",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 210
													},
													"sink": {
														"name": "mobileappstorerankdivisor",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 211
													},
													"sink": {
														"name": "mobileappstorerating",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 212
													},
													"sink": {
														"name": "mobileappstoreratingdivisor",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 213
													},
													"sink": {
														"name": "mobileavgprevsessionlength",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 214
													},
													"sink": {
														"name": "mobilebeaconmajor",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 215
													},
													"sink": {
														"name": "mobilebeaconminor",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 216
													},
													"sink": {
														"name": "mobilebeaconproximity",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 217
													},
													"sink": {
														"name": "mobilebeaconuuid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 218
													},
													"sink": {
														"name": "mobilecampaigncontent",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 219
													},
													"sink": {
														"name": "mobilecampaignmedium",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 220
													},
													"sink": {
														"name": "mobilecampaignname",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 221
													},
													"sink": {
														"name": "mobilecampaignsource",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 222
													},
													"sink": {
														"name": "mobilecampaignterm",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 223
													},
													"sink": {
														"name": "mobilecrashes",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 224
													},
													"sink": {
														"name": "mobilecrashrate",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 225
													},
													"sink": {
														"name": "mobiledailyengagedusers",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 226
													},
													"sink": {
														"name": "mobiledayofweek",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 227
													},
													"sink": {
														"name": "mobiledayssincefirstuse",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 228
													},
													"sink": {
														"name": "mobiledayssincelastupgrade",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 229
													},
													"sink": {
														"name": "mobiledayssincelastuse",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 230
													},
													"sink": {
														"name": "mobiledeeplinkid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 231
													},
													"sink": {
														"name": "mobiledeeplinkid.name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 232
													},
													"sink": {
														"name": "mobiledevice",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 233
													},
													"sink": {
														"name": "mobilehourofday",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 234
													},
													"sink": {
														"name": "mobileinstalldate",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 235
													},
													"sink": {
														"name": "mobileinstalls",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 236
													},
													"sink": {
														"name": "mobilelaunches",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 237
													},
													"sink": {
														"name": "mobilelaunchessincelastupgrade",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 238
													},
													"sink": {
														"name": "mobilelaunchnumber",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 239
													},
													"sink": {
														"name": "mobileltv",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 240
													},
													"sink": {
														"name": "mobileltvtotal",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 241
													},
													"sink": {
														"name": "mobilemessagebuttonname",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 242
													},
													"sink": {
														"name": "mobilemessageclicks",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 243
													},
													"sink": {
														"name": "mobilemessageid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 244
													},
													"sink": {
														"name": "mobilemessageid.dest",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 245
													},
													"sink": {
														"name": "mobilemessageid.name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 246
													},
													"sink": {
														"name": "mobilemessageid.type",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 247
													},
													"sink": {
														"name": "mobilemessageimpressions",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 248
													},
													"sink": {
														"name": "mobilemessageonline",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 249
													},
													"sink": {
														"name": "mobilemessagepushoptin",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 250
													},
													"sink": {
														"name": "mobilemessagepushpayloadid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 251
													},
													"sink": {
														"name": "mobilemessagepushpayloadid.name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 252
													},
													"sink": {
														"name": "mobilemessageviews",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 253
													},
													"sink": {
														"name": "mobilemonthlyengagedusers",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 254
													},
													"sink": {
														"name": "mobileosenvironment",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 255
													},
													"sink": {
														"name": "mobileosversion",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 256
													},
													"sink": {
														"name": "mobileplaceaccuracy",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 257
													},
													"sink": {
														"name": "mobileplacecategory",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 258
													},
													"sink": {
														"name": "mobileplacedwelltime",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 259
													},
													"sink": {
														"name": "mobileplaceentry",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 260
													},
													"sink": {
														"name": "mobileplaceexit",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 261
													},
													"sink": {
														"name": "mobileplaceid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 262
													},
													"sink": {
														"name": "mobileprevsessionlength",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 263
													},
													"sink": {
														"name": "mobilepushoptin",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 264
													},
													"sink": {
														"name": "mobilepushpayloadid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 265
													},
													"sink": {
														"name": "mobilerelaunchcampaigncontent",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 266
													},
													"sink": {
														"name": "mobilerelaunchcampaignmedium",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 267
													},
													"sink": {
														"name": "mobilerelaunchcampaignsource",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 268
													},
													"sink": {
														"name": "mobilerelaunchcampaignterm",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 269
													},
													"sink": {
														"name": "mobilerelaunchcampaigntrackingcode",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 270
													},
													"sink": {
														"name": "mobilerelaunchcampaigntrackingcode.name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 271
													},
													"sink": {
														"name": "mobileresolution",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 272
													},
													"sink": {
														"name": "mobileupgrades",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 273
													},
													"sink": {
														"name": "monthly_visitor",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 274
													},
													"sink": {
														"name": "mvvar1",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 275
													},
													"sink": {
														"name": "mvvar2",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 276
													},
													"sink": {
														"name": "mvvar3",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 277
													},
													"sink": {
														"name": "namespace",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 278
													},
													"sink": {
														"name": "new_visit",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 279
													},
													"sink": {
														"name": "os",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 280
													},
													"sink": {
														"name": "p_plugins",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 281
													},
													"sink": {
														"name": "page_event",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 282
													},
													"sink": {
														"name": "page_event_var1",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 283
													},
													"sink": {
														"name": "page_event_var2",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 284
													},
													"sink": {
														"name": "page_event_var3",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 285
													},
													"sink": {
														"name": "page_type",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 286
													},
													"sink": {
														"name": "page_url",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 287
													},
													"sink": {
														"name": "pagename",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 288
													},
													"sink": {
														"name": "paid_search",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 289
													},
													"sink": {
														"name": "partner_plugins",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 290
													},
													"sink": {
														"name": "persistent_cookie",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 291
													},
													"sink": {
														"name": "plugins",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 292
													},
													"sink": {
														"name": "pointofinterest",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 293
													},
													"sink": {
														"name": "pointofinterestdistance",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 294
													},
													"sink": {
														"name": "post_browser_height",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 295
													},
													"sink": {
														"name": "post_browser_width",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 296
													},
													"sink": {
														"name": "post_campaign",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 297
													},
													"sink": {
														"name": "post_channel",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 298
													},
													"sink": {
														"name": "post_clickmaplink",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 299
													},
													"sink": {
														"name": "post_clickmaplinkbyregion",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 300
													},
													"sink": {
														"name": "post_clickmappage",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 301
													},
													"sink": {
														"name": "post_clickmapregion",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 302
													},
													"sink": {
														"name": "post_cookies",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 303
													},
													"sink": {
														"name": "post_currency",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 304
													},
													"sink": {
														"name": "post_cust_hit_time_gmt",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 305
													},
													"sink": {
														"name": "post_cust_visid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 306
													},
													"sink": {
														"name": "post_ef_id",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 307
													},
													"sink": {
														"name": "post_evar1",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 308
													},
													"sink": {
														"name": "post_evar2",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 309
													},
													"sink": {
														"name": "post_evar3",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 310
													},
													"sink": {
														"name": "post_evar4",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 311
													},
													"sink": {
														"name": "post_evar5",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 312
													},
													"sink": {
														"name": "post_evar6",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 313
													},
													"sink": {
														"name": "post_evar7",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 314
													},
													"sink": {
														"name": "post_evar8",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 315
													},
													"sink": {
														"name": "post_evar9",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 316
													},
													"sink": {
														"name": "post_evar10",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 317
													},
													"sink": {
														"name": "post_evar11",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 318
													},
													"sink": {
														"name": "post_evar12",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 319
													},
													"sink": {
														"name": "post_evar13",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 320
													},
													"sink": {
														"name": "post_evar14",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 321
													},
													"sink": {
														"name": "post_evar15",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 322
													},
													"sink": {
														"name": "post_evar16",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 323
													},
													"sink": {
														"name": "post_evar17",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 324
													},
													"sink": {
														"name": "post_evar18",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 325
													},
													"sink": {
														"name": "post_evar19",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 326
													},
													"sink": {
														"name": "post_evar20",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 327
													},
													"sink": {
														"name": "post_evar21",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 328
													},
													"sink": {
														"name": "post_evar22",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 329
													},
													"sink": {
														"name": "post_evar23",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 330
													},
													"sink": {
														"name": "post_evar24",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 331
													},
													"sink": {
														"name": "post_evar25",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 332
													},
													"sink": {
														"name": "post_evar26",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 333
													},
													"sink": {
														"name": "post_evar27",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 334
													},
													"sink": {
														"name": "post_evar28",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 335
													},
													"sink": {
														"name": "post_evar29",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 336
													},
													"sink": {
														"name": "post_evar30",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 337
													},
													"sink": {
														"name": "post_evar31",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 338
													},
													"sink": {
														"name": "post_evar32",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 339
													},
													"sink": {
														"name": "post_evar33",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 340
													},
													"sink": {
														"name": "post_evar34",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 341
													},
													"sink": {
														"name": "post_evar35",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 342
													},
													"sink": {
														"name": "post_evar36",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 343
													},
													"sink": {
														"name": "post_evar37",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 344
													},
													"sink": {
														"name": "post_evar38",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 345
													},
													"sink": {
														"name": "post_evar39",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 346
													},
													"sink": {
														"name": "post_evar40",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 347
													},
													"sink": {
														"name": "post_evar41",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 348
													},
													"sink": {
														"name": "post_evar42",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 349
													},
													"sink": {
														"name": "post_evar43",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 350
													},
													"sink": {
														"name": "post_evar44",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 351
													},
													"sink": {
														"name": "post_evar45",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 352
													},
													"sink": {
														"name": "post_evar46",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 353
													},
													"sink": {
														"name": "post_evar47",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 354
													},
													"sink": {
														"name": "post_evar48",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 355
													},
													"sink": {
														"name": "post_evar49",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 356
													},
													"sink": {
														"name": "post_evar50",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 357
													},
													"sink": {
														"name": "post_evar51",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 358
													},
													"sink": {
														"name": "post_evar52",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 359
													},
													"sink": {
														"name": "post_evar53",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 360
													},
													"sink": {
														"name": "post_evar54",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 361
													},
													"sink": {
														"name": "post_evar55",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 362
													},
													"sink": {
														"name": "post_evar56",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 363
													},
													"sink": {
														"name": "post_evar57",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 364
													},
													"sink": {
														"name": "post_evar58",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 365
													},
													"sink": {
														"name": "post_evar59",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 366
													},
													"sink": {
														"name": "post_evar60",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 367
													},
													"sink": {
														"name": "post_evar61",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 368
													},
													"sink": {
														"name": "post_evar62",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 369
													},
													"sink": {
														"name": "post_evar63",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 370
													},
													"sink": {
														"name": "post_evar64",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 371
													},
													"sink": {
														"name": "post_evar65",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 372
													},
													"sink": {
														"name": "post_evar66",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 373
													},
													"sink": {
														"name": "post_evar67",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 374
													},
													"sink": {
														"name": "post_evar68",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 375
													},
													"sink": {
														"name": "post_evar69",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 376
													},
													"sink": {
														"name": "post_evar70",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 377
													},
													"sink": {
														"name": "post_evar71",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 378
													},
													"sink": {
														"name": "post_evar72",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 379
													},
													"sink": {
														"name": "post_evar73",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 380
													},
													"sink": {
														"name": "post_evar74",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 381
													},
													"sink": {
														"name": "post_evar75",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 382
													},
													"sink": {
														"name": "post_evar76",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 383
													},
													"sink": {
														"name": "post_evar77",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 384
													},
													"sink": {
														"name": "post_evar78",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 385
													},
													"sink": {
														"name": "post_evar79",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 386
													},
													"sink": {
														"name": "post_evar80",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 387
													},
													"sink": {
														"name": "post_evar81",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 388
													},
													"sink": {
														"name": "post_evar82",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 389
													},
													"sink": {
														"name": "post_evar83",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 390
													},
													"sink": {
														"name": "post_evar84",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 391
													},
													"sink": {
														"name": "post_evar85",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 392
													},
													"sink": {
														"name": "post_evar86",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 393
													},
													"sink": {
														"name": "post_evar87",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 394
													},
													"sink": {
														"name": "post_evar88",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 395
													},
													"sink": {
														"name": "post_evar89",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 396
													},
													"sink": {
														"name": "post_evar90",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 397
													},
													"sink": {
														"name": "post_evar91",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 398
													},
													"sink": {
														"name": "post_evar92",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 399
													},
													"sink": {
														"name": "post_evar93",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 400
													},
													"sink": {
														"name": "post_evar94",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 401
													},
													"sink": {
														"name": "post_evar95",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 402
													},
													"sink": {
														"name": "post_evar96",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 403
													},
													"sink": {
														"name": "post_evar97",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 404
													},
													"sink": {
														"name": "post_evar98",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 405
													},
													"sink": {
														"name": "post_evar99",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 406
													},
													"sink": {
														"name": "post_evar100",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 407
													},
													"sink": {
														"name": "post_event_list",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 408
													},
													"sink": {
														"name": "post_hier1",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 409
													},
													"sink": {
														"name": "post_hier2",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 410
													},
													"sink": {
														"name": "post_hier3",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 411
													},
													"sink": {
														"name": "post_hier4",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 412
													},
													"sink": {
														"name": "post_hier5",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 413
													},
													"sink": {
														"name": "post_java_enabled",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 414
													},
													"sink": {
														"name": "post_keywords",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 415
													},
													"sink": {
														"name": "post_mc_audiences",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 416
													},
													"sink": {
														"name": "post_mobileaction",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 417
													},
													"sink": {
														"name": "post_mobileappid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 418
													},
													"sink": {
														"name": "post_mobilecampaigncontent",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 419
													},
													"sink": {
														"name": "post_mobilecampaignmedium",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 420
													},
													"sink": {
														"name": "post_mobilecampaignname",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 421
													},
													"sink": {
														"name": "post_mobilecampaignsource",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 422
													},
													"sink": {
														"name": "post_mobilecampaignterm",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 423
													},
													"sink": {
														"name": "post_mobiledayofweek",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 424
													},
													"sink": {
														"name": "post_mobiledayssincefirstuse",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 425
													},
													"sink": {
														"name": "post_mobiledayssincelastuse",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 426
													},
													"sink": {
														"name": "post_mobiledevice",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 427
													},
													"sink": {
														"name": "post_mobilehourofday",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 428
													},
													"sink": {
														"name": "post_mobileinstalldate",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 429
													},
													"sink": {
														"name": "post_mobilelaunchnumber",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 430
													},
													"sink": {
														"name": "post_mobileltv",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 431
													},
													"sink": {
														"name": "post_mobilemessageid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 432
													},
													"sink": {
														"name": "post_mobilemessageonline",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 433
													},
													"sink": {
														"name": "post_mobileosversion",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 434
													},
													"sink": {
														"name": "post_mobilepushoptin",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 435
													},
													"sink": {
														"name": "post_mobilepushpayloadid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 436
													},
													"sink": {
														"name": "post_mobileresolution",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 437
													},
													"sink": {
														"name": "post_mvvar1",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 438
													},
													"sink": {
														"name": "post_mvvar2",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 439
													},
													"sink": {
														"name": "post_mvvar3",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 440
													},
													"sink": {
														"name": "post_page_event",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 441
													},
													"sink": {
														"name": "post_page_event_var1",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 442
													},
													"sink": {
														"name": "post_page_event_var2",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 443
													},
													"sink": {
														"name": "post_page_event_var3",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 444
													},
													"sink": {
														"name": "post_page_type",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 445
													},
													"sink": {
														"name": "post_page_url",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 446
													},
													"sink": {
														"name": "post_pagename",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 447
													},
													"sink": {
														"name": "post_pagename_no_url",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 448
													},
													"sink": {
														"name": "post_partner_plugins",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 449
													},
													"sink": {
														"name": "post_persistent_cookie",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 450
													},
													"sink": {
														"name": "post_pointofinterest",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 451
													},
													"sink": {
														"name": "post_pointofinterestdistance",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 452
													},
													"sink": {
														"name": "post_product_list",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 453
													},
													"sink": {
														"name": "post_prop1",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 454
													},
													"sink": {
														"name": "post_prop2",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 455
													},
													"sink": {
														"name": "post_prop3",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 456
													},
													"sink": {
														"name": "post_prop4",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 457
													},
													"sink": {
														"name": "post_prop5",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 458
													},
													"sink": {
														"name": "post_prop6",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 459
													},
													"sink": {
														"name": "post_prop7",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 460
													},
													"sink": {
														"name": "post_prop8",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 461
													},
													"sink": {
														"name": "post_prop9",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 462
													},
													"sink": {
														"name": "post_prop10",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 463
													},
													"sink": {
														"name": "post_prop11",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 464
													},
													"sink": {
														"name": "post_prop12",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 465
													},
													"sink": {
														"name": "post_prop13",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 466
													},
													"sink": {
														"name": "post_prop14",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 467
													},
													"sink": {
														"name": "post_prop15",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 468
													},
													"sink": {
														"name": "post_prop16",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 469
													},
													"sink": {
														"name": "post_prop17",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 470
													},
													"sink": {
														"name": "post_prop18",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 471
													},
													"sink": {
														"name": "post_prop19",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 472
													},
													"sink": {
														"name": "post_prop20",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 473
													},
													"sink": {
														"name": "post_prop21",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 474
													},
													"sink": {
														"name": "post_prop22",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 475
													},
													"sink": {
														"name": "post_prop23",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 476
													},
													"sink": {
														"name": "post_prop24",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 477
													},
													"sink": {
														"name": "post_prop25",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 478
													},
													"sink": {
														"name": "post_prop26",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 479
													},
													"sink": {
														"name": "post_prop27",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 480
													},
													"sink": {
														"name": "post_prop28",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 481
													},
													"sink": {
														"name": "post_prop29",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 482
													},
													"sink": {
														"name": "post_prop30",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 483
													},
													"sink": {
														"name": "post_prop31",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 484
													},
													"sink": {
														"name": "post_prop32",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 485
													},
													"sink": {
														"name": "post_prop33",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 486
													},
													"sink": {
														"name": "post_prop34",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 487
													},
													"sink": {
														"name": "post_prop35",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 488
													},
													"sink": {
														"name": "post_prop36",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 489
													},
													"sink": {
														"name": "post_prop37",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 490
													},
													"sink": {
														"name": "post_prop38",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 491
													},
													"sink": {
														"name": "post_prop39",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 492
													},
													"sink": {
														"name": "post_prop40",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 493
													},
													"sink": {
														"name": "post_prop41",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 494
													},
													"sink": {
														"name": "post_prop42",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 495
													},
													"sink": {
														"name": "post_prop43",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 496
													},
													"sink": {
														"name": "post_prop44",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 497
													},
													"sink": {
														"name": "post_prop45",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 498
													},
													"sink": {
														"name": "post_prop46",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 499
													},
													"sink": {
														"name": "post_prop47",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 500
													},
													"sink": {
														"name": "post_prop48",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 501
													},
													"sink": {
														"name": "post_prop49",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 502
													},
													"sink": {
														"name": "post_prop50",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 503
													},
													"sink": {
														"name": "post_prop51",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 504
													},
													"sink": {
														"name": "post_prop52",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 505
													},
													"sink": {
														"name": "post_prop53",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 506
													},
													"sink": {
														"name": "post_prop54",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 507
													},
													"sink": {
														"name": "post_prop55",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 508
													},
													"sink": {
														"name": "post_prop56",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 509
													},
													"sink": {
														"name": "post_prop57",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 510
													},
													"sink": {
														"name": "post_prop58",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 511
													},
													"sink": {
														"name": "post_prop59",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 512
													},
													"sink": {
														"name": "post_prop60",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 513
													},
													"sink": {
														"name": "post_prop61",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 514
													},
													"sink": {
														"name": "post_prop62",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 515
													},
													"sink": {
														"name": "post_prop63",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 516
													},
													"sink": {
														"name": "post_prop64",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 517
													},
													"sink": {
														"name": "post_prop65",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 518
													},
													"sink": {
														"name": "post_prop66",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 519
													},
													"sink": {
														"name": "post_prop67",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 520
													},
													"sink": {
														"name": "post_prop68",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 521
													},
													"sink": {
														"name": "post_prop69",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 522
													},
													"sink": {
														"name": "post_prop70",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 523
													},
													"sink": {
														"name": "post_prop71",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 524
													},
													"sink": {
														"name": "post_prop72",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 525
													},
													"sink": {
														"name": "post_prop73",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 526
													},
													"sink": {
														"name": "post_prop74",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 527
													},
													"sink": {
														"name": "post_prop75",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 528
													},
													"sink": {
														"name": "post_purchaseid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 529
													},
													"sink": {
														"name": "post_referrer",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 530
													},
													"sink": {
														"name": "post_s_kwcid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 531
													},
													"sink": {
														"name": "post_search_engine",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 532
													},
													"sink": {
														"name": "post_socialaccountandappids",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 533
													},
													"sink": {
														"name": "post_socialassettrackingcode",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 534
													},
													"sink": {
														"name": "post_socialauthor",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 535
													},
													"sink": {
														"name": "post_socialcontentprovider",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 536
													},
													"sink": {
														"name": "post_socialfbstories",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 537
													},
													"sink": {
														"name": "post_socialfbstorytellers",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 538
													},
													"sink": {
														"name": "post_socialinteractioncount",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 539
													},
													"sink": {
														"name": "post_socialinteractiontype",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 540
													},
													"sink": {
														"name": "post_sociallanguage",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 541
													},
													"sink": {
														"name": "post_sociallatlong",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 542
													},
													"sink": {
														"name": "post_sociallikeadds",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 543
													},
													"sink": {
														"name": "post_socialmentions",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 544
													},
													"sink": {
														"name": "post_socialowneddefinitioninsighttype",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 545
													},
													"sink": {
														"name": "post_socialowneddefinitioninsightvalue",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 546
													},
													"sink": {
														"name": "post_socialowneddefinitionmetric",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 547
													},
													"sink": {
														"name": "post_socialowneddefinitionpropertyvspost",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 548
													},
													"sink": {
														"name": "post_socialownedpostids",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 549
													},
													"sink": {
														"name": "post_socialownedpropertyid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 550
													},
													"sink": {
														"name": "post_socialownedpropertyname",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 551
													},
													"sink": {
														"name": "post_socialownedpropertypropertyvsapp",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 552
													},
													"sink": {
														"name": "post_socialpageviews",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 553
													},
													"sink": {
														"name": "post_socialpostviews",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 554
													},
													"sink": {
														"name": "post_socialpubcomments",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 555
													},
													"sink": {
														"name": "post_socialpubposts",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 556
													},
													"sink": {
														"name": "post_socialpubrecommends",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 557
													},
													"sink": {
														"name": "post_socialpubsubscribers",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 558
													},
													"sink": {
														"name": "post_socialterm",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 559
													},
													"sink": {
														"name": "post_socialtotalsentiment",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 560
													},
													"sink": {
														"name": "post_state",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 561
													},
													"sink": {
														"name": "post_survey",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 562
													},
													"sink": {
														"name": "post_t_time_info",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 563
													},
													"sink": {
														"name": "post_tnt",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 564
													},
													"sink": {
														"name": "post_tnt_action",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 565
													},
													"sink": {
														"name": "post_transactionid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 566
													},
													"sink": {
														"name": "post_user_server",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 567
													},
													"sink": {
														"name": "post_video",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 568
													},
													"sink": {
														"name": "post_videoad",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 569
													},
													"sink": {
														"name": "post_videoadinpod",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 570
													},
													"sink": {
														"name": "post_videoadlength",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 571
													},
													"sink": {
														"name": "post_videoadname",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 572
													},
													"sink": {
														"name": "post_videoadplayername",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 573
													},
													"sink": {
														"name": "post_videoadpod",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 574
													},
													"sink": {
														"name": "post_videochannel",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 575
													},
													"sink": {
														"name": "post_videochapter",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 576
													},
													"sink": {
														"name": "post_videocontenttype",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 577
													},
													"sink": {
														"name": "post_videolength",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 578
													},
													"sink": {
														"name": "post_videoname",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 579
													},
													"sink": {
														"name": "post_videoplayername",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 580
													},
													"sink": {
														"name": "post_videoqoebitrateaverageevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 581
													},
													"sink": {
														"name": "post_videoqoebitratechangecountevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 582
													},
													"sink": {
														"name": "post_videoqoebuffercountevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 583
													},
													"sink": {
														"name": "post_videoqoebuffertimeevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 584
													},
													"sink": {
														"name": "post_videoqoedroppedframecountevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 585
													},
													"sink": {
														"name": "post_videoqoeerrorcountevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 586
													},
													"sink": {
														"name": "post_videoqoetimetostartevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 587
													},
													"sink": {
														"name": "post_videosegment",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 588
													},
													"sink": {
														"name": "post_visid_high",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 589
													},
													"sink": {
														"name": "post_visid_low",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 590
													},
													"sink": {
														"name": "post_visid_type",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 591
													},
													"sink": {
														"name": "post_zip",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 592
													},
													"sink": {
														"name": "prev_page",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 593
													},
													"sink": {
														"name": "product_list",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 594
													},
													"sink": {
														"name": "product_merchandising",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 595
													},
													"sink": {
														"name": "prop1",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 596
													},
													"sink": {
														"name": "prop2",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 597
													},
													"sink": {
														"name": "prop3",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 598
													},
													"sink": {
														"name": "prop4",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 599
													},
													"sink": {
														"name": "prop5",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 600
													},
													"sink": {
														"name": "prop6",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 601
													},
													"sink": {
														"name": "prop7",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 602
													},
													"sink": {
														"name": "prop8",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 603
													},
													"sink": {
														"name": "prop9",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 604
													},
													"sink": {
														"name": "prop10",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 605
													},
													"sink": {
														"name": "prop11",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 606
													},
													"sink": {
														"name": "prop12",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 607
													},
													"sink": {
														"name": "prop13",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 608
													},
													"sink": {
														"name": "prop14",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 609
													},
													"sink": {
														"name": "prop15",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 610
													},
													"sink": {
														"name": "prop16",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 611
													},
													"sink": {
														"name": "prop17",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 612
													},
													"sink": {
														"name": "prop18",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 613
													},
													"sink": {
														"name": "prop19",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 614
													},
													"sink": {
														"name": "prop20",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 615
													},
													"sink": {
														"name": "prop21",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 616
													},
													"sink": {
														"name": "prop22",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 617
													},
													"sink": {
														"name": "prop23",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 618
													},
													"sink": {
														"name": "prop24",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 619
													},
													"sink": {
														"name": "prop25",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 620
													},
													"sink": {
														"name": "prop26",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 621
													},
													"sink": {
														"name": "prop27",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 622
													},
													"sink": {
														"name": "prop28",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 623
													},
													"sink": {
														"name": "prop29",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 624
													},
													"sink": {
														"name": "prop30",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 625
													},
													"sink": {
														"name": "prop31",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 626
													},
													"sink": {
														"name": "prop32",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 627
													},
													"sink": {
														"name": "prop33",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 628
													},
													"sink": {
														"name": "prop34",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 629
													},
													"sink": {
														"name": "prop35",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 630
													},
													"sink": {
														"name": "prop36",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 631
													},
													"sink": {
														"name": "prop37",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 632
													},
													"sink": {
														"name": "prop38",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 633
													},
													"sink": {
														"name": "prop39",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 634
													},
													"sink": {
														"name": "prop40",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 635
													},
													"sink": {
														"name": "prop41",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 636
													},
													"sink": {
														"name": "prop42",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 637
													},
													"sink": {
														"name": "prop43",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 638
													},
													"sink": {
														"name": "prop44",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 639
													},
													"sink": {
														"name": "prop45",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 640
													},
													"sink": {
														"name": "prop46",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 641
													},
													"sink": {
														"name": "prop47",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 642
													},
													"sink": {
														"name": "prop48",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 643
													},
													"sink": {
														"name": "prop49",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 644
													},
													"sink": {
														"name": "prop50",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 645
													},
													"sink": {
														"name": "prop51",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 646
													},
													"sink": {
														"name": "prop52",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 647
													},
													"sink": {
														"name": "prop53",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 648
													},
													"sink": {
														"name": "prop54",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 649
													},
													"sink": {
														"name": "prop55",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 650
													},
													"sink": {
														"name": "prop56",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 651
													},
													"sink": {
														"name": "prop57",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 652
													},
													"sink": {
														"name": "prop58",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 653
													},
													"sink": {
														"name": "prop59",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 654
													},
													"sink": {
														"name": "prop60",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 655
													},
													"sink": {
														"name": "prop61",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 656
													},
													"sink": {
														"name": "prop62",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 657
													},
													"sink": {
														"name": "prop63",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 658
													},
													"sink": {
														"name": "prop64",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 659
													},
													"sink": {
														"name": "prop65",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 660
													},
													"sink": {
														"name": "prop66",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 661
													},
													"sink": {
														"name": "prop67",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 662
													},
													"sink": {
														"name": "prop68",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 663
													},
													"sink": {
														"name": "prop69",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 664
													},
													"sink": {
														"name": "prop70",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 665
													},
													"sink": {
														"name": "prop71",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 666
													},
													"sink": {
														"name": "prop72",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 667
													},
													"sink": {
														"name": "prop73",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 668
													},
													"sink": {
														"name": "prop74",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 669
													},
													"sink": {
														"name": "prop75",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 670
													},
													"sink": {
														"name": "purchaseid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 671
													},
													"sink": {
														"name": "quarterly_visitor",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 672
													},
													"sink": {
														"name": "ref_domain",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 673
													},
													"sink": {
														"name": "ref_type",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 674
													},
													"sink": {
														"name": "referrer",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 675
													},
													"sink": {
														"name": "resolution",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 676
													},
													"sink": {
														"name": "s_kwcid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 677
													},
													"sink": {
														"name": "s_resolution",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 678
													},
													"sink": {
														"name": "sampled_hit",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 679
													},
													"sink": {
														"name": "search_engine",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 680
													},
													"sink": {
														"name": "search_page_num",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 681
													},
													"sink": {
														"name": "secondary_hit",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 682
													},
													"sink": {
														"name": "service",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 683
													},
													"sink": {
														"name": "socialaccountandappids",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 684
													},
													"sink": {
														"name": "socialassettrackingcode",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 685
													},
													"sink": {
														"name": "socialauthor",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 686
													},
													"sink": {
														"name": "socialcontentprovider",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 687
													},
													"sink": {
														"name": "socialfbstories",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 688
													},
													"sink": {
														"name": "socialfbstorytellers",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 689
													},
													"sink": {
														"name": "socialinteractioncount",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 690
													},
													"sink": {
														"name": "socialinteractiontype",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 691
													},
													"sink": {
														"name": "sociallanguage",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 692
													},
													"sink": {
														"name": "sociallatlong",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 693
													},
													"sink": {
														"name": "sociallikeadds",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 694
													},
													"sink": {
														"name": "socialmentions",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 695
													},
													"sink": {
														"name": "socialowneddefinitioninsighttype",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 696
													},
													"sink": {
														"name": "socialowneddefinitioninsightvalue",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 697
													},
													"sink": {
														"name": "socialowneddefinitionmetric",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 698
													},
													"sink": {
														"name": "socialowneddefinitionpropertyvspost",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 699
													},
													"sink": {
														"name": "socialownedpostids",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 700
													},
													"sink": {
														"name": "socialownedpropertyid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 701
													},
													"sink": {
														"name": "socialownedpropertyname",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 702
													},
													"sink": {
														"name": "socialownedpropertypropertyvsapp",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 703
													},
													"sink": {
														"name": "socialpageviews",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 704
													},
													"sink": {
														"name": "socialpostviews",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 705
													},
													"sink": {
														"name": "socialpubcomments",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 706
													},
													"sink": {
														"name": "socialpubposts",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 707
													},
													"sink": {
														"name": "socialpubrecommends",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 708
													},
													"sink": {
														"name": "socialpubsubscribers",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 709
													},
													"sink": {
														"name": "socialterm",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 710
													},
													"sink": {
														"name": "socialtotalsentiment",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 711
													},
													"sink": {
														"name": "sourceid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 712
													},
													"sink": {
														"name": "state",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 713
													},
													"sink": {
														"name": "stats_server",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 714
													},
													"sink": {
														"name": "t_time_info",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 715
													},
													"sink": {
														"name": "tnt",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 716
													},
													"sink": {
														"name": "tnt_action",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 717
													},
													"sink": {
														"name": "tnt_post_vista",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 718
													},
													"sink": {
														"name": "transactionid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 719
													},
													"sink": {
														"name": "truncated_hit",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 720
													},
													"sink": {
														"name": "ua_color",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 721
													},
													"sink": {
														"name": "ua_os",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 722
													},
													"sink": {
														"name": "ua_pixels",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 723
													},
													"sink": {
														"name": "user_agent",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 724
													},
													"sink": {
														"name": "user_hash",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 725
													},
													"sink": {
														"name": "user_server",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 726
													},
													"sink": {
														"name": "userid",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 727
													},
													"sink": {
														"name": "username",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 728
													},
													"sink": {
														"name": "va_closer_detail",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 729
													},
													"sink": {
														"name": "va_closer_id",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 730
													},
													"sink": {
														"name": "va_finder_detail",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 731
													},
													"sink": {
														"name": "va_finder_id",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 732
													},
													"sink": {
														"name": "va_instance_event",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 733
													},
													"sink": {
														"name": "va_new_engagement",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 734
													},
													"sink": {
														"name": "video",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 735
													},
													"sink": {
														"name": "videoad",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 736
													},
													"sink": {
														"name": "videoadinpod",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 737
													},
													"sink": {
														"name": "videoadlength",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 738
													},
													"sink": {
														"name": "videoadname",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 739
													},
													"sink": {
														"name": "videoadplayername",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 740
													},
													"sink": {
														"name": "videoadpod",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 741
													},
													"sink": {
														"name": "videochannel",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 742
													},
													"sink": {
														"name": "videochapter",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 743
													},
													"sink": {
														"name": "videocontenttype",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 744
													},
													"sink": {
														"name": "videolength",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 745
													},
													"sink": {
														"name": "videoname",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 746
													},
													"sink": {
														"name": "videoplayername",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 747
													},
													"sink": {
														"name": "videoqoebitrateaverageevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 748
													},
													"sink": {
														"name": "videoqoebitratechangecountevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 749
													},
													"sink": {
														"name": "videoqoebuffercountevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 750
													},
													"sink": {
														"name": "videoqoebuffertimeevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 751
													},
													"sink": {
														"name": "videoqoedroppedframecountevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 752
													},
													"sink": {
														"name": "videoqoeerrorcountevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 753
													},
													"sink": {
														"name": "videoqoetimetostartevar",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 754
													},
													"sink": {
														"name": "videosegment",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 755
													},
													"sink": {
														"name": "visid_high",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 756
													},
													"sink": {
														"name": "visid_low",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 757
													},
													"sink": {
														"name": "visid_new",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 758
													},
													"sink": {
														"name": "visid_timestamp",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 759
													},
													"sink": {
														"name": "visid_type",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 760
													},
													"sink": {
														"name": "visit_keywords",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 761
													},
													"sink": {
														"name": "visit_num",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 762
													},
													"sink": {
														"name": "visit_page_num",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 763
													},
													"sink": {
														"name": "visit_referrer",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 764
													},
													"sink": {
														"name": "visit_search_engine",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 765
													},
													"sink": {
														"name": "visit_start_page_url",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 766
													},
													"sink": {
														"name": "visit_start_pagename",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 767
													},
													"sink": {
														"name": "visit_start_time_gmt",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 768
													},
													"sink": {
														"name": "weekly_visitor",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 769
													},
													"sink": {
														"name": "yearly_visitor",
														"type": "String",
														"physicalType": "nvarchar"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "AnalyticsDatafeed",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SQLTableQ",
											"type": "DatasetReference",
											"parameters": {
												"tablename": "RawAnalytics",
												"schemaname": "hco"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"filename": {
						"type": "Array",
						"defaultValue": []
					}
				},
				"folder": {
					"name": "HCO"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AnalyticsDatafeed')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_broadcastingDI_full')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "BroadcastingData",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"modifiedDatetimeStart": {
									"value": "2020-11-03T00:00:00.00Z",
									"type": "Expression"
								},
								"modifiedDatetimeEnd": {
									"value": "2022-11-03T00:00:00.00Z",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CopyToSQL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": false,
												"wildcardFolderPath": {
													"value": "adobe-campaign--datafeed/prod/prod_br",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": true,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Delivery log ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Delivery log ID",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Label",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Label",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Event date",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Event date",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "Reason",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Reason",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Nature of failure",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Nature of failure",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Failure type",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Failure type",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Last modified",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Last modified",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "ProfileKey",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ProfileKey",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Status",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Profile delivery log",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Profile delivery log",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Content variant",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Content variant",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Delivery Label",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Delivery Label",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Delivery Title",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Delivery Title",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Delivery ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Delivery ID",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "ACS ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ACS ID",
														"type": "String",
														"physicalType": "nvarchar"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "BroadcastingData",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SQLTableQ",
											"type": "DatasetReference",
											"parameters": {
												"tablename": "RawbroadcastingLog",
												"schemaname": "hco"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "LogRunTime",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[hco].[create_sys_log]",
							"storedProcedureParameters": {
								"datafactory": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"triggerName": {
									"value": null,
									"type": "String"
								},
								"TriggerTime": {
									"value": null,
									"type": "String"
								},
								"TriggerType": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LSSQLPOC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "HCO"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BroadcastingData')]",
				"[concat(variables('factoryId'), '/linkedServices/LSSQLPOC')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_broadcastingDaily_Incre')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "BroadcastingData",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"modifiedDatetimeStart": {
									"value": "@adddays(utcnow(),-1)",
									"type": "Expression"
								},
								"modifiedDatetimeEnd": {
									"value": "@utcnow()",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CopyToSQL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": false,
												"wildcardFolderPath": {
													"value": "adobe-campaign--datafeed/prod/prod_br",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": true,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Delivery log ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Delivery log ID",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Label",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Label",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Event date",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Event date",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "Reason",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Reason",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Nature of failure",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Nature of failure",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Failure type",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Failure type",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Last modified",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Last modified",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "ProfileKey",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ProfileKey",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Status",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Profile delivery log",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Profile delivery log",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Content variant",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Content variant",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Delivery Label",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Delivery Label",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Delivery Title",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Delivery Title",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Delivery ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Delivery ID",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "ACS ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ACS ID",
														"type": "String",
														"physicalType": "nvarchar"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "BroadcastingData",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SQLTableQ",
											"type": "DatasetReference",
											"parameters": {
												"tablename": "RawbroadcastingLog",
												"schemaname": "hco"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "LogRunTime",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[hco].[create_sys_log]",
							"storedProcedureParameters": {
								"datafactory": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"triggerName": {
									"value": null,
									"type": "String"
								},
								"TriggerTime": {
									"value": null,
									"type": "String"
								},
								"TriggerType": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LSSQLPOC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "HCO"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BroadcastingData')]",
				"[concat(variables('factoryId'), '/linkedServices/LSSQLPOC')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_trackingDaily_Incre')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TrackingData",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"modifiedDatetimeStart": {
									"value": "@adddays(utcnow(),-1)",
									"type": "Expression"
								},
								"modifiedDatetimeEnd": {
									"value": "@utcnow()",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CopyToSQL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": false,
												"wildcardFolderPath": {
													"value": "adobe-campaign--datafeed/prod/prod_tr",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": [
													"Delivery log ID"
												]
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "TrackingData",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SQLTableQ",
											"type": "DatasetReference",
											"parameters": {
												"tablename": {
													"value": "RawtrackingLog",
													"type": "Expression"
												},
												"schemaname": "hco"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "LogRunTime",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[hco].[create_sys_log]",
							"storedProcedureParameters": {
								"datafactory": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"triggerName": {
									"value": null,
									"type": "String"
								},
								"TriggerTime": {
									"value": null,
									"type": "String"
								},
								"TriggerType": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LSSQLPOC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "HCO"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TrackingData')]",
				"[concat(variables('factoryId'), '/linkedServices/LSSQLPOC')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_trackingDaily_full')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TrackingData",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CopyToSQL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": false,
												"wildcardFolderPath": {
													"value": "adobe-campaign--datafeed/prod/prod_tr",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "TrackingData",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SQLTableQ",
											"type": "DatasetReference",
											"parameters": {
												"tablename": {
													"value": "RawtrackingLog",
													"type": "Expression"
												},
												"schemaname": "hco"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "LogRunTime",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[hco].[create_sys_log]",
							"storedProcedureParameters": {
								"datafactory": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"triggerName": {
									"value": null,
									"type": "String"
								},
								"TriggerTime": {
									"value": null,
									"type": "String"
								},
								"TriggerType": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LSSQLPOC",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "HCO"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TrackingData')]",
				"[concat(variables('factoryId'), '/linkedServices/LSSQLPOC')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/unfinancial Monthly')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "update dashboard_category Unfinancial",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set end of the month as Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\n------Creating Data For unfinancial Monthly  Version 0.2---------------\n\n-- A is the the Account table Output while B is the Account ID's we get from our TVF \n--TVF [membership].[members_Lost_A]  : It will give how many members did we loose in current month, takes date as Parameter \n-- Question : if it takes timestamp till 11:59:00:00 or just the day thing  ?\n\n--We create EOM from the created date so even is created date is \"2024-05-31 23:59:00.000 \" when we do reporting and run scripts, this entry will have EOM as 2024-05-31, hence covered is previous month calculation\n\n--30 columns in CTE \nWITH CTE AS (\n    SELECT \n\tcategory='Unfinancial Monthly',   --- categorise the Data as LosT \n\tB.Unfinancial AS AccountID  , --From TVF we get account id's which were lost in that month \n\tB.DateStart as MonthDate, --TVF are based on EOM dates, it will always have EOM date coz of ALL months CTE logic used in TVF \n\n\n\t--If we do not see MemberGrade in Account table we try to find it from contract table, else use whatever we have in Account table \n     CASE \n\t WHEN A.MemberGrade__c  IS NULL \n\t  Then (select  C.Grade__c from [salesforce].[Contract] C  where C.accountid =B.Unfinancial and  c.currentmembership__c =1)\n\t  Else A.MemberGrade__c \n\t END \n\t AS [MemberGrade], \n\n\t --If we do not see BillingGrade__c in Account table we try to find it from contract table, else use whatever we have in Account table \n      CASE \n\t  WHEN A.BillingGrade__c  IS NULL \n\t\tTHEN   (select  C.MemberBillingGrade__c from [salesforce].[Contract] C  where C.accountid =B.Unfinancial and  c.currentmembership__c =1)\n\t\tWHEN A.BillingGrade__c IN ( '14 - Student - PYear' ,  '14 – Student – PYear' , '16 - Student - PYear',  '17 - Student - PYear' , '18 - Student - PYear' ) \n\t\tThen  '14 - Student - PYear'         \n\t  ELSE  A.BillingGrade__c \n\t\tEND \n\t\tAS [BillingGrade], \n\n       --We create BranchGroup from Branch Infromation avaialble in Account table  \n\t\tCASE            \n\t\twhen A.branch__c ='Canberra'  then  'CANB'          \n\t\twhen A.branch__c ='New South Wales'  then  'NSW'          \n\t\twhen A.branch__c ='Northern Territory' then  'NT'          \n\t\twhen A.branch__c ='Overseas' then  'os'          \n\t\twhen A.branch__c IN  ('Queensland' , 'South Pacific Overseas')  then  'QLD'          \n\t\twhen A.branch__c ='South Australia' then  'SA'          \n\t\twhen A.branch__c ='Tasmania' then  'TAS'          \n\t\twhen A.branch__c ='Victoria' then  'VIC'          \n\t\twhen A.branch__c ='Western Australia' then  'WA'          \n\t\twhen A.branch__C is NULL and HiddenUserLocationState__c ='Overseas' then 'os'          \n\t\tELSE null          \n       END as [BranchGroup]  , \n\t\t\n\n\t\t-- Codifying the gender from Account table & assessment Table where ever Present \n\t\tCASE           \n\t\tWhen A.Gender__c in ('F', 'Female' )  or  A.Title__c  in ('Miss', 'Mrs', 'Ms')  Then 'Female'          \n\t\tWhen A.Gender__c in ('MALE', 'M')  or  A.Title__c  in ('Mr.', 'Sir', 'Ms')   then 'Male'          \n\t\tWhen A.Gender__c is NULL then (select DISTINCT(c.Applicant_Title__c) from  [dbo].[assessment] c  where B.Unfinancial = c.applicantname__C )          \n\t\telse A.Gender__c          \n\t\tend as [Gender]    , \n\n\t\t\n\t\t\n\t\t--Codifying certification level into [certificationGroup] from Account object \n\t\tCASE          \n\t\twhen  CertificationLevel__c in ('CP','CP Lapsed') then 'CP'          \n\t\twhen CertificationLevel__c in ('CT','CT Lapsed') then 'CT'          \n\t\twhen CertificationLevel__c in ('Not Certified') then 'Not Certified'          \n\t\telse NULL          \n\t\tend as [certificationGroup],\n\t\t\n\t\t---Fetching Attributes from Account table \n\n\t\tCertificationLevel__c as  [CertificationLevel] ,           \n\t\t A.PPP__c as PPP ,              \n\t\t A.id as [AccountObjID],           \n\t\t A.email__c as [Email],           \n\t\t A.type as [AccountType],          \n\t\t A.MembershipNumber__c as [MembershipNumber],    \n\t\t A.DateOfBirth__c, \n\t\tA.Days_since_Current_Membership_Expiry__c, \n\t\tA.HiddenFullName__c as [PersonFullName],          \n\t\tA.CurrentMembershipExpiry__c as [CurrentMembershipExpiry],          \n\t\tA.PersonAccountJoinedDate__c as [JoinedDate],  \n\t\tA.branch__c as [Branch],           \n\t\tA.Geography__c as [Geography],           \n\t\tA.[ShippingCountry] as [WorkCountry],           \n\t\tA.[BillingCountry] as [HomeCountry],           \n\t\tA.Former_Billing_Grade1__c  ,           \n\t\t\n\n\t\t---Fetching Membership_Status of the account from Account object and if not present doing a lookup in Contract table \n\t   CASE \n\t   WHEN A.Membership_Status__c  IS NULL \n\t   Then (select  C.Status from [salesforce].[Contract] C  where C.accountid =B.Unfinancial and  c.currentmembership__c =1)\n\t   ELSE A.Membership_Status__c\n\t   END \n\t   as Membership_Status,       \n\t\t\n\n\t--Concanating Billing Grade & Former Billing Grades into BillingGradeConcat , To be used in next CTE \n\t\tCONCAT(A.BillingGrade__c, '_',A.Former_Billing_Grade1__c) as BillingGradeConcat ,  \n\n\n\n\t\tCONVERT(DATE, DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0)) AS ExtractDate,  --it will return the First Day of the month on any day , '2024-06-01'\n\t\t\n\t\t LEFT(DATENAME(MONTH, GETDATE()), 3) + '-' + RIGHT(CONVERT(VARCHAR(4), YEAR(GETDATE())), 2) AS [FYYear],  --It will return month & Year , exmaple Jun-24 \n\n\n\t\t--Case statement will look for financial year \n\t    CASE\n\t\tWHEN CONVERT(DATE, DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0))  between '2024-07-01' and '2025-06-30'\n\t\tTHEN 'FY 25'\n\t\tWHEN CONVERT(DATE, DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0))  between '2023-07-01' and '2024-06-30'\n\t\tTHEN 'FY 24'\n\t\t ELSE NULL \n\t\tEND \n\t\tas [FY],\t\n\t\t\n\t\tLEFT(LEFT(DATENAME(MONTH, GETDATE()), 3) + '-' + RIGHT(CONVERT(VARCHAR(4), YEAR(GETDATE())), 2),3)   AS [Month]     --it will return the current month \n\t  \t  \n\t\t  --update the Function here \n\t      \tFROM  [membership].[members_unfinancial_A]('@{variables('date')}') B\n\t\t    --FROM  [membership].[members_unfinancial_A]('2024-06-30') B\n\t\t\tINNER JOIN [salesforce].[Account] A \n\t\t\tON B.Unfinancial = A.id\n)\n,\n-----Updating the Billing Grade Values -------\n\n\nCTE1 \nAS\n(\nselect \ncategory,\nAccountID,\nMonthDate,\n[MemberGrade]\t,\nBranchGroup,\t\nGender\t,\ncertificationGroup\t,\nCertificationLevel,\n[PPP],\nAccountObjID,\n[Email]\t,\nAccountType\t,\nMembershipNumber,\n DateOfBirth__c\t,\nDays_since_Current_Membership_Expiry__c,\nPersonFullName\t,\nCurrentMembershipExpiry\t,\nJoinedDate\t,\nBranch\t,\nGeography,\nWorkCountry,\nHomeCountry\t,\nFormer_Billing_Grade1__c\t,\nMembership_Status,\nBillingGradeConcat,\nExtractDate\t,\n[FYYear]\t,\nFY\t,\nMonth, \n\n--Updating Billing Grade based on Previous Billing Grades \nCASE     \n   WHEN   Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30  and billinggradeconcat ='3 - Full Fee_2 - PPP Full fee' \n   Then  '2 - PPP Full fee'    \n   WHEN Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and  billinggradeconcat ='3 - Full Fee_1 - Continuing'\n   Then   '1 - Continuing'    \n   WHEN Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and  billinggradeconcat ='7 - Graduate - 2nd Year_4 - Graduate - 1st Year' \n   Then    '4 - Graduate - 1st Year'    \n   WHEN   Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and   billinggradeconcat ='3 - Full Fee_7 - Graduate - 2nd Year' \n   Then   '7 - Graduate - 2nd Year'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='4 - Graduate - 1st Year_10 - Student - PPP' \n   Then  '10 - Student - PPP'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='4 - Graduate - 1st Year_11 - Student' \n   Then   '11 - Student'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and   billinggradeconcat ='3 - Full Fee_12 - Complimentary' \n   Then  '12 - Complimentary'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='3 - Full Fee 13 - Honoured' \n   Then  '13 - Honoured'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and   billinggradeconcat ='4 - Graduate - 1st Year_14 - Student - PYear'  \n   Then  '14 - Student - PYear'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='4 - Graduate - 1st Year_15 - Student - ACSF' \n   Then   '15 - Student - ACSF'    \n   WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='3 - Full Fee_16 - Unemployed / On Hiatus' \n   Then  '16 - Unemployed / On Hiatus'    \n  WHEN  Former_Billing_Grade1__c  IS  NOT NULL  and Days_since_Current_Membership_Expiry__c   >= -30 and    billinggradeconcat ='18 - Digital Subscriber 20 - Skills Applicant' \n  Then  '20 - Skills Applicant'    \n  ELSE [BillingGrade]\n   END    \n   AS [BillingGrade]\n\n\nfrom CTE\n\n)\n\n, \n\n----- Transofromation Heirarchy & Subsegment  --------------------\n----- we have upgraded billing grade in previous CTE  which is also used by BGG , create  BGG in this cte \n--30 columns \n--we are using this CTE to create the BGG column using billing grade\nCTE2 \nAS (\n    SELECT \n\t\ncategory,\nAccountID,\nMonthDate,\n[MemberGrade]\t,\nBranchGroup,\t\nGender\t,\ncertificationGroup\t,\nCertificationLevel,\n[PPP],\nAccountObjID,\n[Email]\t,\nAccountType\t,\nMembershipNumber,\nDateOfBirth__c\t,\nDays_since_Current_Membership_Expiry__c,\nPersonFullName\t,\nCurrentMembershipExpiry\t,\nJoinedDate\t,\nBranch\t,\nGeography,\nWorkCountry,\nHomeCountry\t,\nFormer_Billing_Grade1__c\t,\nMembership_Status,\nBillingGradeConcat,\nExtractDate\t,\n[FYYear]\t,\nFY\t,\nMonth, \nBillingGrade,\n\n\n\t\t--Codifying Billing grade into BGG from Account Object \n\t    CASE           \n\t\tWhen [BillingGrade] in ('0 - n/a', '1 - Continuing' , '12 - Complimentary','13 - Honoured', '16 - Unemployed / On Hiatus', '5 - Life Member')   Then 'Other'          \n\t\tWhen [BillingGrade] in ('10 - Student - PPP', '11 - Student', '15 - Student - ACSF', '15 – Student – ACSF')   then 'Student'          \n\t\tWhen [BillingGrade] in ('14 - Student - PYear', '14 – Student – PYear', '16 - Student - PYear', '17 - Student - PYear', '18 - Student - PYear') then 'Professional Year'          \n\t\tWhen [BillingGrade] in ('17 - PPP MOU2', '2 - PPP Full fee') then 'PPP'          \n\t\tWhen [BillingGrade] in ('19 - Subscriber - PPP') then 'Subscriber'          \n\t\tWhen [BillingGrade] in ('20 - Skills Applicant') then 'Overseas'          \n\t\tWhen [BillingGrade] in ('7 - Graduate - 2nd Year') then 'Graduate'          \n\t\tWhen [BillingGrade] in ('3 - Full Fee') then 'Full Fee'          \n\t\tWhen [BillingGrade] in ('8 - Retired') then 'Retired'          \n\t\telse NULL           \n\t\tend as [BGG]\n\n         from CTE1), \n\n\n--We create  Heirarchy based on MemberGrade & Billing Grade \n-- we Update Branch Group based on BGG again\n\n\n\t\tCTE3 as (\n\n\n\t\tselect \ncategory,\nAccountID,\nMonthDate,\n[MemberGrade]\t,\nGender\t,\ncertificationGroup\t,\nCertificationLevel,\n[PPP],\nAccountObjID,\n[Email]\t,\nAccountType\t,\nMembershipNumber,\nDateOfBirth__c\t,\nDays_since_Current_Membership_Expiry__c,\nPersonFullName\t,\nCurrentMembershipExpiry\t,\nJoinedDate\t,\nBranch\t,\nGeography,\nWorkCountry,\nHomeCountry\t,\nFormer_Billing_Grade1__c\t,\nMembership_Status,\nBillingGradeConcat,\nExtractDate\t,\n[FYYear]\t,\nFY\t,\nMonth, \nBillingGrade,\nBGG, \n\n\nCASE \nWhen BGG ='Overseas' THEN  'OS'\n       ELSE BranchGroup \n\t END  as BranchGroup , \n\n\n        CASE    \n            WHEN [MemberGrade] IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow')\n\t\t\tTHEN 'Professional'    \n\n            WHEN [MemberGrade] IN ( 'Associate' )\n\t\t\t AND \n\t\t\t[BillingGrade] IN (    \n                '1 - Continuing', \n\t\t\t\t'3 - Full Fee', \n\t\t\t\t'5 - Life Member',    \n                '2 - PPP Full Fee',\n\t\t\t\t'3 - Full Fee',\n\t\t\t\t'17 - PPP MOU2',    \n                '8 - Retired'  \n            ) THEN 'Full Fee Associates'    \n\n            WHEN ( [MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber', 'Honorary Member')    OR  [MemberGrade] in ('Associate') )\n                AND [BillingGrade] IN (    \n                    '4 - Graduate - 1st Year', \n\t\t\t\t\t'7 - Graduate - 2nd Year',    \n                    '10 - Student - PPP',\n\t\t\t\t\t'11 - Student',    \n                    '15 - Student - ACSF',\n\t\t\t\t\t'16 - Unemployed / On Hiatus'    \n                ) THEN 'Discounted (Full Benefits)'    \n\n            WHEN  ( [MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber', 'Honorary Member')   OR  [MemberGrade] in ('Associate') )\n                AND [BillingGrade]\n\t\t\t\tIN ('20 - Skills Applicant') \n\t\t\t\tTHEN 'Skills Applicants'  \n\n            WHEN  ( [MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber') OR  [MemberGrade] in ('Associate', 'Honorary Member') )\n\t\t\t                AND [BillingGrade] IN \n\t\t\t\t\t\t\t('11 - Complimentary', \n\t\t\t\t\t\t\t'12 - Complimentary', \n\t\t\t\t\t\t\t'13 - Honoured')\n\t\t\t\t\t\t\tTHEN 'Complimentary (Full Benefits)'  \n\n            WHEN  ( [MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber', 'Honorary Member')  OR  [MemberGrade] in ('Associate') )\n                AND [BillingGrade] IN \n\t\t\t\t('14 - Student - PYear') \n\t\t\t\tTHEN 'Professional Year'  \n\n            WHEN  ([MemberGrade] NOT IN ('Member', 'Senior Member', 'Fellow', 'Honorary Fellow', 'Subscriber', 'Honorary Member')   OR  [MemberGrade] in ('Associate', 'Subscriber'))\n                AND [BillingGrade] IN (\n                    '18 - Digital Subscriber',\n\t\t\t\t\t'19 - Subscriber - PPP', \n\t\t\t\t\t'18 - Subscriber - PPP'    \n                ) THEN 'Subscribers (Discounted Limited Benefits)'\n            ELSE NULL -- Set Heirarchy to NULL if none of the conditions are met\n        END AS Heirarchy\n    FROM CTE2\n), \n\n\n\nCTE4\nAs (\n\nSELECT \n\ncategory,\nAccountID,\nMonthDate,\n[MemberGrade]\t,\nBranchGroup,\t\nGender\t,\ncertificationGroup\t,\nCertificationLevel,\n[PPP],\nAccountObjID,\n[Email]\t,\nAccountType\t,\nMembershipNumber,\nDateOfBirth__c\t,\nDays_since_Current_Membership_Expiry__c,\nPersonFullName\t,\nCurrentMembershipExpiry\t,\nJoinedDate\t,\nBranch\t,\nGeography,\nWorkCountry,\nHomeCountry\t,\nFormer_Billing_Grade1__c\t,\nMembership_Status,\nBillingGradeConcat,\nExtractDate\t,\n[FYYear]\t,\nFY\t,\nMonth, \nBillingGrade,\nBGG, \nHeirarchy, \n\n \n    CASE  \n\t--Professinal Segments\n        WHEN [Heirarchy] = 'Professional'\n\t\tAND\n\t\t[BillingGrade] NOT IN ('5 - Life Member', \n\t\t'13 - Honoured', \n\t\t'1 - Continuing', \n\t\t'8 - Retired', \n\t\t'3 - Full Fee',\n\t\t'2 - PPP Full Fee',\n\t\t'17 - PPP MOU2', \n\t\t'16 - PPP MOU2') \n\t\tTHEN 'Member, Senior Member, Fellow'  \n   \n        WHEN [Heirarchy] = 'Professional' \n\t\tAND\n\t\t[BillingGrade] \n\t\tIN \n\t\t('5 - Life Member', \n\t\t'13 - Honoured', \n\t\t'1 - Continuing') \n\t\tTHEN 'Life Members, Hon Members'        \n\n        WHEN [Heirarchy] = 'Professional'\n\t\tAND\n\t\t[BillingGrade] = '3 - Full Fee' \n\t\tTHEN 'Full Fee (Individual)'        \n\n        WHEN [Heirarchy] = 'Professional'\n\t\tAND\n\t\t[BillingGrade] IN (\n\t\t'2 - PPP Full Fee', \n\t\t'17 - PPP MOU2', \n\t\t'16 - PPP MOU2')\n\t\tTHEN 'Full Fee (PPP)'        \n\n        WHEN [Heirarchy] IN ( 'Professional', 'Full Fee Associates')\n\t\tAND \n\t\t[BillingGrade] = '8 - Retired' \n\t\tTHEN 'Retired'        \n  \n      --Full Fee Segments      \n        WHEN [Heirarchy] = 'Full Fee Associates' \n\t\tAND \n\t\t[BillingGrade] \n\t\tIN ('3 - Full Fee',\n\t\t'5 - Life Member',\n\t\t'1 - Continuing') \n\t\tTHEN 'Full Fee Associates (Individual)'  \n\t\t\n        WHEN [Heirarchy] = 'Full Fee Associates' \n\t\tAND \n\t\t[BillingGrade] \n\t\tIN ('2 - PPP Full Fee',\n\t\t'17 - PPP MOU2', \n\t\t'16 - PPP MOU2')\n\t\tTHEN 'Full Fee Associates (PPP)'        \n\n            \n\n\t   --Discounted \n              \n        WHEN [Heirarchy] = 'Discounted (Full Benefits)'\n\t\tAND\n\t\t[BillingGrade] IN\n\t\t('10 - Student - PPP',\n\t\t'11 - Student', \n\t\t'15 - Student - ACSF') \n\t\tTHEN 'Students'        \n\n        WHEN [Heirarchy] = 'Discounted (Full Benefits)'\n\t\tAND \n\t\t[BillingGrade] \n\t\tIN ('4 - Graduate - 1st Year',\n\t\t'7 - Graduate - 2nd Year')\n\t\tTHEN 'Graduate'        \n\n        WHEN [Heirarchy] = 'Discounted (Full Benefits)' \n\t\tAND \n\t\t[BillingGrade] = '16 - Unemployed / On Hiatus' \n\t\tTHEN 'Unemployed'   \n \n --Subscriber\n            \n        WHEN [Heirarchy] = 'Subscribers (Discounted Limited Benefits)'\n\t\tAND \n\t\t[BillingGrade] NOT IN\n\t\t('19 - Subscriber - PPP',\n\t\t'18 - Subscriber - PPP') \n\t\tTHEN 'Individuals'     \n\t\t\n        WHEN [Heirarchy] = 'Subscribers (Discounted Limited Benefits)'\n\t\tAND\n\t\t[BillingGrade] IN\n\t\t('19 - Subscriber - PPP', \n\t\t'18 - Subscriber - PPP')\n\t\tTHEN 'PPP'        \n\n        WHEN [Heirarchy] = 'Professional Year'\n\t\tTHEN 'Professional Year'        \n\n        WHEN [Heirarchy] = 'Complimentary (Full Benefits)' \n\t\tTHEN 'Complimentary'        \n\n        WHEN [Heirarchy] = 'Skills Applicants'\n\t\tTHEN 'Skills Applicants'        \n\n\t\t  WHEN [BGG] = 'Overseas' AND [Heirarchy] != 'Professional' \n\t\t  THEN 'Skills Applicants'  \n\n    END as subsegments\nFROM CTE3)\n\n\nselect * from CTE4\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "delete from membership.Mem_dashboard01\nwhere monthdate ='@{variables('date')}'\nand category ='Unfinancial Monthly'\n",
									"type": "Expression"
								},
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "category",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "category",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MonthDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "MonthDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "MemberGrade",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MemberGrade",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BranchGroup",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BranchGroup",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "certificationGroup",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "certificationGroup",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CertificationLevel",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CertificationLevel",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PPP",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PPP",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountObjID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountObjID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DateOfBirth__c",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "DateOfBirth__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Days_since_Current_Membership_Expiry__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Days_since_Current_Membership_Expiry__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "PersonFullName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PersonFullName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CurrentMembershipExpiry",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "CurrentMembershipExpiry",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "JoinedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "JoinedDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Branch",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Branch",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Geography",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Geography",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WorkCountry",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "WorkCountry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HomeCountry",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "HomeCountry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Former_Billing_Grade1__c",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Former_Billing_Grade1__c",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BGG",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BGG",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BillingGradeConcat",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BillingGradeConcat",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExtractDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "ExtractDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "FYYear",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FYYear",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Month",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BillingGrade",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BillingGrade",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Heirarchy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Heirarchy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "subsegments",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "subsegments",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Membership_Status",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Membership_Status",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSQLSP",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLTableQ",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "Mem_dashboard01",
									"schemaname": "membership"
								}
							}
						]
					},
					{
						"name": "Set end of the month as Date",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "date",
							"value": {
								"value": "@formatDateTime(addDays(startOfMonth(addToTime(utcnow(), 1, 'Month')), -1), 'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"date": {
						"type": "String",
						"defaultValue": "2024-12-31"
					}
				},
				"folder": {
					"name": "ACS/Membership/Monthly"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSQLSP')]",
				"[concat(variables('factoryId'), '/datasets/SQLTableQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACSDSSF')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ACSSFPROD",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"object1": {
						"type": "string",
						"defaultValue": "account"
					},
					"object2": {
						"type": "string",
						"defaultValue": "assessment"
					}
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "user"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ACSSFPROD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACSDSSFOR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ACSSFPROD",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceTableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": {
						"value": "@dataset().SourceTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ACSSFPROD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AnalyticsDatafeed')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Datafeeds",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HCO DS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "adobe-analytics--datafeed/prod/",
						"container": "adobe-datafeeds"
					},
					"columnDelimiter": "\t",
					"compressionCodec": "gzip",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": ""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Datafeeds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQLSP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LSSQLPOC",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HCO DS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "rahuldata"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LSSQLPOC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureXL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Datafeeds",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "StudentEnrollOver",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ICT Statistics.xlsx",
						"container": "dewr-reports"
					},
					"range": "A1:D568",
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Datafeeds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BroadcastingData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Datafeeds",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HCO DS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "adobe-campaign--datafeed/prod/prod_br",
							"type": "Expression"
						},
						"container": "adobe-datafeeds"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Datafeeds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLTableQ')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LSSQLPOC",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string",
						"defaultValue": "Employees"
					},
					"schemaname": {
						"type": "string",
						"defaultValue": "dbo"
					}
				},
				"folder": {
					"name": "HCO DS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schemaname",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LSSQLPOC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesforceMSANew')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ACSSFPRODNEW",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"sourcetable": {
						"type": "string",
						"defaultValue": "Qualification__History"
					}
				},
				"annotations": [],
				"type": "SalesforceV2Object",
				"schema": [],
				"typeProperties": {
					"objectApiName": {
						"value": "@{dataset().sourcetable}",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ACSSFPRODNEW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestBlob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Others"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Transpose.csv",
						"folderPath": "rawAssessment",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"encodingName": "UTF-8",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TrackingData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Datafeeds",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HCO DS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "adobe-campaign--datafeed/prod/prod_tr",
						"container": "adobe-datafeeds"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Datafeeds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Avro_newDP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_DataLake_DPP",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ContainerName": {
						"type": "string"
					},
					"FolderName": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Avro",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FolderName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().ContainerName",
							"type": "Expression"
						}
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_DataLake_DPP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_DatabricksPremiumFolder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dewr_ls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					},
					"Foldername": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Foldername",
							"type": "Expression"
						},
						"fileSystem": "databricskpremium"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dewr_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_canvas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Canvas REST",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"relativeurl": {
						"type": "string",
						"defaultValue": "/api/v1/accounts/2/courses"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().relativeurl",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Canvas REST')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_deltaLakePremium')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_ACSDatabricksDeltaLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"table": "assessment"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ls_ACSDatabricksDeltaLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_googlerest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "GoogleRestAPI",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "search?engine=google_maps"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/GoogleRestAPI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "assessment.parquet",
						"fileSystem": "external"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "DateValue",
						"type": "DATE"
					},
					{
						"name": "opencases",
						"type": "INT64"
					},
					{
						"name": "opencases_lower",
						"type": "INT64"
					},
					{
						"name": "opencases_upper",
						"type": "INT64"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_poc_db')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LSSQLPOC",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "[[dbo]",
					"table": "[[member_dump_jan]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LSSQLPOC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_memebershipdb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureMember_ls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Billing Grade",
						"type": "varchar"
					},
					{
						"name": "Branch Group",
						"type": "varchar"
					},
					{
						"name": "Member Grade",
						"type": "varchar"
					},
					{
						"name": "Date of Birth",
						"type": "date"
					},
					{
						"name": "Gender",
						"type": "varchar"
					},
					{
						"name": "Certification Group",
						"type": "varchar"
					},
					{
						"name": "Certification Level",
						"type": "varchar"
					},
					{
						"name": "PPP",
						"type": "varchar"
					},
					{
						"name": "PPP Account for Current Membership",
						"type": "varchar"
					},
					{
						"name": "Account 18 Digits ID",
						"type": "varchar"
					},
					{
						"name": "Email",
						"type": "varchar"
					},
					{
						"name": "Primary Account Type",
						"type": "varchar"
					},
					{
						"name": "Membership Number",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Membership Status",
						"type": "varchar"
					},
					{
						"name": "Account Name",
						"type": "varchar"
					},
					{
						"name": "Current Membership Expiry",
						"type": "date"
					},
					{
						"name": "Joined Date",
						"type": "date"
					},
					{
						"name": "BGG",
						"type": "varchar"
					},
					{
						"name": "Branch",
						"type": "varchar"
					},
					{
						"name": "Geography",
						"type": "varchar"
					},
					{
						"name": "Home Country",
						"type": "varchar"
					},
					{
						"name": "Work Country",
						"type": "varchar"
					},
					{
						"name": "Former Billing Grade1",
						"type": "varchar"
					},
					{
						"name": "Former Billing Grade2",
						"type": "varchar"
					},
					{
						"name": "Days since Current Membership Expiry",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Days Check",
						"type": "varchar"
					},
					{
						"name": "Billing Grade 2",
						"type": "varchar"
					},
					{
						"name": "BGG2",
						"type": "varchar"
					},
					{
						"name": "Branch Group 2",
						"type": "varchar"
					},
					{
						"name": "Comment",
						"type": "varchar"
					},
					{
						"name": "New?",
						"type": "varchar"
					},
					{
						"name": "Created Date",
						"type": "date"
					},
					{
						"name": "Deactivated Date",
						"type": "date"
					},
					{
						"name": "Certification Expiry Date",
						"type": "date"
					},
					{
						"name": "Date Of Commencement",
						"type": "date"
					},
					{
						"name": "Last Modified Date",
						"type": "date"
					},
					{
						"name": "FY Year",
						"type": "varchar"
					},
					{
						"name": "FY",
						"type": "varchar"
					},
					{
						"name": "Retained_flag",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Churn_flag",
						"type": "int",
						"precision": 10
					},
					{
						"name": "new_flag",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Heirarchy",
						"type": "varchar"
					},
					{
						"name": "At Risk",
						"type": "int",
						"precision": 10
					},
					{
						"name": "subsegments",
						"type": "varchar"
					},
					{
						"name": "Actual",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Order",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ontimerenewal",
						"type": "int",
						"precision": 10
					},
					{
						"name": "growthmonthly",
						"type": "int",
						"precision": 10
					},
					{
						"name": "order month",
						"type": "int",
						"precision": 10
					},
					{
						"name": "On time renewals",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Active",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CP/CT_New",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Lapsed",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CP/CT_Unfinancials",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CP/CT_Total",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Active_financial",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Month",
						"type": "varchar"
					},
					{
						"name": "ExtractDate",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "member_dump"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureMember_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACS Databricks Premium')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-788505602918573.13.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('ACS Databricks Premium_accessToken')]"
					},
					"existingClusterId": "[parameters('ACS Databricks Premium_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACSSFPROD')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Salesforce",
				"typeProperties": {
					"environmentUrl": "[parameters('ACSSFPROD_properties_typeProperties_environmentUrl')]",
					"username": "[parameters('ACSSFPROD_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ACSSFPROD_password')]"
					},
					"securityToken": {
						"type": "SecureString",
						"value": "[parameters('ACSSFPROD_securityToken')]"
					},
					"apiVersion": "51.0"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACSSFPRODNEW')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SalesforceV2",
				"typeProperties": {
					"environmentUrl": "[parameters('ACSSFPRODNEW_properties_typeProperties_environmentUrl')]",
					"clientId": "[parameters('ACSSFPRODNEW_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('ACSSFPRODNEW_clientSecret')]"
					},
					"apiVersion": "51.0",
					"authenticationType": "OAuth2ClientCredential"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksPremium')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-788505602918573.13.azuredatabricks.net",
					"clusterId": "0524-225117-lltght03",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricksPremium_accessToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMember_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connects to Member Database",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureMember_ls_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Canvas REST')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Canvas REST_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('Canvas REST_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Canvas REST_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Datafeeds')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Datafeeds_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoogleRestAPI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('GoogleRestAPI_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LSSQLPOC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LSSQLPOC_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZKV_DVR')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('LS_AZKV_DVR_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZST_BlobLanding')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_AZST_BlobLanding_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AzureVM-IR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureVM-IR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ls_ACSDatabricksDeltaLake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connect to Premium Databricks ",
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-788505602918573.13.azuredatabricks.net",
					"clusterId": "1010-010936-bskqk28r",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('Ls_ACSDatabricksDeltaLake_accessToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ls_AzurePOCDatabricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-7757545527689401.1.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('Ls_AzurePOCDatabricks_accessToken')]"
					},
					"existingClusterId": "[parameters('Ls_AzurePOCDatabricks_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesforceACSProd')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Salesforce",
				"typeProperties": {
					"environmentUrl": "[parameters('SalesforceACSProd_properties_typeProperties_environmentUrl')]",
					"username": "[parameters('SalesforceACSProd_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SalesforceACSProd_password')]"
					},
					"securityToken": {
						"type": "SecureString",
						"value": "[parameters('SalesforceACSProd_securityToken')]"
					},
					"apiVersion": "54.0"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesforceNewAPItest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Just to test the new API versions for SF",
				"annotations": [],
				"type": "SalesforceV2",
				"typeProperties": {
					"environmentUrl": "[parameters('SalesforceNewAPItest_properties_typeProperties_environmentUrl')]",
					"clientId": "[parameters('SalesforceNewAPItest_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('SalesforceNewAPItest_clientSecret')]"
					},
					"apiVersion": "57.0",
					"authenticationType": "OAuth2ClientCredential"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dewr_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('dewr_ls_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('dewr_ls_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_DataLake_DPP')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "new data lake for Prod",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_DataLake_DPP_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_DataLake_DPP_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_SQL_membership')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('ls_SQL_membership_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MSA Weekly')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Case Finalised Forecast",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "New Cases Forecast",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Open Cases Forecast",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-12-04T04:24:00",
						"timeZone": "AUS Eastern Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								8
							],
							"weekDays": [
								"Monday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Case Finalised Forecast')]",
				"[concat(variables('factoryId'), '/pipelines/New Cases Forecast')]",
				"[concat(variables('factoryId'), '/pipelines/Open Cases Forecast')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Membership Monthly')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Lost Monthly",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Active Unfinancial",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "New Monthly",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Renew Monthly",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "unfinancial Monthly",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2024-06-27T22:17:00",
						"timeZone": "AUS Eastern Standard Time",
						"schedule": {
							"minutes": [
								59
							],
							"hours": [
								23
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Lost Monthly')]",
				"[concat(variables('factoryId'), '/pipelines/Active Unfinancial')]",
				"[concat(variables('factoryId'), '/pipelines/New Monthly')]",
				"[concat(variables('factoryId'), '/pipelines/Renew Monthly')]",
				"[concat(variables('factoryId'), '/pipelines/unfinancial Monthly')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NewSFRefresh_Hourly')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "QualificationAssessmentANZSCO__c Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('NewSFRefresh_Hourly_properties_QualificationAssessmentANZSCO__c Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('NewSFRefresh_Hourly_properties_QualificationAssessmentANZSCO__c Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('NewSFRefresh_Hourly_properties_QualificationAssessmentANZSCO__c Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('NewSFRefresh_Hourly_properties_QualificationAssessmentANZSCO__c Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new Account Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new Account Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new Account Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('NewSFRefresh_Hourly_properties_SF new Account Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('NewSFRefresh_Hourly_properties_SF new Account Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new ANZSCOGroup__c refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new ANZSCOGroup__c refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new ANZSCOGroup__c refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('NewSFRefresh_Hourly_properties_SF new ANZSCOGroup__c refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('NewSFRefresh_Hourly_properties_SF new ANZSCOGroup__c refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new ANZSCOSkill__c Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new ANZSCOSkill__c Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new ANZSCOSkill__c Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('NewSFRefresh_Hourly_properties_SF new ANZSCOSkill__c Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('NewSFRefresh_Hourly_properties_SF new ANZSCOSkill__c Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new Assessment_Comment__c Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new Assessment_Comment__c Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new Assessment_Comment__c Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('NewSFRefresh_Hourly_properties_SF new Assessment_Comment__c Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('NewSFRefresh_Hourly_properties_SF new Assessment_Comment__c Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new Assessment History Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new Assessment History Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new Assessment History Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('NewSFRefresh_Hourly_properties_SF new Assessment History Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('NewSFRefresh_Hourly_properties_SF new Assessment History Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new AssessmentANZSCO__c Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new AssessmentANZSCO__c Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new AssessmentANZSCO__c Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('NewSFRefresh_Hourly_properties_SF new AssessmentANZSCO__c Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('NewSFRefresh_Hourly_properties_SF new AssessmentANZSCO__c Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new AssessmentANZSCOSkill Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new AssessmentANZSCOSkill Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new AssessmentANZSCOSkill Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('NewSFRefresh_Hourly_properties_SF new AssessmentANZSCOSkill Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('NewSFRefresh_Hourly_properties_SF new AssessmentANZSCOSkill Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new AssessmentSkill__c Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new AssessmentSkill__c Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new AssessmentSkill__c Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('NewSFRefresh_Hourly_properties_SF new AssessmentSkill__c Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('NewSFRefresh_Hourly_properties_SF new AssessmentSkill__c Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new Case Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new Case Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new Case Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('NewSFRefresh_Hourly_properties_SF new Case Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('NewSFRefresh_Hourly_properties_SF new Case Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new Contact Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new Contact Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new Contact Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('NewSFRefresh_Hourly_properties_SF new Contact Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('NewSFRefresh_Hourly_properties_SF new Contact Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new Experience_Assessment_ANZSCO__c Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new Experience_Assessment_ANZSCO__c Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new Experience_Assessment_ANZSCO__c Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('NewSFRefresh_Hourly_properties_SF new Experience_Assessment_ANZSCO__c Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('NewSFRefresh_Hourly_properties_SF new Experience_Assessment_ANZSCO__c Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new Experience Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new Experience Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new Experience Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('NewSFRefresh_Hourly_properties_SF new Experience Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('NewSFRefresh_Hourly_properties_SF new Experience Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new IdentityVerification Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new IdentityVerification Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new IdentityVerification Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('NewSFRefresh_Hourly_properties_SF new IdentityVerification Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('NewSFRefresh_Hourly_properties_SF new IdentityVerification Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new lead Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new lead Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new lead Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('NewSFRefresh_Hourly_properties_SF new lead Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('NewSFRefresh_Hourly_properties_SF new lead Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new Order product refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new Order product refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new Order product refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('NewSFRefresh_Hourly_properties_SF new Order product refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('NewSFRefresh_Hourly_properties_SF new Order product refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new Order Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new Order Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new Order Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('NewSFRefresh_Hourly_properties_SF new Order Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('NewSFRefresh_Hourly_properties_SF new Order Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new Product Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new Product Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new Product Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('NewSFRefresh_Hourly_properties_SF new Product Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('NewSFRefresh_Hourly_properties_SF new Product Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new Qualification Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new Qualification Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new Qualification Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('NewSFRefresh_Hourly_properties_SF new Qualification Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('NewSFRefresh_Hourly_properties_SF new Qualification Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new Skill__c  Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new Skill__c  Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new Skill__c  Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('NewSFRefresh_Hourly_properties_SF new Skill__c  Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('NewSFRefresh_Hourly_properties_SF new Skill__c  Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new SupportingInfo__c Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new SupportingInfo__c Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new SupportingInfo__c Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('NewSFRefresh_Hourly_properties_SF new SupportingInfo__c Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('NewSFRefresh_Hourly_properties_SF new SupportingInfo__c Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new User Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new User Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('NewSFRefresh_Hourly_properties_SF new User Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('NewSFRefresh_Hourly_properties_SF new User Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('NewSFRefresh_Hourly_properties_SF new User Refresh_parameters_schemaname')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 60,
						"startTime": "2024-05-30T23:23:00",
						"timeZone": "AUS Eastern Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/QualificationAssessmentANZSCO__c Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new Account Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new ANZSCOGroup__c refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new ANZSCOSkill__c Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new Assessment_Comment__c Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new Assessment History Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new AssessmentANZSCO__c Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new AssessmentANZSCOSkill Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new AssessmentSkill__c Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new Case Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new Contact Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new Experience_Assessment_ANZSCO__c Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new Experience Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new IdentityVerification Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new lead Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new Order product refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new Order Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new Product Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new Qualification Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new Skill__c  Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new SupportingInfo__c Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new User Refresh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_HCO_pipelines')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_broadcastingDaily_Incre",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "pl_trackingDaily_Incre",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "pl_RawAnalyticsDaily_Incre",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-10-04T00:00:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								0
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_broadcastingDaily_Incre')]",
				"[concat(variables('factoryId'), '/pipelines/pl_trackingDaily_Incre')]",
				"[concat(variables('factoryId'), '/pipelines/pl_RawAnalyticsDaily_Incre')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_Membership_Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Membership Pipelines will be Triggered everyday at 6 AM ",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Update Daily Cases Table Legacy",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "SF EventSponsor Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_Membership_Daily_properties_SF EventSponsor Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_Membership_Daily_properties_SF EventSponsor Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_Membership_Daily_properties_SF EventSponsor Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_Membership_Daily_properties_SF EventSponsor Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF CampaignRefresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_Membership_Daily_properties_SF CampaignRefresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_Membership_Daily_properties_SF CampaignRefresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_Membership_Daily_properties_SF CampaignRefresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_Membership_Daily_properties_SF CampaignRefresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF CampaignMember Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_Membership_Daily_properties_SF CampaignMember Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_Membership_Daily_properties_SF CampaignMember Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_Membership_Daily_properties_SF CampaignMember Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_Membership_Daily_properties_SF CampaignMember Refresh_parameters_schemaname')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2024-02-22T23:20:00",
						"timeZone": "AUS Eastern Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								6
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Update Daily Cases Table Legacy')]",
				"[concat(variables('factoryId'), '/pipelines/SF EventSponsor Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF CampaignRefresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF CampaignMember Refresh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TR_SF_Refresh')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SF Assessment Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF Assessment Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF Assessment Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF Assessment Refresh_parameters_ColumnList')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF Contract Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF Contract Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF Contract Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF Contract Refresh_parameters_ColumnList')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF Assessment History Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF Assessment History Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF Assessment History Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF Assessment History Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF Assessment History Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF AccreditedCourse__c Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF AccreditedCourse__c Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF AccreditedCourse__c Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF AccreditedCourse__c Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF AccreditedCourse__c Refresh_parameters_schemaname')]",
							"brpExtractFrom": "[parameters('TR_SF_Refresh_properties_SF AccreditedCourse__c Refresh_parameters_brpExtractFrom')]",
							"brpExtractTo": "[parameters('TR_SF_Refresh_properties_SF AccreditedCourse__c Refresh_parameters_brpExtractTo')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF Accreditation Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF Accreditation Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF Accreditation Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF Accreditation Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF Accreditation Refresh_parameters_schemaname')]",
							"brpExtractFrom": "[parameters('TR_SF_Refresh_properties_SF Accreditation Refresh_parameters_brpExtractFrom')]",
							"brpExtractTo": "[parameters('TR_SF_Refresh_properties_SF Accreditation Refresh_parameters_brpExtractTo')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF Qualification History Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF Qualification History Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF Qualification History Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF Qualification History Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF Qualification History Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF task Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF task Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF task Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF task Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF task Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF OpportunityLineItem Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF OpportunityLineItem Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF OpportunityLineItem Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF OpportunityLineItem Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF OpportunityLineItem Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF AccountHistoryCstm Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF AccountHistoryCstm Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF AccountHistoryCstm Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF AccountHistoryCstm Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF AccountHistoryCstm Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF AccountHistoryStd Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF AccountHistoryStd Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF AccountHistoryStd Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF AccountHistoryStd Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF AccountHistoryStd Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF Account Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF Account Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF Account Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF Account Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF Account Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF Program Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF Program Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF Program Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF Program Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF Program Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new Experience Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF new Experience Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF new Experience Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF new Experience Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF new Experience Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "Dummy Test",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new Account Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF new Account Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF new Account Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF new Account Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF new Account Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new ANZSCOGroup__c refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF new ANZSCOGroup__c refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF new ANZSCOGroup__c refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF new ANZSCOGroup__c refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF new ANZSCOGroup__c refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new ANZSCOSkill__c Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF new ANZSCOSkill__c Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF new ANZSCOSkill__c Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF new ANZSCOSkill__c Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF new ANZSCOSkill__c Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new Assessment_Comment__c Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF new Assessment_Comment__c Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF new Assessment_Comment__c Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF new Assessment_Comment__c Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF new Assessment_Comment__c Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new AssessmentANZSCO__c Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF new AssessmentANZSCO__c Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF new AssessmentANZSCO__c Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF new AssessmentANZSCO__c Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF new AssessmentANZSCO__c Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new AssessmentANZSCOSkill Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF new AssessmentANZSCOSkill Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF new AssessmentANZSCOSkill Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF new AssessmentANZSCOSkill Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF new AssessmentANZSCOSkill Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new AssessmentSkill__c Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF new AssessmentSkill__c Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF new AssessmentSkill__c Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF new AssessmentSkill__c Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF new AssessmentSkill__c Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new Case Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF new Case Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF new Case Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF new Case Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF new Case Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new Contact Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF new Contact Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF new Contact Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF new Contact Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF new Contact Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new Experience_Assessment_ANZSCO__c Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF new Experience_Assessment_ANZSCO__c Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF new Experience_Assessment_ANZSCO__c Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF new Experience_Assessment_ANZSCO__c Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF new Experience_Assessment_ANZSCO__c Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new IdentityVerification Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF new IdentityVerification Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF new IdentityVerification Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF new IdentityVerification Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF new IdentityVerification Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new lead Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF new lead Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF new lead Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF new lead Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF new lead Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new Order product refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF new Order product refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF new Order product refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF new Order product refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF new Order product refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new Order Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF new Order Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF new Order Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF new Order Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF new Order Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new Qualification Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF new Qualification Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF new Qualification Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF new Qualification Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF new Qualification Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new Skill__c  Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF new Skill__c  Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF new Skill__c  Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF new Skill__c  Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF new Skill__c  Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new SupportingInfo__c Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF new SupportingInfo__c Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF new SupportingInfo__c Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF new SupportingInfo__c Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF new SupportingInfo__c Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new User Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF new User Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF new User Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF new User Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF new User Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new Assessment History Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF new Assessment History Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF new Assessment History Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF new Assessment History Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF new Assessment History Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new Product Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF new Product Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF new Product Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF new Product Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF new Product Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF Contact Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF Contact Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF Contact Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF Contact Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF Contact Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new Assessment Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF new Assessment Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF new Assessment Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF new Assessment Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF new Assessment Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF new AccountContactRelation Refresh",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceTableName": "[parameters('TR_SF_Refresh_properties_SF new AccountContactRelation Refresh_parameters_SourceTableName')]",
							"TargetTableName": "[parameters('TR_SF_Refresh_properties_SF new AccountContactRelation Refresh_parameters_TargetTableName')]",
							"ColumnList": "[parameters('TR_SF_Refresh_properties_SF new AccountContactRelation Refresh_parameters_ColumnList')]",
							"schemaname": "[parameters('TR_SF_Refresh_properties_SF new AccountContactRelation Refresh_parameters_schemaname')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SF Relationship__c Refresh",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 1,
						"startTime": "2022-12-24T00:00:00",
						"timeZone": "AUS Eastern Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SF Assessment Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF Contract Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF Assessment History Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF AccreditedCourse__c Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF Accreditation Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF Qualification History Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF task Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF OpportunityLineItem Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF AccountHistoryCstm Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF AccountHistoryStd Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF Account Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF Program Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new Experience Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/Dummy Test')]",
				"[concat(variables('factoryId'), '/pipelines/SF new Account Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new ANZSCOGroup__c refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new ANZSCOSkill__c Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new Assessment_Comment__c Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new AssessmentANZSCO__c Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new AssessmentANZSCOSkill Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new AssessmentSkill__c Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new Case Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new Contact Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new Experience_Assessment_ANZSCO__c Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new IdentityVerification Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new lead Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new Order product refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new Order Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new Qualification Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new Skill__c  Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new SupportingInfo__c Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new User Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new Assessment History Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new Product Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF Contact Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new Assessment Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF new AccountContactRelation Refresh')]",
				"[concat(variables('factoryId'), '/pipelines/SF Relationship__c Refresh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_forecast_weekly_membership')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Weekly Forecast Runs for membership metrics",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Active Financial Forecast",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Lost Members Forecasting",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "New Members forecasting",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Renewed Members Forecast",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Unfinancial Numbers Forecast",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2024-07-30T00:27:00",
						"timeZone": "AUS Eastern Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								6
							],
							"weekDays": [
								"Sunday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Active Financial Forecast')]",
				"[concat(variables('factoryId'), '/pipelines/Lost Members Forecasting')]",
				"[concat(variables('factoryId'), '/pipelines/New Members forecasting')]",
				"[concat(variables('factoryId'), '/pipelines/Renewed Members Forecast')]",
				"[concat(variables('factoryId'), '/pipelines/Unfinancial Numbers Forecast')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureVM-IR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		}
	]
}